(self["webpackChunkcss_modmenu"] = self["webpackChunkcss_modmenu"] || []).push([
  [736], {
      9984: e => {
          e.exports = function(e, t, i) {
              const n = void 0 !== e.__vccOpts ? e.__vccOpts : e,
                  a = n[t];
              if (void 0 === a) n[t] = i;
              else
                  for (const r in i) void 0 === a[r] && (a[r] = i[r])
          }
      },
      499: (e, t, i) => {
          "use strict";
          i.d(t, {
              $y: () => _e,
              B: () => s,
              BK: () => Qe,
              Bj: () => r,
              EB: () => c,
              Fl: () => nt,
              IU: () => Ne,
              Jd: () => L,
              OT: () => Pe,
              PG: () => Re,
              SU: () => Ue,
              Um: () => Le,
              Vh: () => tt,
              WL: () => Ze,
              X$: () => R,
              X3: () => Fe,
              XI: () => We,
              Xl: () => ze,
              YS: () => Me,
              ZM: () => Ke,
              cE: () => A,
              dq: () => Be,
              iH: () => je,
              j: () => M,
              lk: () => P,
              nZ: () => l,
              oR: () => Ge,
              qj: () => Ee,
              qq: () => k,
              sT: () => C,
              yT: () => Oe
          });
          var n = i(6970);
          let a;
          class r {
              constructor(e = !1) {
                  this.active = !0, this.effects = [], this.cleanups = [], !e && a && (this.parent = a, this.index = (a.scopes || (a.scopes = [])).push(this) - 1)
              }
              run(e) {
                  if (this.active) try {
                      return a = this, e()
                  } finally {
                      a = this.parent
                  } else 0
              }
              on() {
                  a = this
              }
              off() {
                  a = this.parent
              }
              stop(e) {
                  if (this.active) {
                      let t, i;
                      for (t = 0, i = this.effects.length; t < i; t++) this.effects[t].stop();
                      for (t = 0, i = this.cleanups.length; t < i; t++) this.cleanups[t]();
                      if (this.scopes)
                          for (t = 0, i = this.scopes.length; t < i; t++) this.scopes[t].stop(!0);
                      if (this.parent && !e) {
                          const e = this.parent.scopes.pop();
                          e && e !== this && (this.parent.scopes[this.index] = e, e.index = this.index)
                      }
                      this.active = !1
                  }
              }
          }

          function s(e) {
              return new r(e)
          }

          function o(e, t = a) {
              t && t.active && t.effects.push(e)
          }

          function l() {
              return a
          }

          function c(e) {
              a && a.cleanups.push(e)
          }
          const h = e => {
                  const t = new Set(e);
                  return t.w = 0, t.n = 0, t
              },
              u = e => (e.w & v) > 0,
              d = e => (e.n & v) > 0,
              f = ({
                  deps: e
              }) => {
                  if (e.length)
                      for (let t = 0; t < e.length; t++) e[t].w |= v
              },
              p = e => {
                  const {
                      deps: t
                  } = e;
                  if (t.length) {
                      let i = 0;
                      for (let n = 0; n < t.length; n++) {
                          const a = t[n];
                          u(a) && !d(a) ? a.delete(e) : t[i++] = a, a.w &= ~v, a.n &= ~v
                      }
                      t.length = i
                  }
              },
              g = new WeakMap;
          let x = 0,
              v = 1;
          const m = 30;
          let b;
          const y = Symbol(""),
              w = Symbol("");
          class k {
              constructor(e, t = null, i) {
                  this.fn = e, this.scheduler = t, this.active = !0, this.deps = [], this.parent = void 0, o(this, i)
              }
              run() {
                  if (!this.active) return this.fn();
                  let e = b,
                      t = T;
                  while (e) {
                      if (e === this) return;
                      e = e.parent
                  }
                  try {
                      return this.parent = b, b = this, T = !0, v = 1 << ++x, x <= m ? f(this) : S(this), this.fn()
                  } finally {
                      x <= m && p(this), v = 1 << --x, b = this.parent, T = t, this.parent = void 0
                  }
              }
              stop() {
                  this.active && (S(this), this.onStop && this.onStop(), this.active = !1)
              }
          }

          function S(e) {
              const {
                  deps: t
              } = e;
              if (t.length) {
                  for (let i = 0; i < t.length; i++) t[i].delete(e);
                  t.length = 0
              }
          }

          function A(e, t) {
              e.effect && (e = e.effect.fn);
              const i = new k(e);
              t && ((0, n.l7)(i, t), t.scope && o(i, t.scope)), t && t.lazy || i.run();
              const a = i.run.bind(i);
              return a.effect = i, a
          }

          function C(e) {
              e.effect.stop()
          }
          let T = !0;
          const E = [];

          function L() {
              E.push(T), T = !1
          }

          function P() {
              const e = E.pop();
              T = void 0 === e || e
          }

          function M(e, t, i) {
              if (T && b) {
                  let t = g.get(e);
                  t || g.set(e, t = new Map);
                  let n = t.get(i);
                  n || t.set(i, n = h());
                  const a = void 0;
                  I(n, a)
              }
          }

          function I(e, t) {
              let i = !1;
              x <= m ? d(e) || (e.n |= v, i = !u(e)) : i = !e.has(b), i && (e.add(b), b.deps.push(e))
          }

          function R(e, t, i, a, r, s) {
              const o = g.get(e);
              if (!o) return;
              let l = [];
              if ("clear" === t) l = [...o.values()];
              else if ("length" === i && (0, n.kJ)(e)) o.forEach(((e, t) => {
                  ("length" === t || t >= a) && l.push(e)
              }));
              else switch (void 0 !== i && l.push(o.get(i)), t) {
                  case "add":
                      (0, n.kJ)(e) ? (0, n.S0)(i) && l.push(o.get("length")): (l.push(o.get(y)), (0, n._N)(e) && l.push(o.get(w)));
                      break;
                  case "delete":
                      (0, n.kJ)(e) || (l.push(o.get(y)), (0, n._N)(e) && l.push(o.get(w)));
                      break;
                  case "set":
                      (0, n._N)(e) && l.push(o.get(y));
                      break
              }
              if (1 === l.length) l[0] && _(l[0]);
              else {
                  const e = [];
                  for (const t of l) t && e.push(...t);
                  _(h(e))
              }
          }

          function _(e, t) {
              for (const i of (0, n.kJ)(e) ? e : [...e])(i !== b || i.allowRecurse) && (i.scheduler ? i.scheduler() : i.run())
          }
          const O = (0, n.fY)("__proto__,__v_isRef,__isVue"),
              F = new Set(Object.getOwnPropertyNames(Symbol).map((e => Symbol[e])).filter(n.yk)),
              N = B(),
              z = B(!1, !0),
              D = B(!0),
              H = B(!0, !0),
              X = Y();

          function Y() {
              const e = {};
              return ["includes", "indexOf", "lastIndexOf"].forEach((t => {
                  e[t] = function(...e) {
                      const i = Ne(this);
                      for (let t = 0, a = this.length; t < a; t++) M(i, "get", t + "");
                      const n = i[t](...e);
                      return -1 === n || !1 === n ? i[t](...e.map(Ne)) : n
                  }
              })), ["push", "pop", "shift", "unshift", "splice"].forEach((t => {
                  e[t] = function(...e) {
                      L();
                      const i = Ne(this)[t].apply(this, e);
                      return P(), i
                  }
              })), e
          }

          function B(e = !1, t = !1) {
              return function(i, a, r) {
                  if ("__v_isReactive" === a) return !e;
                  if ("__v_isReadonly" === a) return e;
                  if ("__v_isShallow" === a) return t;
                  if ("__v_raw" === a && r === (e ? t ? Ae : Se : t ? ke : we).get(i)) return i;
                  const s = (0, n.kJ)(i);
                  if (!e && s && (0, n.RI)(X, a)) return Reflect.get(X, a, r);
                  const o = Reflect.get(i, a, r);
                  if ((0, n.yk)(a) ? F.has(a) : O(a)) return o;
                  if (e || M(i, "get", a), t) return o;
                  if (Be(o)) {
                      const e = !s || !(0, n.S0)(a);
                      return e ? o.value : o
                  }
                  return (0, n.Kn)(o) ? e ? Pe(o) : Ee(o) : o
              }
          }
          const j = V(),
              W = V(!0);

          function V(e = !1) {
              return function(t, i, a, r) {
                  let s = t[i];
                  if (_e(s) && Be(s) && !Be(a)) return !1;
                  if (!e && !_e(a) && (Oe(a) || (a = Ne(a), s = Ne(s)), !(0, n.kJ)(t) && Be(s) && !Be(a))) return s.value = a, !0;
                  const o = (0, n.kJ)(t) && (0, n.S0)(i) ? Number(i) < t.length : (0, n.RI)(t, i),
                      l = Reflect.set(t, i, a, r);
                  return t === Ne(r) && (o ? (0, n.aU)(a, s) && R(t, "set", i, a, s) : R(t, "add", i, a)), l
              }
          }

          function q(e, t) {
              const i = (0, n.RI)(e, t),
                  a = e[t],
                  r = Reflect.deleteProperty(e, t);
              return r && i && R(e, "delete", t, void 0, a), r
          }

          function G(e, t) {
              const i = Reflect.has(e, t);
              return (0, n.yk)(t) && F.has(t) || M(e, "has", t), i
          }

          function U(e) {
              return M(e, "iterate", (0, n.kJ)(e) ? "length" : y), Reflect.ownKeys(e)
          }
          const $ = {
                  get: N,
                  set: j,
                  deleteProperty: q,
                  has: G,
                  ownKeys: U
              },
              Z = {
                  get: D,
                  set(e, t) {
                      return !0
                  },
                  deleteProperty(e, t) {
                      return !0
                  }
              },
              J = (0, n.l7)({}, $, {
                  get: z,
                  set: W
              }),
              K = (0, n.l7)({}, Z, {
                  get: H
              }),
              Q = e => e,
              ee = e => Reflect.getPrototypeOf(e);

          function te(e, t, i = !1, n = !1) {
              e = e["__v_raw"];
              const a = Ne(e),
                  r = Ne(t);
              t !== r && !i && M(a, "get", t), !i && M(a, "get", r);
              const {
                  has: s
              } = ee(a), o = n ? Q : i ? He : De;
              return s.call(a, t) ? o(e.get(t)) : s.call(a, r) ? o(e.get(r)) : void(e !== a && e.get(t))
          }

          function ie(e, t = !1) {
              const i = this["__v_raw"],
                  n = Ne(i),
                  a = Ne(e);
              return e !== a && !t && M(n, "has", e), !t && M(n, "has", a), e === a ? i.has(e) : i.has(e) || i.has(a)
          }

          function ne(e, t = !1) {
              return e = e["__v_raw"], !t && M(Ne(e), "iterate", y), Reflect.get(e, "size", e)
          }

          function ae(e) {
              e = Ne(e);
              const t = Ne(this),
                  i = ee(t),
                  n = i.has.call(t, e);
              return n || (t.add(e), R(t, "add", e, e)), this
          }

          function re(e, t) {
              t = Ne(t);
              const i = Ne(this),
                  {
                      has: a,
                      get: r
                  } = ee(i);
              let s = a.call(i, e);
              s || (e = Ne(e), s = a.call(i, e));
              const o = r.call(i, e);
              return i.set(e, t), s ? (0, n.aU)(t, o) && R(i, "set", e, t, o) : R(i, "add", e, t), this
          }

          function se(e) {
              const t = Ne(this),
                  {
                      has: i,
                      get: n
                  } = ee(t);
              let a = i.call(t, e);
              a || (e = Ne(e), a = i.call(t, e));
              const r = n ? n.call(t, e) : void 0,
                  s = t.delete(e);
              return a && R(t, "delete", e, void 0, r), s
          }

          function oe() {
              const e = Ne(this),
                  t = 0 !== e.size,
                  i = void 0,
                  n = e.clear();
              return t && R(e, "clear", void 0, void 0, i), n
          }

          function le(e, t) {
              return function(i, n) {
                  const a = this,
                      r = a["__v_raw"],
                      s = Ne(r),
                      o = t ? Q : e ? He : De;
                  return !e && M(s, "iterate", y), r.forEach(((e, t) => i.call(n, o(e), o(t), a)))
              }
          }

          function ce(e, t, i) {
              return function(...a) {
                  const r = this["__v_raw"],
                      s = Ne(r),
                      o = (0, n._N)(s),
                      l = "entries" === e || e === Symbol.iterator && o,
                      c = "keys" === e && o,
                      h = r[e](...a),
                      u = i ? Q : t ? He : De;
                  return !t && M(s, "iterate", c ? w : y), {
                      next() {
                          const {
                              value: e,
                              done: t
                          } = h.next();
                          return t ? {
                              value: e,
                              done: t
                          } : {
                              value: l ? [u(e[0]), u(e[1])] : u(e),
                              done: t
                          }
                      },
                      [Symbol.iterator]() {
                          return this
                      }
                  }
              }
          }

          function he(e) {
              return function(...t) {
                  return "delete" !== e && this
              }
          }

          function ue() {
              const e = {
                      get(e) {
                          return te(this, e)
                      },
                      get size() {
                          return ne(this)
                      },
                      has: ie,
                      add: ae,
                      set: re,
                      delete: se,
                      clear: oe,
                      forEach: le(!1, !1)
                  },
                  t = {
                      get(e) {
                          return te(this, e, !1, !0)
                      },
                      get size() {
                          return ne(this)
                      },
                      has: ie,
                      add: ae,
                      set: re,
                      delete: se,
                      clear: oe,
                      forEach: le(!1, !0)
                  },
                  i = {
                      get(e) {
                          return te(this, e, !0)
                      },
                      get size() {
                          return ne(this, !0)
                      },
                      has(e) {
                          return ie.call(this, e, !0)
                      },
                      add: he("add"),
                      set: he("set"),
                      delete: he("delete"),
                      clear: he("clear"),
                      forEach: le(!0, !1)
                  },
                  n = {
                      get(e) {
                          return te(this, e, !0, !0)
                      },
                      get size() {
                          return ne(this, !0)
                      },
                      has(e) {
                          return ie.call(this, e, !0)
                      },
                      add: he("add"),
                      set: he("set"),
                      delete: he("delete"),
                      clear: he("clear"),
                      forEach: le(!0, !0)
                  },
                  a = ["keys", "values", "entries", Symbol.iterator];
              return a.forEach((a => {
                  e[a] = ce(a, !1, !1), i[a] = ce(a, !0, !1), t[a] = ce(a, !1, !0), n[a] = ce(a, !0, !0)
              })), [e, i, t, n]
          }
          const [de, fe, pe, ge] = ue();

          function xe(e, t) {
              const i = t ? e ? ge : pe : e ? fe : de;
              return (t, a, r) => "__v_isReactive" === a ? !e : "__v_isReadonly" === a ? e : "__v_raw" === a ? t : Reflect.get((0, n.RI)(i, a) && a in t ? i : t, a, r)
          }
          const ve = {
                  get: xe(!1, !1)
              },
              me = {
                  get: xe(!1, !0)
              },
              be = {
                  get: xe(!0, !1)
              },
              ye = {
                  get: xe(!0, !0)
              };
          const we = new WeakMap,
              ke = new WeakMap,
              Se = new WeakMap,
              Ae = new WeakMap;

          function Ce(e) {
              switch (e) {
                  case "Object":
                  case "Array":
                      return 1;
                  case "Map":
                  case "Set":
                  case "WeakMap":
                  case "WeakSet":
                      return 2;
                  default:
                      return 0
              }
          }

          function Te(e) {
              return e["__v_skip"] || !Object.isExtensible(e) ? 0 : Ce((0, n.W7)(e))
          }

          function Ee(e) {
              return _e(e) ? e : Ie(e, !1, $, ve, we)
          }

          function Le(e) {
              return Ie(e, !1, J, me, ke)
          }

          function Pe(e) {
              return Ie(e, !0, Z, be, Se)
          }

          function Me(e) {
              return Ie(e, !0, K, ye, Ae)
          }

          function Ie(e, t, i, a, r) {
              if (!(0, n.Kn)(e)) return e;
              if (e["__v_raw"] && (!t || !e["__v_isReactive"])) return e;
              const s = r.get(e);
              if (s) return s;
              const o = Te(e);
              if (0 === o) return e;
              const l = new Proxy(e, 2 === o ? a : i);
              return r.set(e, l), l
          }

          function Re(e) {
              return _e(e) ? Re(e["__v_raw"]) : !(!e || !e["__v_isReactive"])
          }

          function _e(e) {
              return !(!e || !e["__v_isReadonly"])
          }

          function Oe(e) {
              return !(!e || !e["__v_isShallow"])
          }

          function Fe(e) {
              return Re(e) || _e(e)
          }

          function Ne(e) {
              const t = e && e["__v_raw"];
              return t ? Ne(t) : e
          }

          function ze(e) {
              return (0, n.Nj)(e, "__v_skip", !0), e
          }
          const De = e => (0, n.Kn)(e) ? Ee(e) : e,
              He = e => (0, n.Kn)(e) ? Pe(e) : e;

          function Xe(e) {
              T && b && (e = Ne(e), I(e.dep || (e.dep = h())))
          }

          function Ye(e, t) {
              e = Ne(e), e.dep && _(e.dep)
          }

          function Be(e) {
              return !(!e || !0 !== e.__v_isRef)
          }

          function je(e) {
              return Ve(e, !1)
          }

          function We(e) {
              return Ve(e, !0)
          }

          function Ve(e, t) {
              return Be(e) ? e : new qe(e, t)
          }
          class qe {
              constructor(e, t) {
                  this.__v_isShallow = t, this.dep = void 0, this.__v_isRef = !0, this._rawValue = t ? e : Ne(e), this._value = t ? e : De(e)
              }
              get value() {
                  return Xe(this), this._value
              }
              set value(e) {
                  e = this.__v_isShallow ? e : Ne(e), (0, n.aU)(e, this._rawValue) && (this._rawValue = e, this._value = this.__v_isShallow ? e : De(e), Ye(this, e))
              }
          }

          function Ge(e) {
              Ye(e, void 0)
          }

          function Ue(e) {
              return Be(e) ? e.value : e
          }
          const $e = {
              get: (e, t, i) => Ue(Reflect.get(e, t, i)),
              set: (e, t, i, n) => {
                  const a = e[t];
                  return Be(a) && !Be(i) ? (a.value = i, !0) : Reflect.set(e, t, i, n)
              }
          };

          function Ze(e) {
              return Re(e) ? e : new Proxy(e, $e)
          }
          class Je {
              constructor(e) {
                  this.dep = void 0, this.__v_isRef = !0;
                  const {
                      get: t,
                      set: i
                  } = e((() => Xe(this)), (() => Ye(this)));
                  this._get = t, this._set = i
              }
              get value() {
                  return this._get()
              }
              set value(e) {
                  this._set(e)
              }
          }

          function Ke(e) {
              return new Je(e)
          }

          function Qe(e) {
              const t = (0, n.kJ)(e) ? new Array(e.length) : {};
              for (const i in e) t[i] = tt(e, i);
              return t
          }
          class et {
              constructor(e, t, i) {
                  this._object = e, this._key = t, this._defaultValue = i, this.__v_isRef = !0
              }
              get value() {
                  const e = this._object[this._key];
                  return void 0 === e ? this._defaultValue : e
              }
              set value(e) {
                  this._object[this._key] = e
              }
          }

          function tt(e, t, i) {
              const n = e[t];
              return Be(n) ? n : new et(e, t, i)
          }
          class it {
              constructor(e, t, i, n) {
                  this._setter = t, this.dep = void 0, this.__v_isRef = !0, this._dirty = !0, this.effect = new k(e, (() => {
                      this._dirty || (this._dirty = !0, Ye(this))
                  })), this.effect.computed = this, this.effect.active = this._cacheable = !n, this["__v_isReadonly"] = i
              }
              get value() {
                  const e = Ne(this);
                  return Xe(e), !e._dirty && e._cacheable || (e._dirty = !1, e._value = e.effect.run()), e._value
              }
              set value(e) {
                  this._setter(e)
              }
          }

          function nt(e, t, i = !1) {
              let a, r;
              const s = (0, n.mf)(e);
              s ? (a = e, r = n.dG) : (a = e.get, r = e.set);
              const o = new it(a, r, s || !r, i);
              return o
          }
          Promise.resolve()
      },
      9835: (e, t, i) => {
          "use strict";
          i.d(t, {
              $d: () => f,
              $y: () => n.$y,
              Ah: () => lt,
              B: () => n.B,
              BK: () => n.BK,
              Bj: () => n.Bj,
              Bz: () => Hn,
              C3: () => Hi,
              C_: () => a.C_,
              Cn: () => K,
              EB: () => n.EB,
              Eo: () => ii,
              F4: () => qi,
              FN: () => xn,
              Fl: () => zn,
              G: () => ia,
              HX: () => Q,
              HY: () => Si,
              Ho: () => Gi,
              IU: () => n.IU,
              JJ: () => ye,
              Jd: () => ot,
              KU: () => d,
              Ko: () => nn,
              LL: () => bi,
              MW: () => Dn,
              MX: () => Kn,
              Mr: () => Jn,
              Nv: () => an,
              OT: () => n.OT,
              Ob: () => Ge,
              P$: () => Oe,
              PG: () => n.PG,
              Q2: () => yi,
              Q6: () => Xe,
              RC: () => je,
              Rh: () => Se,
              Rr: () => Bn,
              S3: () => p,
              SU: () => n.SU,
              U2: () => Ne,
              Uc: () => $n,
              Uk: () => Ui,
              Um: () => n.Um,
              Us: () => ti,
              Vh: () => n.Vh,
              WI: () => rn,
              WL: () => n.WL,
              WY: () => Xn,
              Wm: () => Wi,
              X3: () => n.X3,
              XI: () => n.XI,
              Xl: () => n.Xl,
              Xn: () => rt,
              Y1: () => Tn,
              Y3: () => P,
              Y8: () => Ie,
              YP: () => Te,
              YS: () => n.YS,
              Yq: () => ht,
              ZK: () => s,
              ZM: () => n.ZM,
              Zq: () => Zn,
              _: () => ji,
              _A: () => a._A,
              aZ: () => Ye,
              b9: () => Yn,
              bT: () => ut,
              bv: () => at,
              cE: () => n.cE,
              d1: () => dt,
              dD: () => J,
              dG: () => en,
              dl: () => $e,
              dq: () => n.dq,
              ec: () => W,
              eq: () => na,
              f3: () => we,
              h: () => Un,
              hR: () => a.hR,
              i8: () => ea,
              iD: () => Fi,
              iH: () => n.iH,
              ic: () => st,
              j4: () => Ni,
              j5: () => a.j5,
              kC: () => a.kC,
              kq: () => Zi,
              l1: () => jn,
              lA: () => zi,
              lR: () => pi,
              m0: () => ke,
              mW: () => Y,
              mv: () => Gn,
              mx: () => on,
              n4: () => he,
              nK: () => He,
              nQ: () => Qn,
              nZ: () => n.nZ,
              oR: () => n.oR,
              of: () => En,
              p1: () => qn,
              qG: () => Ti,
              qZ: () => _i,
              qb: () => N,
              qj: () => n.qj,
              qq: () => n.qq,
              ry: () => aa,
              sT: () => n.sT,
              se: () => Ze,
              sv: () => Ci,
              uE: () => $i,
              u_: () => Vn,
              up: () => vi,
              vl: () => ct,
              vs: () => a.vs,
              w5: () => ee,
              wF: () => nt,
              wg: () => Pi,
              wy: () => jt,
              xv: () => Ai,
              yT: () => n.yT,
              yX: () => Ae,
              zw: () => a.zw
          });
          var n = i(499),
              a = i(6970);
          const r = [];

          function s(e, ...t) {
              (0, n.Jd)();
              const i = r.length ? r[r.length - 1].component : null,
                  a = i && i.appContext.config.warnHandler,
                  s = o();
              if (a) d(a, i, 11, [e + t.join(""), i && i.proxy, s.map((({
                  vnode: e
              }) => `at <${Fn(i,e.type)}>`)).join("\n"), s]);
              else {
                  const i = [`[Vue warn]: ${e}`, ...t];
                  s.length && i.push("\n", ...l(s)), console.warn(...i)
              }(0, n.lk)()
          }

          function o() {
              let e = r[r.length - 1];
              if (!e) return [];
              const t = [];
              while (e) {
                  const i = t[0];
                  i && i.vnode === e ? i.recurseCount++ : t.push({
                      vnode: e,
                      recurseCount: 0
                  });
                  const n = e.component && e.component.parent;
                  e = n && n.vnode
              }
              return t
          }

          function l(e) {
              const t = [];
              return e.forEach(((e, i) => {
                  t.push(...0 === i ? [] : ["\n"], ...c(e))
              })), t
          }

          function c({
              vnode: e,
              recurseCount: t
          }) {
              const i = t > 0 ? `... (${t} recursive calls)` : "",
                  n = !!e.component && null == e.component.parent,
                  a = ` at <${Fn(e.component,e.type,n)}`,
                  r = ">" + i;
              return e.props ? [a, ...h(e.props), r] : [a + r]
          }

          function h(e) {
              const t = [],
                  i = Object.keys(e);
              return i.slice(0, 3).forEach((i => {
                  t.push(...u(i, e[i]))
              })), i.length > 3 && t.push(" ..."), t
          }

          function u(e, t, i) {
              return (0, a.HD)(t) ? (t = JSON.stringify(t), i ? t : [`${e}=${t}`]) : "number" === typeof t || "boolean" === typeof t || null == t ? i ? t : [`${e}=${t}`] : (0, n.dq)(t) ? (t = u(e, (0, n.IU)(t.value), !0), i ? t : [`${e}=Ref<`, t, ">"]) : (0, a.mf)(t) ? [`${e}=fn${t.name?`<${t.name}>`:""}`] : (t = (0, n.IU)(t), i ? t : [`${e}=`, t])
          }

          function d(e, t, i, n) {
              let a;
              try {
                  a = n ? e(...n) : e()
              } catch (r) {
                  p(r, t, i)
              }
              return a
          }

          function f(e, t, i, n) {
              if ((0, a.mf)(e)) {
                  const r = d(e, t, i, n);
                  return r && (0, a.tI)(r) && r.catch((e => {
                      p(e, t, i)
                  })), r
              }
              const r = [];
              for (let a = 0; a < e.length; a++) r.push(f(e[a], t, i, n));
              return r
          }

          function p(e, t, i, n = !0) {
              const a = t ? t.vnode : null;
              if (t) {
                  let n = t.parent;
                  const a = t.proxy,
                      r = i;
                  while (n) {
                      const t = n.ec;
                      if (t)
                          for (let i = 0; i < t.length; i++)
                              if (!1 === t[i](e, a, r)) return;
                      n = n.parent
                  }
                  const s = t.appContext.config.errorHandler;
                  if (s) return void d(s, null, 10, [e, a, r])
              }
              g(e, i, a, n)
          }

          function g(e, t, i, n = !0) {
              console.error(e)
          }
          let x = !1,
              v = !1;
          const m = [];
          let b = 0;
          const y = [];
          let w = null,
              k = 0;
          const S = [];
          let A = null,
              C = 0;
          const T = Promise.resolve();
          let E = null,
              L = null;

          function P(e) {
              const t = E || T;
              return e ? t.then(this ? e.bind(this) : e) : t
          }

          function M(e) {
              let t = b + 1,
                  i = m.length;
              while (t < i) {
                  const n = t + i >>> 1,
                      a = H(m[n]);
                  a < e ? t = n + 1 : i = n
              }
              return t
          }

          function I(e) {
              m.length && m.includes(e, x && e.allowRecurse ? b + 1 : b) || e === L || (null == e.id ? m.push(e) : m.splice(M(e.id), 0, e), R())
          }

          function R() {
              x || v || (v = !0, E = T.then(X))
          }

          function _(e) {
              const t = m.indexOf(e);
              t > b && m.splice(t, 1)
          }

          function O(e, t, i, n) {
              (0, a.kJ)(e) ? i.push(...e): t && t.includes(e, e.allowRecurse ? n + 1 : n) || i.push(e), R()
          }

          function F(e) {
              O(e, w, y, k)
          }

          function N(e) {
              O(e, A, S, C)
          }

          function z(e, t = null) {
              if (y.length) {
                  for (L = t, w = [...new Set(y)], y.length = 0, k = 0; k < w.length; k++) w[k]();
                  w = null, k = 0, L = null, z(e, t)
              }
          }

          function D(e) {
              if (S.length) {
                  const e = [...new Set(S)];
                  if (S.length = 0, A) return void A.push(...e);
                  for (A = e, A.sort(((e, t) => H(e) - H(t))), C = 0; C < A.length; C++) A[C]();
                  A = null, C = 0
              }
          }
          const H = e => null == e.id ? 1 / 0 : e.id;

          function X(e) {
              v = !1, x = !0, z(e), m.sort(((e, t) => H(e) - H(t)));
              a.dG;
              try {
                  for (b = 0; b < m.length; b++) {
                      const e = m[b];
                      e && !1 !== e.active && d(e, null, 14)
                  }
              } finally {
                  b = 0, m.length = 0, D(e), x = !1, E = null, (m.length || y.length || S.length) && X(e)
              }
          }
          new Set;
          new Map;
          let Y, B = [],
              j = !1;

          function W(e, t) {
              var i, n;
              if (Y = e, Y) Y.enabled = !0, B.forEach((({
                  event: e,
                  args: t
              }) => Y.emit(e, ...t))), B = [];
              else if ("undefined" !== typeof window && window.HTMLElement && !(null === (n = null === (i = window.navigator) || void 0 === i ? void 0 : i.userAgent) || void 0 === n ? void 0 : n.includes("jsdom"))) {
                  const e = t.__VUE_DEVTOOLS_HOOK_REPLAY__ = t.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
                  e.push((e => {
                      W(e, t)
                  })), setTimeout((() => {
                      Y || (t.__VUE_DEVTOOLS_HOOK_REPLAY__ = null, j = !0, B = [])
                  }), 3e3)
              } else j = !0, B = []
          }

          function V(e, t, ...i) {
              const n = e.vnode.props || a.kT;
              let r = i;
              const s = t.startsWith("update:"),
                  o = s && t.slice(7);
              if (o && o in n) {
                  const e = `${"modelValue"===o?"model":o}Modifiers`,
                      {
                          number: t,
                          trim: s
                      } = n[e] || a.kT;
                  s ? r = i.map((e => e.trim())) : t && (r = i.map(a.He))
              }
              let l;
              let c = n[l = (0, a.hR)(t)] || n[l = (0, a.hR)((0, a._A)(t))];
              !c && s && (c = n[l = (0, a.hR)((0, a.rs)(t))]), c && f(c, e, 6, r);
              const h = n[l + "Once"];
              if (h) {
                  if (e.emitted) {
                      if (e.emitted[l]) return
                  } else e.emitted = {};
                  e.emitted[l] = !0, f(h, e, 6, r)
              }
          }

          function q(e, t, i = !1) {
              const n = t.emitsCache,
                  r = n.get(e);
              if (void 0 !== r) return r;
              const s = e.emits;
              let o = {},
                  l = !1;
              if (!(0, a.mf)(e)) {
                  const n = e => {
                      const i = q(e, t, !0);
                      i && (l = !0, (0, a.l7)(o, i))
                  };
                  !i && t.mixins.length && t.mixins.forEach(n), e.extends && n(e.extends), e.mixins && e.mixins.forEach(n)
              }
              return s || l ? ((0, a.kJ)(s) ? s.forEach((e => o[e] = null)) : (0, a.l7)(o, s), n.set(e, o), o) : (n.set(e, null), null)
          }

          function G(e, t) {
              return !(!e || !(0, a.F7)(t)) && (t = t.slice(2).replace(/Once$/, ""), (0, a.RI)(e, t[0].toLowerCase() + t.slice(1)) || (0, a.RI)(e, (0, a.rs)(t)) || (0, a.RI)(e, t))
          }
          let U = null,
              $ = null;

          function Z(e) {
              const t = U;
              return U = e, $ = e && e.type.__scopeId || null, t
          }

          function J(e) {
              $ = e
          }

          function K() {
              $ = null
          }
          const Q = e => ee;

          function ee(e, t = U, i) {
              if (!t) return e;
              if (e._n) return e;
              const n = (...i) => {
                  n._d && _i(-1);
                  const a = Z(t),
                      r = e(...i);
                  return Z(a), n._d && _i(1), r
              };
              return n._n = !0, n._c = !0, n._d = !0, n
          }

          function te(e) {
              const {
                  type: t,
                  vnode: i,
                  proxy: n,
                  withProxy: r,
                  props: s,
                  propsOptions: [o],
                  slots: l,
                  attrs: c,
                  emit: h,
                  render: u,
                  renderCache: d,
                  data: f,
                  setupState: g,
                  ctx: x,
                  inheritAttrs: v
              } = e;
              let m, b;
              const y = Z(e);
              try {
                  if (4 & i.shapeFlag) {
                      const e = r || n;
                      m = Ji(u.call(e, e, d, s, g, f, x)), b = c
                  } else {
                      const e = t;
                      0, m = Ji(e.length > 1 ? e(s, {
                          attrs: c,
                          slots: l,
                          emit: h
                      }) : e(s, null)), b = t.props ? c : ne(c)
                  }
              } catch (k) {
                  Ei.length = 0, p(k, e, 1), m = Wi(Ci)
              }
              let w = m;
              if (b && !1 !== v) {
                  const e = Object.keys(b),
                      {
                          shapeFlag: t
                      } = w;
                  e.length && 7 & t && (o && e.some(a.tR) && (b = ae(b, o)), w = Gi(w, b))
              }
              return i.dirs && (w.dirs = w.dirs ? w.dirs.concat(i.dirs) : i.dirs), i.transition && (w.transition = i.transition), m = w, Z(y), m
          }

          function ie(e) {
              let t;
              for (let i = 0; i < e.length; i++) {
                  const n = e[i];
                  if (!zi(n)) return;
                  if (n.type !== Ci || "v-if" === n.children) {
                      if (t) return;
                      t = n
                  }
              }
              return t
          }
          const ne = e => {
                  let t;
                  for (const i in e)("class" === i || "style" === i || (0, a.F7)(i)) && ((t || (t = {}))[i] = e[i]);
                  return t
              },
              ae = (e, t) => {
                  const i = {};
                  for (const n in e)(0, a.tR)(n) && n.slice(9) in t || (i[n] = e[n]);
                  return i
              };

          function re(e, t, i) {
              const {
                  props: n,
                  children: a,
                  component: r
              } = e, {
                  props: s,
                  children: o,
                  patchFlag: l
              } = t, c = r.emitsOptions;
              if (t.dirs || t.transition) return !0;
              if (!(i && l >= 0)) return !(!a && !o || o && o.$stable) || n !== s && (n ? !s || se(n, s, c) : !!s);
              if (1024 & l) return !0;
              if (16 & l) return n ? se(n, s, c) : !!s;
              if (8 & l) {
                  const e = t.dynamicProps;
                  for (let t = 0; t < e.length; t++) {
                      const i = e[t];
                      if (s[i] !== n[i] && !G(c, i)) return !0
                  }
              }
              return !1
          }

          function se(e, t, i) {
              const n = Object.keys(t);
              if (n.length !== Object.keys(e).length) return !0;
              for (let a = 0; a < n.length; a++) {
                  const r = n[a];
                  if (t[r] !== e[r] && !G(i, r)) return !0
              }
              return !1
          }

          function oe({
              vnode: e,
              parent: t
          }, i) {
              while (t && t.subTree === e)(e = t.vnode).el = i, t = t.parent
          }
          const le = e => e.__isSuspense,
              ce = {
                  name: "Suspense",
                  __isSuspense: !0,
                  process(e, t, i, n, a, r, s, o, l, c) {
                      null == e ? de(t, i, n, a, r, s, o, l, c) : fe(e, t, i, n, a, s, o, l, c)
                  },
                  hydrate: ge,
                  create: pe,
                  normalize: xe
              },
              he = ce;

          function ue(e, t) {
              const i = e.props && e.props[t];
              (0, a.mf)(i) && i()
          }

          function de(e, t, i, n, a, r, s, o, l) {
              const {
                  p: c,
                  o: {
                      createElement: h
                  }
              } = l, u = h("div"), d = e.suspense = pe(e, a, n, t, u, i, r, s, o, l);
              c(null, d.pendingBranch = e.ssContent, u, null, n, d, r, s), d.deps > 0 ? (ue(e, "onPending"), ue(e, "onFallback"), c(null, e.ssFallback, t, i, n, null, r, s), be(d, e.ssFallback)) : d.resolve()
          }

          function fe(e, t, i, n, a, r, s, o, {
              p: l,
              um: c,
              o: {
                  createElement: h
              }
          }) {
              const u = t.suspense = e.suspense;
              u.vnode = t, t.el = e.el;
              const d = t.ssContent,
                  f = t.ssFallback,
                  {
                      activeBranch: p,
                      pendingBranch: g,
                      isInFallback: x,
                      isHydrating: v
                  } = u;
              if (g) u.pendingBranch = d, Di(d, g) ? (l(g, d, u.hiddenContainer, null, a, u, r, s, o), u.deps <= 0 ? u.resolve() : x && (l(p, f, i, n, a, null, r, s, o), be(u, f))) : (u.pendingId++, v ? (u.isHydrating = !1, u.activeBranch = g) : c(g, a, u), u.deps = 0, u.effects.length = 0, u.hiddenContainer = h("div"), x ? (l(null, d, u.hiddenContainer, null, a, u, r, s, o), u.deps <= 0 ? u.resolve() : (l(p, f, i, n, a, null, r, s, o), be(u, f))) : p && Di(d, p) ? (l(p, d, i, n, a, u, r, s, o), u.resolve(!0)) : (l(null, d, u.hiddenContainer, null, a, u, r, s, o), u.deps <= 0 && u.resolve()));
              else if (p && Di(d, p)) l(p, d, i, n, a, u, r, s, o), be(u, d);
              else if (ue(t, "onPending"), u.pendingBranch = d, u.pendingId++, l(null, d, u.hiddenContainer, null, a, u, r, s, o), u.deps <= 0) u.resolve();
              else {
                  const {
                      timeout: e,
                      pendingId: t
                  } = u;
                  e > 0 ? setTimeout((() => {
                      u.pendingId === t && u.fallback(f)
                  }), e) : 0 === e && u.fallback(f)
              }
          }

          function pe(e, t, i, n, r, s, o, l, c, h, u = !1) {
              const {
                  p: d,
                  m: f,
                  um: g,
                  n: x,
                  o: {
                      parentNode: v,
                      remove: m
                  }
              } = h, b = (0, a.He)(e.props && e.props.timeout), y = {
                  vnode: e,
                  parent: t,
                  parentComponent: i,
                  isSVG: o,
                  container: n,
                  hiddenContainer: r,
                  anchor: s,
                  deps: 0,
                  pendingId: 0,
                  timeout: "number" === typeof b ? b : -1,
                  activeBranch: null,
                  pendingBranch: null,
                  isInFallback: !0,
                  isHydrating: u,
                  isUnmounted: !1,
                  effects: [],
                  resolve(e = !1) {
                      const {
                          vnode: t,
                          activeBranch: i,
                          pendingBranch: n,
                          pendingId: a,
                          effects: r,
                          parentComponent: s,
                          container: o
                      } = y;
                      if (y.isHydrating) y.isHydrating = !1;
                      else if (!e) {
                          const e = i && n.transition && "out-in" === n.transition.mode;
                          e && (i.transition.afterLeave = () => {
                              a === y.pendingId && f(n, o, t, 0)
                          });
                          let {
                              anchor: t
                          } = y;
                          i && (t = x(i), g(i, s, y, !0)), e || f(n, o, t, 0)
                      }
                      be(y, n), y.pendingBranch = null, y.isInFallback = !1;
                      let l = y.parent,
                          c = !1;
                      while (l) {
                          if (l.pendingBranch) {
                              l.effects.push(...r), c = !0;
                              break
                          }
                          l = l.parent
                      }
                      c || N(r), y.effects = [], ue(t, "onResolve")
                  },
                  fallback(e) {
                      if (!y.pendingBranch) return;
                      const {
                          vnode: t,
                          activeBranch: i,
                          parentComponent: n,
                          container: a,
                          isSVG: r
                      } = y;
                      ue(t, "onFallback");
                      const s = x(i),
                          o = () => {
                              y.isInFallback && (d(null, e, a, s, n, null, r, l, c), be(y, e))
                          },
                          h = e.transition && "out-in" === e.transition.mode;
                      h && (i.transition.afterLeave = o), y.isInFallback = !0, g(i, n, null, !0), h || o()
                  },
                  move(e, t, i) {
                      y.activeBranch && f(y.activeBranch, e, t, i), y.container = e
                  },
                  next() {
                      return y.activeBranch && x(y.activeBranch)
                  },
                  registerDep(e, t) {
                      const i = !!y.pendingBranch;
                      i && y.deps++;
                      const n = e.vnode.el;
                      e.asyncDep.catch((t => {
                          p(t, e, 0)
                      })).then((a => {
                          if (e.isUnmounted || y.isUnmounted || y.pendingId !== e.suspenseId) return;
                          e.asyncResolved = !0;
                          const {
                              vnode: r
                          } = e;
                          Cn(e, a, !1), n && (r.el = n);
                          const s = !n && e.subTree.el;
                          t(e, r, v(n || e.subTree.el), n ? null : x(e.subTree), y, o, c), s && m(s), oe(e, r.el), i && 0 === --y.deps && y.resolve()
                      }))
                  },
                  unmount(e, t) {
                      y.isUnmounted = !0, y.activeBranch && g(y.activeBranch, i, e, t), y.pendingBranch && g(y.pendingBranch, i, e, t)
                  }
              };
              return y
          }

          function ge(e, t, i, n, a, r, s, o, l) {
              const c = t.suspense = pe(t, n, i, e.parentNode, document.createElement("div"), null, a, r, s, o, !0),
                  h = l(e, c.pendingBranch = t.ssContent, i, c, r, s);
              return 0 === c.deps && c.resolve(), h
          }

          function xe(e) {
              const {
                  shapeFlag: t,
                  children: i
              } = e, n = 32 & t;
              e.ssContent = ve(n ? i.default : i), e.ssFallback = n ? ve(i.fallback) : Wi(Ci)
          }

          function ve(e) {
              let t;
              if ((0, a.mf)(e)) {
                  const i = Ri && e._c;
                  i && (e._d = !1, Pi()), e = e(), i && (e._d = !0, t = Li, Mi())
              }
              if ((0, a.kJ)(e)) {
                  const t = ie(e);
                  0, e = t
              }
              return e = Ji(e), t && !e.dynamicChildren && (e.dynamicChildren = t.filter((t => t !== e))), e
          }

          function me(e, t) {
              t && t.pendingBranch ? (0, a.kJ)(e) ? t.effects.push(...e) : t.effects.push(e) : N(e)
          }

          function be(e, t) {
              e.activeBranch = t;
              const {
                  vnode: i,
                  parentComponent: n
              } = e, a = i.el = t.el;
              n && n.subTree === i && (n.vnode.el = a, oe(n, a))
          }

          function ye(e, t) {
              if (gn) {
                  let i = gn.provides;
                  const n = gn.parent && gn.parent.provides;
                  n === i && (i = gn.provides = Object.create(n)), i[e] = t
              } else 0
          }

          function we(e, t, i = !1) {
              const n = gn || U;
              if (n) {
                  const r = null == n.parent ? n.vnode.appContext && n.vnode.appContext.provides : n.parent.provides;
                  if (r && e in r) return r[e];
                  if (arguments.length > 1) return i && (0, a.mf)(t) ? t.call(n.proxy) : t
              } else 0
          }

          function ke(e, t) {
              return Ee(e, null, t)
          }

          function Se(e, t) {
              return Ee(e, null, {
                  flush: "post"
              })
          }

          function Ae(e, t) {
              return Ee(e, null, {
                  flush: "sync"
              })
          }
          const Ce = {};

          function Te(e, t, i) {
              return Ee(e, t, i)
          }

          function Ee(e, t, {
              immediate: i,
              deep: r,
              flush: s,
              onTrack: o,
              onTrigger: l
          } = a.kT) {
              const c = gn;
              let h, u, p = !1,
                  g = !1;
              if ((0, n.dq)(e) ? (h = () => e.value, p = (0, n.yT)(e)) : (0, n.PG)(e) ? (h = () => e, r = !0) : (0, a.kJ)(e) ? (g = !0, p = e.some(n.PG), h = () => e.map((e => (0, n.dq)(e) ? e.value : (0, n.PG)(e) ? Me(e) : (0, a.mf)(e) ? d(e, c, 2) : void 0))) : h = (0, a.mf)(e) ? t ? () => d(e, c, 2) : () => {
                      if (!c || !c.isUnmounted) return u && u(), f(e, c, 3, [x])
                  } : a.dG, t && r) {
                  const e = h;
                  h = () => Me(e())
              }
              let x = e => {
                  u = y.onStop = () => {
                      d(e, c, 4)
                  }
              };
              if (kn) return x = a.dG, t ? i && f(t, c, 3, [h(), g ? [] : void 0, x]) : h(), a.dG;
              let v = g ? [] : Ce;
              const m = () => {
                  if (y.active)
                      if (t) {
                          const e = y.run();
                          (r || p || (g ? e.some(((e, t) => (0, a.aU)(e, v[t]))) : (0, a.aU)(e, v))) && (u && u(), f(t, c, 3, [e, v === Ce ? void 0 : v, x]), v = e)
                      } else y.run()
              };
              let b;
              m.allowRecurse = !!t, b = "sync" === s ? m : "post" === s ? () => ei(m, c && c.suspense) : () => {
                  !c || c.isMounted ? F(m) : m()
              };
              const y = new n.qq(h, b);
              return t ? i ? m() : v = y.run() : "post" === s ? ei(y.run.bind(y), c && c.suspense) : y.run(), () => {
                  y.stop(), c && c.scope && (0, a.Od)(c.scope.effects, y)
              }
          }

          function Le(e, t, i) {
              const n = this.proxy,
                  r = (0, a.HD)(e) ? e.includes(".") ? Pe(n, e) : () => n[e] : e.bind(n, n);
              let s;
              (0, a.mf)(t) ? s = t: (s = t.handler, i = t);
              const o = gn;
              vn(this);
              const l = Ee(r, s.bind(n), i);
              return o ? vn(o) : mn(), l
          }

          function Pe(e, t) {
              const i = t.split(".");
              return () => {
                  let t = e;
                  for (let e = 0; e < i.length && t; e++) t = t[i[e]];
                  return t
              }
          }

          function Me(e, t) {
              if (!(0, a.Kn)(e) || e["__v_skip"]) return e;
              if (t = t || new Set, t.has(e)) return e;
              if (t.add(e), (0, n.dq)(e)) Me(e.value, t);
              else if ((0, a.kJ)(e))
                  for (let i = 0; i < e.length; i++) Me(e[i], t);
              else if ((0, a.DM)(e) || (0, a._N)(e)) e.forEach((e => {
                  Me(e, t)
              }));
              else if ((0, a.PO)(e))
                  for (const i in e) Me(e[i], t);
              return e
          }

          function Ie() {
              const e = {
                  isMounted: !1,
                  isLeaving: !1,
                  isUnmounting: !1,
                  leavingVNodes: new Map
              };
              return at((() => {
                  e.isMounted = !0
              })), ot((() => {
                  e.isUnmounting = !0
              })), e
          }
          const Re = [Function, Array],
              _e = {
                  name: "BaseTransition",
                  props: {
                      mode: String,
                      appear: Boolean,
                      persisted: Boolean,
                      onBeforeEnter: Re,
                      onEnter: Re,
                      onAfterEnter: Re,
                      onEnterCancelled: Re,
                      onBeforeLeave: Re,
                      onLeave: Re,
                      onAfterLeave: Re,
                      onLeaveCancelled: Re,
                      onBeforeAppear: Re,
                      onAppear: Re,
                      onAfterAppear: Re,
                      onAppearCancelled: Re
                  },
                  setup(e, {
                      slots: t
                  }) {
                      const i = xn(),
                          a = Ie();
                      let r;
                      return () => {
                          const s = t.default && Xe(t.default(), !0);
                          if (!s || !s.length) return;
                          const o = (0, n.IU)(e),
                              {
                                  mode: l
                              } = o;
                          const c = s[0];
                          if (a.isLeaving) return ze(c);
                          const h = De(c);
                          if (!h) return ze(c);
                          const u = Ne(h, o, a, i);
                          He(h, u);
                          const d = i.subTree,
                              f = d && De(d);
                          let p = !1;
                          const {
                              getTransitionKey: g
                          } = h.type;
                          if (g) {
                              const e = g();
                              void 0 === r ? r = e : e !== r && (r = e, p = !0)
                          }
                          if (f && f.type !== Ci && (!Di(h, f) || p)) {
                              const e = Ne(f, o, a, i);
                              if (He(f, e), "out-in" === l) return a.isLeaving = !0, e.afterLeave = () => {
                                  a.isLeaving = !1, i.update()
                              }, ze(c);
                              "in-out" === l && h.type !== Ci && (e.delayLeave = (e, t, i) => {
                                  const n = Fe(a, f);
                                  n[String(f.key)] = f, e._leaveCb = () => {
                                      t(), e._leaveCb = void 0, delete u.delayedLeave
                                  }, u.delayedLeave = i
                              })
                          }
                          return c
                      }
                  }
              },
              Oe = _e;

          function Fe(e, t) {
              const {
                  leavingVNodes: i
              } = e;
              let n = i.get(t.type);
              return n || (n = Object.create(null), i.set(t.type, n)), n
          }

          function Ne(e, t, i, n) {
              const {
                  appear: a,
                  mode: r,
                  persisted: s = !1,
                  onBeforeEnter: o,
                  onEnter: l,
                  onAfterEnter: c,
                  onEnterCancelled: h,
                  onBeforeLeave: u,
                  onLeave: d,
                  onAfterLeave: p,
                  onLeaveCancelled: g,
                  onBeforeAppear: x,
                  onAppear: v,
                  onAfterAppear: m,
                  onAppearCancelled: b
              } = t, y = String(e.key), w = Fe(i, e), k = (e, t) => {
                  e && f(e, n, 9, t)
              }, S = {
                  mode: r,
                  persisted: s,
                  beforeEnter(t) {
                      let n = o;
                      if (!i.isMounted) {
                          if (!a) return;
                          n = x || o
                      }
                      t._leaveCb && t._leaveCb(!0);
                      const r = w[y];
                      r && Di(e, r) && r.el._leaveCb && r.el._leaveCb(), k(n, [t])
                  },
                  enter(e) {
                      let t = l,
                          n = c,
                          r = h;
                      if (!i.isMounted) {
                          if (!a) return;
                          t = v || l, n = m || c, r = b || h
                      }
                      let s = !1;
                      const o = e._enterCb = t => {
                          s || (s = !0, k(t ? r : n, [e]), S.delayedLeave && S.delayedLeave(), e._enterCb = void 0)
                      };
                      t ? (t(e, o), t.length <= 1 && o()) : o()
                  },
                  leave(t, n) {
                      const a = String(e.key);
                      if (t._enterCb && t._enterCb(!0), i.isUnmounting) return n();
                      k(u, [t]);
                      let r = !1;
                      const s = t._leaveCb = i => {
                          r || (r = !0, n(), k(i ? g : p, [t]), t._leaveCb = void 0, w[a] === e && delete w[a])
                      };
                      w[a] = e, d ? (d(t, s), d.length <= 1 && s()) : s()
                  },
                  clone(e) {
                      return Ne(e, t, i, n)
                  }
              };
              return S
          }

          function ze(e) {
              if (Ve(e)) return e = Gi(e), e.children = null, e
          }

          function De(e) {
              return Ve(e) ? e.children ? e.children[0] : void 0 : e
          }

          function He(e, t) {
              6 & e.shapeFlag && e.component ? He(e.component.subTree, t) : 128 & e.shapeFlag ? (e.ssContent.transition = t.clone(e.ssContent), e.ssFallback.transition = t.clone(e.ssFallback)) : e.transition = t
          }

          function Xe(e, t = !1) {
              let i = [],
                  n = 0;
              for (let a = 0; a < e.length; a++) {
                  const r = e[a];
                  r.type === Si ? (128 & r.patchFlag && n++, i = i.concat(Xe(r.children, t))) : (t || r.type !== Ci) && i.push(r)
              }
              if (n > 1)
                  for (let a = 0; a < i.length; a++) i[a].patchFlag = -2;
              return i
          }

          function Ye(e) {
              return (0, a.mf)(e) ? {
                  setup: e,
                  name: e.name
              } : e
          }
          const Be = e => !!e.type.__asyncLoader;

          function je(e) {
              (0, a.mf)(e) && (e = {
                  loader: e
              });
              const {
                  loader: t,
                  loadingComponent: i,
                  errorComponent: r,
                  delay: s = 200,
                  timeout: o,
                  suspensible: l = !0,
                  onError: c
              } = e;
              let h, u = null,
                  d = 0;
              const f = () => (d++, u = null, g()),
                  g = () => {
                      let e;
                      return u || (e = u = t().catch((e => {
                          if (e = e instanceof Error ? e : new Error(String(e)), c) return new Promise(((t, i) => {
                              const n = () => t(f()),
                                  a = () => i(e);
                              c(e, n, a, d + 1)
                          }));
                          throw e
                      })).then((t => e !== u && u ? u : (t && (t.__esModule || "Module" === t[Symbol.toStringTag]) && (t = t.default), h = t, t))))
                  };
              return Ye({
                  name: "AsyncComponentWrapper",
                  __asyncLoader: g,
                  get __asyncResolved() {
                      return h
                  },
                  setup() {
                      const e = gn;
                      if (h) return () => We(h, e);
                      const t = t => {
                          u = null, p(t, e, 13, !r)
                      };
                      if (l && e.suspense || kn) return g().then((t => () => We(t, e))).catch((e => (t(e), () => r ? Wi(r, {
                          error: e
                      }) : null)));
                      const a = (0, n.iH)(!1),
                          c = (0, n.iH)(),
                          d = (0, n.iH)(!!s);
                      return s && setTimeout((() => {
                          d.value = !1
                      }), s), null != o && setTimeout((() => {
                          if (!a.value && !c.value) {
                              const e = new Error(`Async component timed out after ${o}ms.`);
                              t(e), c.value = e
                          }
                      }), o), g().then((() => {
                          a.value = !0, e.parent && Ve(e.parent.vnode) && I(e.parent.update)
                      })).catch((e => {
                          t(e), c.value = e
                      })), () => a.value && h ? We(h, e) : c.value && r ? Wi(r, {
                          error: c.value
                      }) : i && !d.value ? Wi(i) : void 0
                  }
              })
          }

          function We(e, {
              vnode: {
                  ref: t,
                  props: i,
                  children: n
              }
          }) {
              const a = Wi(e, i, n);
              return a.ref = t, a
          }
          const Ve = e => e.type.__isKeepAlive,
              qe = {
                  name: "KeepAlive",
                  __isKeepAlive: !0,
                  props: {
                      include: [String, RegExp, Array],
                      exclude: [String, RegExp, Array],
                      max: [String, Number]
                  },
                  setup(e, {
                      slots: t
                  }) {
                      const i = xn(),
                          n = i.ctx;
                      if (!n.renderer) return t.default;
                      const r = new Map,
                          s = new Set;
                      let o = null;
                      const l = i.suspense,
                          {
                              renderer: {
                                  p: c,
                                  m: h,
                                  um: u,
                                  o: {
                                      createElement: d
                                  }
                              }
                          } = n,
                          f = d("div");

                      function p(e) {
                          Qe(e), u(e, i, l, !0)
                      }

                      function g(e) {
                          r.forEach(((t, i) => {
                              const n = On(t.type);
                              !n || e && e(n) || x(i)
                          }))
                      }

                      function x(e) {
                          const t = r.get(e);
                          o && t.type === o.type ? o && Qe(o) : p(t), r.delete(e), s.delete(e)
                      }
                      n.activate = (e, t, i, n, r) => {
                          const s = e.component;
                          h(e, t, i, 0, l), c(s.vnode, e, t, i, s, l, n, e.slotScopeIds, r), ei((() => {
                              s.isDeactivated = !1, s.a && (0, a.ir)(s.a);
                              const t = e.props && e.props.onVnodeMounted;
                              t && tn(t, s.parent, e)
                          }), l)
                      }, n.deactivate = e => {
                          const t = e.component;
                          h(e, f, null, 1, l), ei((() => {
                              t.da && (0, a.ir)(t.da);
                              const i = e.props && e.props.onVnodeUnmounted;
                              i && tn(i, t.parent, e), t.isDeactivated = !0
                          }), l)
                      }, Te((() => [e.include, e.exclude]), (([e, t]) => {
                          e && g((t => Ue(e, t))), t && g((e => !Ue(t, e)))
                      }), {
                          flush: "post",
                          deep: !0
                      });
                      let v = null;
                      const m = () => {
                          null != v && r.set(v, et(i.subTree))
                      };
                      return at(m), st(m), ot((() => {
                          r.forEach((e => {
                              const {
                                  subTree: t,
                                  suspense: n
                              } = i, a = et(t);
                              if (e.type !== a.type) p(e);
                              else {
                                  Qe(a);
                                  const e = a.component.da;
                                  e && ei(e, n)
                              }
                          }))
                      })), () => {
                          if (v = null, !t.default) return null;
                          const i = t.default(),
                              n = i[0];
                          if (i.length > 1) return o = null, i;
                          if (!zi(n) || !(4 & n.shapeFlag) && !(128 & n.shapeFlag)) return o = null, n;
                          let a = et(n);
                          const l = a.type,
                              c = On(Be(a) ? a.type.__asyncResolved || {} : l),
                              {
                                  include: h,
                                  exclude: u,
                                  max: d
                              } = e;
                          if (h && (!c || !Ue(h, c)) || u && c && Ue(u, c)) return o = a, n;
                          const f = null == a.key ? l : a.key,
                              p = r.get(f);
                          return a.el && (a = Gi(a), 128 & n.shapeFlag && (n.ssContent = a)), v = f, p ? (a.el = p.el, a.component = p.component, a.transition && He(a, a.transition), a.shapeFlag |= 512, s.delete(f), s.add(f)) : (s.add(f), d && s.size > parseInt(d, 10) && x(s.values().next().value)), a.shapeFlag |= 256, o = a, n
                      }
                  }
              },
              Ge = qe;

          function Ue(e, t) {
              return (0, a.kJ)(e) ? e.some((e => Ue(e, t))) : (0, a.HD)(e) ? e.split(",").includes(t) : !!e.test && e.test(t)
          }

          function $e(e, t) {
              Je(e, "a", t)
          }

          function Ze(e, t) {
              Je(e, "da", t)
          }

          function Je(e, t, i = gn) {
              const n = e.__wdc || (e.__wdc = () => {
                  let t = i;
                  while (t) {
                      if (t.isDeactivated) return;
                      t = t.parent
                  }
                  return e()
              });
              if (tt(t, n, i), i) {
                  let e = i.parent;
                  while (e && e.parent) Ve(e.parent.vnode) && Ke(n, t, i, e), e = e.parent
              }
          }

          function Ke(e, t, i, n) {
              const r = tt(t, e, n, !0);
              lt((() => {
                  (0, a.Od)(n[t], r)
              }), i)
          }

          function Qe(e) {
              let t = e.shapeFlag;
              256 & t && (t -= 256), 512 & t && (t -= 512), e.shapeFlag = t
          }

          function et(e) {
              return 128 & e.shapeFlag ? e.ssContent : e
          }

          function tt(e, t, i = gn, a = !1) {
              if (i) {
                  const r = i[e] || (i[e] = []),
                      s = t.__weh || (t.__weh = (...a) => {
                          if (i.isUnmounted) return;
                          (0, n.Jd)(), vn(i);
                          const r = f(t, i, e, a);
                          return mn(), (0, n.lk)(), r
                      });
                  return a ? r.unshift(s) : r.push(s), s
              }
          }
          const it = e => (t, i = gn) => (!kn || "sp" === e) && tt(e, t, i),
              nt = it("bm"),
              at = it("m"),
              rt = it("bu"),
              st = it("u"),
              ot = it("bum"),
              lt = it("um"),
              ct = it("sp"),
              ht = it("rtg"),
              ut = it("rtc");

          function dt(e, t = gn) {
              tt("ec", e, t)
          }
          let ft = !0;

          function pt(e) {
              const t = mt(e),
                  i = e.proxy,
                  r = e.ctx;
              ft = !1, t.beforeCreate && xt(t.beforeCreate, e, "bc");
              const {
                  data: s,
                  computed: o,
                  methods: l,
                  watch: c,
                  provide: h,
                  inject: u,
                  created: d,
                  beforeMount: f,
                  mounted: p,
                  beforeUpdate: g,
                  updated: x,
                  activated: v,
                  deactivated: m,
                  beforeDestroy: b,
                  beforeUnmount: y,
                  destroyed: w,
                  unmounted: k,
                  render: S,
                  renderTracked: A,
                  renderTriggered: C,
                  errorCaptured: T,
                  serverPrefetch: E,
                  expose: L,
                  inheritAttrs: P,
                  components: M,
                  directives: I,
                  filters: R
              } = t, _ = null;
              if (u && gt(u, r, _, e.appContext.config.unwrapInjectedRef), l)
                  for (const n in l) {
                      const e = l[n];
                      (0, a.mf)(e) && (r[n] = e.bind(i))
                  }
              if (s) {
                  0;
                  const t = s.call(i, i);
                  0, (0, a.Kn)(t) && (e.data = (0, n.qj)(t))
              }
              if (ft = !0, o)
                  for (const n in o) {
                      const e = o[n],
                          t = (0, a.mf)(e) ? e.bind(i, i) : (0, a.mf)(e.get) ? e.get.bind(i, i) : a.dG;
                      0;
                      const s = !(0, a.mf)(e) && (0, a.mf)(e.set) ? e.set.bind(i) : a.dG,
                          l = zn({
                              get: t,
                              set: s
                          });
                      Object.defineProperty(r, n, {
                          enumerable: !0,
                          configurable: !0,
                          get: () => l.value,
                          set: e => l.value = e
                      })
                  }
              if (c)
                  for (const n in c) vt(c[n], r, i, n);
              if (h) {
                  const e = (0, a.mf)(h) ? h.call(i) : h;
                  Reflect.ownKeys(e).forEach((t => {
                      ye(t, e[t])
                  }))
              }

              function O(e, t) {
                  (0, a.kJ)(t) ? t.forEach((t => e(t.bind(i)))): t && e(t.bind(i))
              }
              if (d && xt(d, e, "c"), O(nt, f), O(at, p), O(rt, g), O(st, x), O($e, v), O(Ze, m), O(dt, T), O(ut, A), O(ht, C), O(ot, y), O(lt, k), O(ct, E), (0, a.kJ)(L))
                  if (L.length) {
                      const t = e.exposed || (e.exposed = {});
                      L.forEach((e => {
                          Object.defineProperty(t, e, {
                              get: () => i[e],
                              set: t => i[e] = t
                          })
                      }))
                  } else e.exposed || (e.exposed = {});
              S && e.render === a.dG && (e.render = S), null != P && (e.inheritAttrs = P), M && (e.components = M), I && (e.directives = I)
          }

          function gt(e, t, i = a.dG, r = !1) {
              (0, a.kJ)(e) && (e = St(e));
              for (const s in e) {
                  const i = e[s];
                  let o;
                  o = (0, a.Kn)(i) ? "default" in i ? we(i.from || s, i.default, !0) : we(i.from || s) : we(i), (0, n.dq)(o) && r ? Object.defineProperty(t, s, {
                      enumerable: !0,
                      configurable: !0,
                      get: () => o.value,
                      set: e => o.value = e
                  }) : t[s] = o
              }
          }

          function xt(e, t, i) {
              f((0, a.kJ)(e) ? e.map((e => e.bind(t.proxy))) : e.bind(t.proxy), t, i)
          }

          function vt(e, t, i, n) {
              const r = n.includes(".") ? Pe(i, n) : () => i[n];
              if ((0, a.HD)(e)) {
                  const i = t[e];
                  (0, a.mf)(i) && Te(r, i)
              } else if ((0, a.mf)(e)) Te(r, e.bind(i));
              else if ((0, a.Kn)(e))
                  if ((0, a.kJ)(e)) e.forEach((e => vt(e, t, i, n)));
                  else {
                      const n = (0, a.mf)(e.handler) ? e.handler.bind(i) : t[e.handler];
                      (0, a.mf)(n) && Te(r, n, e)
                  }
              else 0
          }

          function mt(e) {
              const t = e.type,
                  {
                      mixins: i,
                      extends: n
                  } = t,
                  {
                      mixins: a,
                      optionsCache: r,
                      config: {
                          optionMergeStrategies: s
                      }
                  } = e.appContext,
                  o = r.get(t);
              let l;
              return o ? l = o : a.length || i || n ? (l = {}, a.length && a.forEach((e => bt(l, e, s, !0))), bt(l, t, s)) : l = t, r.set(t, l), l
          }

          function bt(e, t, i, n = !1) {
              const {
                  mixins: a,
                  extends: r
              } = t;
              r && bt(e, r, i, !0), a && a.forEach((t => bt(e, t, i, !0)));
              for (const s in t)
                  if (n && "expose" === s);
                  else {
                      const n = yt[s] || i && i[s];
                      e[s] = n ? n(e[s], t[s]) : t[s]
                  } return e
          }
          const yt = {
              data: wt,
              props: Ct,
              emits: Ct,
              methods: Ct,
              computed: Ct,
              beforeCreate: At,
              created: At,
              beforeMount: At,
              mounted: At,
              beforeUpdate: At,
              updated: At,
              beforeDestroy: At,
              beforeUnmount: At,
              destroyed: At,
              unmounted: At,
              activated: At,
              deactivated: At,
              errorCaptured: At,
              serverPrefetch: At,
              components: Ct,
              directives: Ct,
              watch: Tt,
              provide: wt,
              inject: kt
          };

          function wt(e, t) {
              return t ? e ? function() {
                  return (0, a.l7)((0, a.mf)(e) ? e.call(this, this) : e, (0, a.mf)(t) ? t.call(this, this) : t)
              } : t : e
          }

          function kt(e, t) {
              return Ct(St(e), St(t))
          }

          function St(e) {
              if ((0, a.kJ)(e)) {
                  const t = {};
                  for (let i = 0; i < e.length; i++) t[e[i]] = e[i];
                  return t
              }
              return e
          }

          function At(e, t) {
              return e ? [...new Set([].concat(e, t))] : t
          }

          function Ct(e, t) {
              return e ? (0, a.l7)((0, a.l7)(Object.create(null), e), t) : t
          }

          function Tt(e, t) {
              if (!e) return t;
              if (!t) return e;
              const i = (0, a.l7)(Object.create(null), e);
              for (const n in t) i[n] = At(e[n], t[n]);
              return i
          }

          function Et(e, t, i, r = !1) {
              const s = {},
                  o = {};
              (0, a.Nj)(o, Xi, 1), e.propsDefaults = Object.create(null), Pt(e, t, s, o);
              for (const n in e.propsOptions[0]) n in s || (s[n] = void 0);
              i ? e.props = r ? s : (0, n.Um)(s) : e.type.props ? e.props = s : e.props = o, e.attrs = o
          }

          function Lt(e, t, i, r) {
              const {
                  props: s,
                  attrs: o,
                  vnode: {
                      patchFlag: l
                  }
              } = e, c = (0, n.IU)(s), [h] = e.propsOptions;
              let u = !1;
              if (!(r || l > 0) || 16 & l) {
                  let n;
                  Pt(e, t, s, o) && (u = !0);
                  for (const r in c) t && ((0, a.RI)(t, r) || (n = (0, a.rs)(r)) !== r && (0, a.RI)(t, n)) || (h ? !i || void 0 === i[r] && void 0 === i[n] || (s[r] = Mt(h, c, r, void 0, e, !0)) : delete s[r]);
                  if (o !== c)
                      for (const e in o) t && (0, a.RI)(t, e) || (delete o[e], u = !0)
              } else if (8 & l) {
                  const i = e.vnode.dynamicProps;
                  for (let n = 0; n < i.length; n++) {
                      let r = i[n];
                      const l = t[r];
                      if (h)
                          if ((0, a.RI)(o, r)) l !== o[r] && (o[r] = l, u = !0);
                          else {
                              const t = (0, a._A)(r);
                              s[t] = Mt(h, c, t, l, e, !1)
                          }
                      else l !== o[r] && (o[r] = l, u = !0)
                  }
              }
              u && (0, n.X$)(e, "set", "$attrs")
          }

          function Pt(e, t, i, r) {
              const [s, o] = e.propsOptions;
              let l, c = !1;
              if (t)
                  for (let n in t) {
                      if ((0, a.Gg)(n)) continue;
                      const h = t[n];
                      let u;
                      s && (0, a.RI)(s, u = (0, a._A)(n)) ? o && o.includes(u) ? (l || (l = {}))[u] = h : i[u] = h : G(e.emitsOptions, n) || n in r && h === r[n] || (r[n] = h, c = !0)
                  }
              if (o) {
                  const t = (0, n.IU)(i),
                      r = l || a.kT;
                  for (let n = 0; n < o.length; n++) {
                      const l = o[n];
                      i[l] = Mt(s, t, l, r[l], e, !(0, a.RI)(r, l))
                  }
              }
              return c
          }

          function Mt(e, t, i, n, r, s) {
              const o = e[i];
              if (null != o) {
                  const e = (0, a.RI)(o, "default");
                  if (e && void 0 === n) {
                      const e = o.default;
                      if (o.type !== Function && (0, a.mf)(e)) {
                          const {
                              propsDefaults: a
                          } = r;
                          i in a ? n = a[i] : (vn(r), n = a[i] = e.call(null, t), mn())
                      } else n = e
                  }
                  o[0] && (s && !e ? n = !1 : !o[1] || "" !== n && n !== (0, a.rs)(i) || (n = !0))
              }
              return n
          }

          function It(e, t, i = !1) {
              const n = t.propsCache,
                  r = n.get(e);
              if (r) return r;
              const s = e.props,
                  o = {},
                  l = [];
              let c = !1;
              if (!(0, a.mf)(e)) {
                  const n = e => {
                      c = !0;
                      const [i, n] = It(e, t, !0);
                      (0, a.l7)(o, i), n && l.push(...n)
                  };
                  !i && t.mixins.length && t.mixins.forEach(n), e.extends && n(e.extends), e.mixins && e.mixins.forEach(n)
              }
              if (!s && !c) return n.set(e, a.Z6), a.Z6;
              if ((0, a.kJ)(s))
                  for (let u = 0; u < s.length; u++) {
                      0;
                      const e = (0, a._A)(s[u]);
                      Rt(e) && (o[e] = a.kT)
                  } else if (s) {
                      0;
                      for (const e in s) {
                          const t = (0, a._A)(e);
                          if (Rt(t)) {
                              const i = s[e],
                                  n = o[t] = (0, a.kJ)(i) || (0, a.mf)(i) ? {
                                      type: i
                                  } : i;
                              if (n) {
                                  const e = Ft(Boolean, n.type),
                                      i = Ft(String, n.type);
                                  n[0] = e > -1, n[1] = i < 0 || e < i, (e > -1 || (0, a.RI)(n, "default")) && l.push(t)
                              }
                          }
                      }
                  } const h = [o, l];
              return n.set(e, h), h
          }

          function Rt(e) {
              return "$" !== e[0]
          }

          function _t(e) {
              const t = e && e.toString().match(/^\s*function (\w+)/);
              return t ? t[1] : null === e ? "null" : ""
          }

          function Ot(e, t) {
              return _t(e) === _t(t)
          }

          function Ft(e, t) {
              return (0, a.kJ)(t) ? t.findIndex((t => Ot(t, e))) : (0, a.mf)(t) && Ot(t, e) ? 0 : -1
          }
          const Nt = e => "_" === e[0] || "$stable" === e,
              zt = e => (0, a.kJ)(e) ? e.map(Ji) : [Ji(e)],
              Dt = (e, t, i) => {
                  const n = ee(((...e) => zt(t(...e))), i);
                  return n._c = !1, n
              },
              Ht = (e, t, i) => {
                  const n = e._ctx;
                  for (const r in e) {
                      if (Nt(r)) continue;
                      const i = e[r];
                      if ((0, a.mf)(i)) t[r] = Dt(r, i, n);
                      else if (null != i) {
                          0;
                          const e = zt(i);
                          t[r] = () => e
                      }
                  }
              },
              Xt = (e, t) => {
                  const i = zt(t);
                  e.slots.default = () => i
              },
              Yt = (e, t) => {
                  if (32 & e.vnode.shapeFlag) {
                      const i = t._;
                      i ? (e.slots = (0, n.IU)(t), (0, a.Nj)(t, "_", i)) : Ht(t, e.slots = {})
                  } else e.slots = {}, t && Xt(e, t);
                  (0, a.Nj)(e.slots, Xi, 1)
              },
              Bt = (e, t, i) => {
                  const {
                      vnode: n,
                      slots: r
                  } = e;
                  let s = !0,
                      o = a.kT;
                  if (32 & n.shapeFlag) {
                      const e = t._;
                      e ? i && 1 === e ? s = !1 : ((0, a.l7)(r, t), i || 1 !== e || delete r._) : (s = !t.$stable, Ht(t, r)), o = t
                  } else t && (Xt(e, t), o = {
                      default: 1
                  });
                  if (s)
                      for (const a in r) Nt(a) || a in o || delete r[a]
              };

          function jt(e, t) {
              const i = U;
              if (null === i) return e;
              const n = i.proxy,
                  r = e.dirs || (e.dirs = []);
              for (let s = 0; s < t.length; s++) {
                  let [e, i, o, l = a.kT] = t[s];
                  (0, a.mf)(e) && (e = {
                      mounted: e,
                      updated: e
                  }), e.deep && Me(i), r.push({
                      dir: e,
                      instance: n,
                      value: i,
                      oldValue: void 0,
                      arg: o,
                      modifiers: l
                  })
              }
              return e
          }

          function Wt(e, t, i, a) {
              const r = e.dirs,
                  s = t && t.dirs;
              for (let o = 0; o < r.length; o++) {
                  const l = r[o];
                  s && (l.oldValue = s[o].value);
                  let c = l.dir[a];
                  c && ((0, n.Jd)(), f(c, i, 8, [e.el, l, e, t]), (0, n.lk)())
              }
          }

          function Vt() {
              return {
                  app: null,
                  config: {
                      isNativeTag: a.NO,
                      performance: !1,
                      globalProperties: {},
                      optionMergeStrategies: {},
                      errorHandler: void 0,
                      warnHandler: void 0,
                      compilerOptions: {}
                  },
                  mixins: [],
                  components: {},
                  directives: {},
                  provides: Object.create(null),
                  optionsCache: new WeakMap,
                  propsCache: new WeakMap,
                  emitsCache: new WeakMap
              }
          }
          let qt = 0;

          function Gt(e, t) {
              return function(i, n = null) {
                  null == n || (0, a.Kn)(n) || (n = null);
                  const r = Vt(),
                      s = new Set;
                  let o = !1;
                  const l = r.app = {
                      _uid: qt++,
                      _component: i,
                      _props: n,
                      _container: null,
                      _context: r,
                      _instance: null,
                      version: ea,
                      get config() {
                          return r.config
                      },
                      set config(e) {
                          0
                      },
                      use(e, ...t) {
                          return s.has(e) || (e && (0, a.mf)(e.install) ? (s.add(e), e.install(l, ...t)) : (0, a.mf)(e) && (s.add(e), e(l, ...t))), l
                      },
                      mixin(e) {
                          return r.mixins.includes(e) || r.mixins.push(e), l
                      },
                      component(e, t) {
                          return t ? (r.components[e] = t, l) : r.components[e]
                      },
                      directive(e, t) {
                          return t ? (r.directives[e] = t, l) : r.directives[e]
                      },
                      mount(a, s, c) {
                          if (!o) {
                              const h = Wi(i, n);
                              return h.appContext = r, s && t ? t(h, a) : e(h, a, c), o = !0, l._container = a, a.__vue_app__ = l, In(h.component) || h.component.proxy
                          }
                      },
                      unmount() {
                          o && (e(null, l._container), delete l._container.__vue_app__)
                      },
                      provide(e, t) {
                          return r.provides[e] = t, l
                      }
                  };
                  return l
              }
          }

          function Ut(e, t, i, r, s = !1) {
              if ((0, a.kJ)(e)) return void e.forEach(((e, n) => Ut(e, t && ((0, a.kJ)(t) ? t[n] : t), i, r, s)));
              if (Be(r) && !s) return;
              const o = 4 & r.shapeFlag ? In(r.component) || r.component.proxy : r.el,
                  l = s ? null : o,
                  {
                      i: c,
                      r: h
                  } = e;
              const u = t && t.r,
                  f = c.refs === a.kT ? c.refs = {} : c.refs,
                  p = c.setupState;
              if (null != u && u !== h && ((0, a.HD)(u) ? (f[u] = null, (0, a.RI)(p, u) && (p[u] = null)) : (0, n.dq)(u) && (u.value = null)), (0, a.mf)(h)) d(h, c, 12, [l, f]);
              else {
                  const t = (0, a.HD)(h),
                      r = (0, n.dq)(h);
                  if (t || r) {
                      const r = () => {
                          if (e.f) {
                              const i = t ? f[h] : h.value;
                              s ? (0, a.kJ)(i) && (0, a.Od)(i, o) : (0, a.kJ)(i) ? i.includes(o) || i.push(o) : t ? f[h] = [o] : (h.value = [o], e.k && (f[e.k] = h.value))
                          } else t ? (f[h] = l, (0, a.RI)(p, h) && (p[h] = l)) : (0, n.dq)(h) && (h.value = l, e.k && (f[e.k] = l))
                      };
                      l ? (r.id = -1, ei(r, i)) : r()
                  } else 0
              }
          }
          let $t = !1;
          const Zt = e => /svg/.test(e.namespaceURI) && "foreignObject" !== e.tagName,
              Jt = e => 8 === e.nodeType;

          function Kt(e) {
              const {
                  mt: t,
                  p: i,
                  o: {
                      patchProp: n,
                      nextSibling: r,
                      parentNode: s,
                      remove: o,
                      insert: l,
                      createComment: c
                  }
              } = e, h = (e, t) => {
                  if (!t.hasChildNodes()) return i(null, e, t), void D();
                  $t = !1, u(t.firstChild, e, null, null, null), D(), $t && console.error("Hydration completed but contains mismatches.")
              }, u = (i, n, a, o, l, c = !1) => {
                  const h = Jt(i) && "[" === i.data,
                      v = () => g(i, n, a, o, l, h),
                      {
                          type: m,
                          ref: b,
                          shapeFlag: y
                      } = n,
                      w = i.nodeType;
                  n.el = i;
                  let k = null;
                  switch (m) {
                      case Ai:
                          3 !== w ? k = v() : (i.data !== n.children && ($t = !0, i.data = n.children), k = r(i));
                          break;
                      case Ci:
                          k = 8 !== w || h ? v() : r(i);
                          break;
                      case Ti:
                          if (1 === w) {
                              k = i;
                              const e = !n.children.length;
                              for (let t = 0; t < n.staticCount; t++) e && (n.children += k.outerHTML), t === n.staticCount - 1 && (n.anchor = k), k = r(k);
                              return k
                          }
                          k = v();
                          break;
                      case Si:
                          k = h ? p(i, n, a, o, l, c) : v();
                          break;
                      default:
                          if (1 & y) k = 1 !== w || n.type.toLowerCase() !== i.tagName.toLowerCase() ? v() : d(i, n, a, o, l, c);
                          else if (6 & y) {
                              n.slotScopeIds = l;
                              const e = s(i);
                              if (t(n, e, null, a, o, Zt(e), c), k = h ? x(i) : r(i), Be(n)) {
                                  let t;
                                  h ? (t = Wi(Si), t.anchor = k ? k.previousSibling : e.lastChild) : t = 3 === i.nodeType ? Ui("") : Wi("div"), t.el = i, n.component.subTree = t
                              }
                          } else 64 & y ? k = 8 !== w ? v() : n.type.hydrate(i, n, a, o, l, c, e, f) : 128 & y && (k = n.type.hydrate(i, n, a, o, Zt(s(i)), l, c, e, u))
                  }
                  return null != b && Ut(b, null, o, n), k
              }, d = (e, t, i, r, s, l) => {
                  l = l || !!t.dynamicChildren;
                  const {
                      type: c,
                      props: h,
                      patchFlag: u,
                      shapeFlag: d,
                      dirs: p
                  } = t, g = "input" === c && p || "option" === c;
                  if (g || -1 !== u) {
                      if (p && Wt(t, null, i, "created"), h)
                          if (g || !l || 48 & u)
                              for (const t in h)(g && t.endsWith("value") || (0, a.F7)(t) && !(0, a.Gg)(t)) && n(e, t, null, h[t], !1, void 0, i);
                          else h.onClick && n(e, "onClick", null, h.onClick, !1, void 0, i);
                      let c;
                      if ((c = h && h.onVnodeBeforeMount) && tn(c, i, t), p && Wt(t, null, i, "beforeMount"), ((c = h && h.onVnodeMounted) || p) && me((() => {
                              c && tn(c, i, t), p && Wt(t, null, i, "mounted")
                          }), r), 16 & d && (!h || !h.innerHTML && !h.textContent)) {
                          let n = f(e.firstChild, t, e, i, r, s, l);
                          while (n) {
                              $t = !0;
                              const e = n;
                              n = n.nextSibling, o(e)
                          }
                      } else 8 & d && e.textContent !== t.children && ($t = !0, e.textContent = t.children)
                  }
                  return e.nextSibling
              }, f = (e, t, n, a, r, s, o) => {
                  o = o || !!t.dynamicChildren;
                  const l = t.children,
                      c = l.length;
                  for (let h = 0; h < c; h++) {
                      const t = o ? l[h] : l[h] = Ji(l[h]);
                      if (e) e = u(e, t, a, r, s, o);
                      else {
                          if (t.type === Ai && !t.children) continue;
                          $t = !0, i(null, t, n, null, a, r, Zt(n), s)
                      }
                  }
                  return e
              }, p = (e, t, i, n, a, o) => {
                  const {
                      slotScopeIds: h
                  } = t;
                  h && (a = a ? a.concat(h) : h);
                  const u = s(e),
                      d = f(r(e), t, u, i, n, a, o);
                  return d && Jt(d) && "]" === d.data ? r(t.anchor = d) : ($t = !0, l(t.anchor = c("]"), u, d), d)
              }, g = (e, t, n, a, l, c) => {
                  if ($t = !0, t.el = null, c) {
                      const t = x(e);
                      while (1) {
                          const i = r(e);
                          if (!i || i === t) break;
                          o(i)
                      }
                  }
                  const h = r(e),
                      u = s(e);
                  return o(e), i(null, t, u, h, n, a, Zt(u), l), h
              }, x = e => {
                  let t = 0;
                  while (e)
                      if (e = r(e), e && Jt(e) && ("[" === e.data && t++, "]" === e.data)) {
                          if (0 === t) return r(e);
                          t--
                      } return e
              };
              return [h, u]
          }

          function Qt() {}
          const ei = me;

          function ti(e) {
              return ni(e)
          }

          function ii(e) {
              return ni(e, Kt)
          }

          function ni(e, t) {
              Qt();
              const i = (0, a.E9)();
              i.__VUE__ = !0;
              const {
                  insert: r,
                  remove: s,
                  patchProp: o,
                  createElement: l,
                  createText: c,
                  createComment: h,
                  setText: u,
                  setElementText: d,
                  parentNode: f,
                  nextSibling: p,
                  setScopeId: g = a.dG,
                  cloneNode: x,
                  insertStaticContent: v
              } = e, m = (e, t, i, n = null, a = null, r = null, s = !1, o = null, l = !!t.dynamicChildren) => {
                  if (e === t) return;
                  e && !Di(e, t) && (n = Z(e), V(e, a, r, !0), e = null), -2 === t.patchFlag && (l = !1, t.dynamicChildren = null);
                  const {
                      type: c,
                      ref: h,
                      shapeFlag: u
                  } = t;
                  switch (c) {
                      case Ai:
                          b(e, t, i, n);
                          break;
                      case Ci:
                          y(e, t, i, n);
                          break;
                      case Ti:
                          null == e && w(t, i, n, s);
                          break;
                      case Si:
                          R(e, t, i, n, a, r, s, o, l);
                          break;
                      default:
                          1 & u ? A(e, t, i, n, a, r, s, o, l) : 6 & u ? O(e, t, i, n, a, r, s, o, l) : (64 & u || 128 & u) && c.process(e, t, i, n, a, r, s, o, l, K)
                  }
                  null != h && a && Ut(h, e && e.ref, r, t || e, !t)
              }, b = (e, t, i, n) => {
                  if (null == e) r(t.el = c(t.children), i, n);
                  else {
                      const i = t.el = e.el;
                      t.children !== e.children && u(i, t.children)
                  }
              }, y = (e, t, i, n) => {
                  null == e ? r(t.el = h(t.children || ""), i, n) : t.el = e.el
              }, w = (e, t, i, n) => {
                  [e.el, e.anchor] = v(e.children, t, i, n, e.el, e.anchor)
              }, k = ({
                  el: e,
                  anchor: t
              }, i, n) => {
                  let a;
                  while (e && e !== t) a = p(e), r(e, i, n), e = a;
                  r(t, i, n)
              }, S = ({
                  el: e,
                  anchor: t
              }) => {
                  let i;
                  while (e && e !== t) i = p(e), s(e), e = i;
                  s(t)
              }, A = (e, t, i, n, a, r, s, o, l) => {
                  s = s || "svg" === t.type, null == e ? C(t, i, n, a, r, s, o, l) : L(e, t, a, r, s, o, l)
              }, C = (e, t, i, n, s, c, h, u) => {
                  let f, p;
                  const {
                      type: g,
                      props: v,
                      shapeFlag: m,
                      transition: b,
                      patchFlag: y,
                      dirs: w
                  } = e;
                  if (e.el && void 0 !== x && -1 === y) f = e.el = x(e.el);
                  else {
                      if (f = e.el = l(e.type, c, v && v.is, v), 8 & m ? d(f, e.children) : 16 & m && E(e.children, f, null, n, s, c && "foreignObject" !== g, h, u), w && Wt(e, null, n, "created"), v) {
                          for (const t in v) "value" === t || (0, a.Gg)(t) || o(f, t, null, v[t], c, e.children, n, s, $);
                          "value" in v && o(f, "value", null, v.value), (p = v.onVnodeBeforeMount) && tn(p, n, e)
                      }
                      T(f, e, e.scopeId, h, n)
                  }
                  w && Wt(e, null, n, "beforeMount");
                  const k = (!s || s && !s.pendingBranch) && b && !b.persisted;
                  k && b.beforeEnter(f), r(f, t, i), ((p = v && v.onVnodeMounted) || k || w) && ei((() => {
                      p && tn(p, n, e), k && b.enter(f), w && Wt(e, null, n, "mounted")
                  }), s)
              }, T = (e, t, i, n, a) => {
                  if (i && g(e, i), n)
                      for (let r = 0; r < n.length; r++) g(e, n[r]);
                  if (a) {
                      let i = a.subTree;
                      if (t === i) {
                          const t = a.vnode;
                          T(e, t, t.scopeId, t.slotScopeIds, a.parent)
                      }
                  }
              }, E = (e, t, i, n, a, r, s, o, l = 0) => {
                  for (let c = l; c < e.length; c++) {
                      const l = e[c] = o ? Ki(e[c]) : Ji(e[c]);
                      m(null, l, t, i, n, a, r, s, o)
                  }
              }, L = (e, t, i, n, r, s, l) => {
                  const c = t.el = e.el;
                  let {
                      patchFlag: h,
                      dynamicChildren: u,
                      dirs: f
                  } = t;
                  h |= 16 & e.patchFlag;
                  const p = e.props || a.kT,
                      g = t.props || a.kT;
                  let x;
                  i && ai(i, !1), (x = g.onVnodeBeforeUpdate) && tn(x, i, t, e), f && Wt(t, e, i, "beforeUpdate"), i && ai(i, !0);
                  const v = r && "foreignObject" !== t.type;
                  if (u ? P(e.dynamicChildren, u, c, i, n, v, s) : l || Y(e, t, c, null, i, n, v, s, !1), h > 0) {
                      if (16 & h) M(c, t, p, g, i, n, r);
                      else if (2 & h && p.class !== g.class && o(c, "class", null, g.class, r), 4 & h && o(c, "style", p.style, g.style, r), 8 & h) {
                          const a = t.dynamicProps;
                          for (let t = 0; t < a.length; t++) {
                              const s = a[t],
                                  l = p[s],
                                  h = g[s];
                              h === l && "value" !== s || o(c, s, l, h, r, e.children, i, n, $)
                          }
                      }
                      1 & h && e.children !== t.children && d(c, t.children)
                  } else l || null != u || M(c, t, p, g, i, n, r);
                  ((x = g.onVnodeUpdated) || f) && ei((() => {
                      x && tn(x, i, t, e), f && Wt(t, e, i, "updated")
                  }), n)
              }, P = (e, t, i, n, a, r, s) => {
                  for (let o = 0; o < t.length; o++) {
                      const l = e[o],
                          c = t[o],
                          h = l.el && (l.type === Si || !Di(l, c) || 70 & l.shapeFlag) ? f(l.el) : i;
                      m(l, c, h, null, n, a, r, s, !0)
                  }
              }, M = (e, t, i, n, r, s, l) => {
                  if (i !== n) {
                      for (const c in n) {
                          if ((0, a.Gg)(c)) continue;
                          const h = n[c],
                              u = i[c];
                          h !== u && "value" !== c && o(e, c, u, h, l, t.children, r, s, $)
                      }
                      if (i !== a.kT)
                          for (const c in i)(0, a.Gg)(c) || c in n || o(e, c, i[c], null, l, t.children, r, s, $);
                      "value" in n && o(e, "value", i.value, n.value)
                  }
              }, R = (e, t, i, n, a, s, o, l, h) => {
                  const u = t.el = e ? e.el : c(""),
                      d = t.anchor = e ? e.anchor : c("");
                  let {
                      patchFlag: f,
                      dynamicChildren: p,
                      slotScopeIds: g
                  } = t;
                  g && (l = l ? l.concat(g) : g), null == e ? (r(u, i, n), r(d, i, n), E(t.children, i, d, a, s, o, l, h)) : f > 0 && 64 & f && p && e.dynamicChildren ? (P(e.dynamicChildren, p, i, a, s, o, l), (null != t.key || a && t === a.subTree) && ri(e, t, !0)) : Y(e, t, i, d, a, s, o, l, h)
              }, O = (e, t, i, n, a, r, s, o, l) => {
                  t.slotScopeIds = o, null == e ? 512 & t.shapeFlag ? a.ctx.activate(t, i, n, s, l) : F(t, i, n, a, r, s, l) : N(e, t, l)
              }, F = (e, t, i, n, a, r, s) => {
                  const o = e.component = pn(e, n, a);
                  if (Ve(e) && (o.ctx.renderer = K), Sn(o), o.asyncDep) {
                      if (a && a.registerDep(o, H), !e.el) {
                          const e = o.subTree = Wi(Ci);
                          y(null, e, t, i)
                      }
                  } else H(o, e, t, i, a, r, s)
              }, N = (e, t, i) => {
                  const n = t.component = e.component;
                  if (re(e, t, i)) {
                      if (n.asyncDep && !n.asyncResolved) return void X(n, t, i);
                      n.next = t, _(n.update), n.update()
                  } else t.component = e.component, t.el = e.el, n.vnode = t
              }, H = (e, t, i, r, s, o, l) => {
                  const c = () => {
                          if (e.isMounted) {
                              let t, {
                                      next: i,
                                      bu: n,
                                      u: r,
                                      parent: c,
                                      vnode: h
                                  } = e,
                                  u = i;
                              0, ai(e, !1), i ? (i.el = h.el, X(e, i, l)) : i = h, n && (0, a.ir)(n), (t = i.props && i.props.onVnodeBeforeUpdate) && tn(t, c, i, h), ai(e, !0);
                              const d = te(e);
                              0;
                              const p = e.subTree;
                              e.subTree = d, m(p, d, f(p.el), Z(p), e, s, o), i.el = d.el, null === u && oe(e, d.el), r && ei(r, s), (t = i.props && i.props.onVnodeUpdated) && ei((() => tn(t, c, i, h)), s)
                          } else {
                              let n;
                              const {
                                  el: l,
                                  props: c
                              } = t, {
                                  bm: h,
                                  m: u,
                                  parent: d
                              } = e, f = Be(t);
                              if (ai(e, !1), h && (0, a.ir)(h), !f && (n = c && c.onVnodeBeforeMount) && tn(n, d, t), ai(e, !0), l && ee) {
                                  const i = () => {
                                      e.subTree = te(e), ee(l, e.subTree, e, s, null)
                                  };
                                  f ? t.type.__asyncLoader().then((() => !e.isUnmounted && i())) : i()
                              } else {
                                  0;
                                  const n = e.subTree = te(e);
                                  0, m(null, n, i, r, e, s, o), t.el = n.el
                              }
                              if (u && ei(u, s), !f && (n = c && c.onVnodeMounted)) {
                                  const e = t;
                                  ei((() => tn(n, d, e)), s)
                              }
                              256 & t.shapeFlag && e.a && ei(e.a, s), e.isMounted = !0, t = i = r = null
                          }
                      },
                      h = e.effect = new n.qq(c, (() => I(e.update)), e.scope),
                      u = e.update = h.run.bind(h);
                  u.id = e.uid, ai(e, !0), u()
              }, X = (e, t, i) => {
                  t.component = e;
                  const a = e.vnode.props;
                  e.vnode = t, e.next = null, Lt(e, t.props, a, i), Bt(e, t.children, i), (0, n.Jd)(), z(void 0, e.update), (0, n.lk)()
              }, Y = (e, t, i, n, a, r, s, o, l = !1) => {
                  const c = e && e.children,
                      h = e ? e.shapeFlag : 0,
                      u = t.children,
                      {
                          patchFlag: f,
                          shapeFlag: p
                      } = t;
                  if (f > 0) {
                      if (128 & f) return void j(c, u, i, n, a, r, s, o, l);
                      if (256 & f) return void B(c, u, i, n, a, r, s, o, l)
                  }
                  8 & p ? (16 & h && $(c, a, r), u !== c && d(i, u)) : 16 & h ? 16 & p ? j(c, u, i, n, a, r, s, o, l) : $(c, a, r, !0) : (8 & h && d(i, ""), 16 & p && E(u, i, n, a, r, s, o, l))
              }, B = (e, t, i, n, r, s, o, l, c) => {
                  e = e || a.Z6, t = t || a.Z6;
                  const h = e.length,
                      u = t.length,
                      d = Math.min(h, u);
                  let f;
                  for (f = 0; f < d; f++) {
                      const n = t[f] = c ? Ki(t[f]) : Ji(t[f]);
                      m(e[f], n, i, null, r, s, o, l, c)
                  }
                  h > u ? $(e, r, s, !0, !1, d) : E(t, i, n, r, s, o, l, c, d)
              }, j = (e, t, i, n, r, s, o, l, c) => {
                  let h = 0;
                  const u = t.length;
                  let d = e.length - 1,
                      f = u - 1;
                  while (h <= d && h <= f) {
                      const n = e[h],
                          a = t[h] = c ? Ki(t[h]) : Ji(t[h]);
                      if (!Di(n, a)) break;
                      m(n, a, i, null, r, s, o, l, c), h++
                  }
                  while (h <= d && h <= f) {
                      const n = e[d],
                          a = t[f] = c ? Ki(t[f]) : Ji(t[f]);
                      if (!Di(n, a)) break;
                      m(n, a, i, null, r, s, o, l, c), d--, f--
                  }
                  if (h > d) {
                      if (h <= f) {
                          const e = f + 1,
                              a = e < u ? t[e].el : n;
                          while (h <= f) m(null, t[h] = c ? Ki(t[h]) : Ji(t[h]), i, a, r, s, o, l, c), h++
                      }
                  } else if (h > f)
                      while (h <= d) V(e[h], r, s, !0), h++;
                  else {
                      const p = h,
                          g = h,
                          x = new Map;
                      for (h = g; h <= f; h++) {
                          const e = t[h] = c ? Ki(t[h]) : Ji(t[h]);
                          null != e.key && x.set(e.key, h)
                      }
                      let v, b = 0;
                      const y = f - g + 1;
                      let w = !1,
                          k = 0;
                      const S = new Array(y);
                      for (h = 0; h < y; h++) S[h] = 0;
                      for (h = p; h <= d; h++) {
                          const n = e[h];
                          if (b >= y) {
                              V(n, r, s, !0);
                              continue
                          }
                          let a;
                          if (null != n.key) a = x.get(n.key);
                          else
                              for (v = g; v <= f; v++)
                                  if (0 === S[v - g] && Di(n, t[v])) {
                                      a = v;
                                      break
                                  } void 0 === a ? V(n, r, s, !0) : (S[a - g] = h + 1, a >= k ? k = a : w = !0, m(n, t[a], i, null, r, s, o, l, c), b++)
                      }
                      const A = w ? si(S) : a.Z6;
                      for (v = A.length - 1, h = y - 1; h >= 0; h--) {
                          const e = g + h,
                              a = t[e],
                              d = e + 1 < u ? t[e + 1].el : n;
                          0 === S[h] ? m(null, a, i, d, r, s, o, l, c) : w && (v < 0 || h !== A[v] ? W(a, i, d, 2) : v--)
                      }
                  }
              }, W = (e, t, i, n, a = null) => {
                  const {
                      el: s,
                      type: o,
                      transition: l,
                      children: c,
                      shapeFlag: h
                  } = e;
                  if (6 & h) return void W(e.component.subTree, t, i, n);
                  if (128 & h) return void e.suspense.move(t, i, n);
                  if (64 & h) return void o.move(e, t, i, K);
                  if (o === Si) {
                      r(s, t, i);
                      for (let e = 0; e < c.length; e++) W(c[e], t, i, n);
                      return void r(e.anchor, t, i)
                  }
                  if (o === Ti) return void k(e, t, i);
                  const u = 2 !== n && 1 & h && l;
                  if (u)
                      if (0 === n) l.beforeEnter(s), r(s, t, i), ei((() => l.enter(s)), a);
                      else {
                          const {
                              leave: e,
                              delayLeave: n,
                              afterLeave: a
                          } = l, o = () => r(s, t, i), c = () => {
                              e(s, (() => {
                                  o(), a && a()
                              }))
                          };
                          n ? n(s, o, c) : c()
                      }
                  else r(s, t, i)
              }, V = (e, t, i, n = !1, a = !1) => {
                  const {
                      type: r,
                      props: s,
                      ref: o,
                      children: l,
                      dynamicChildren: c,
                      shapeFlag: h,
                      patchFlag: u,
                      dirs: d
                  } = e;
                  if (null != o && Ut(o, null, i, e, !0), 256 & h) return void t.ctx.deactivate(e);
                  const f = 1 & h && d,
                      p = !Be(e);
                  let g;
                  if (p && (g = s && s.onVnodeBeforeUnmount) && tn(g, t, e), 6 & h) U(e.component, i, n);
                  else {
                      if (128 & h) return void e.suspense.unmount(i, n);
                      f && Wt(e, null, t, "beforeUnmount"), 64 & h ? e.type.remove(e, t, i, a, K, n) : c && (r !== Si || u > 0 && 64 & u) ? $(c, t, i, !1, !0) : (r === Si && 384 & u || !a && 16 & h) && $(l, t, i), n && q(e)
                  }(p && (g = s && s.onVnodeUnmounted) || f) && ei((() => {
                      g && tn(g, t, e), f && Wt(e, null, t, "unmounted")
                  }), i)
              }, q = e => {
                  const {
                      type: t,
                      el: i,
                      anchor: n,
                      transition: a
                  } = e;
                  if (t === Si) return void G(i, n);
                  if (t === Ti) return void S(e);
                  const r = () => {
                      s(i), a && !a.persisted && a.afterLeave && a.afterLeave()
                  };
                  if (1 & e.shapeFlag && a && !a.persisted) {
                      const {
                          leave: t,
                          delayLeave: n
                      } = a, s = () => t(i, r);
                      n ? n(e.el, r, s) : s()
                  } else r()
              }, G = (e, t) => {
                  let i;
                  while (e !== t) i = p(e), s(e), e = i;
                  s(t)
              }, U = (e, t, i) => {
                  const {
                      bum: n,
                      scope: r,
                      update: s,
                      subTree: o,
                      um: l
                  } = e;
                  n && (0, a.ir)(n), r.stop(), s && (s.active = !1, V(o, e, t, i)), l && ei(l, t), ei((() => {
                      e.isUnmounted = !0
                  }), t), t && t.pendingBranch && !t.isUnmounted && e.asyncDep && !e.asyncResolved && e.suspenseId === t.pendingId && (t.deps--, 0 === t.deps && t.resolve())
              }, $ = (e, t, i, n = !1, a = !1, r = 0) => {
                  for (let s = r; s < e.length; s++) V(e[s], t, i, n, a)
              }, Z = e => 6 & e.shapeFlag ? Z(e.component.subTree) : 128 & e.shapeFlag ? e.suspense.next() : p(e.anchor || e.el), J = (e, t, i) => {
                  null == e ? t._vnode && V(t._vnode, null, null, !0) : m(t._vnode || null, e, t, null, null, null, i), D(), t._vnode = e
              }, K = {
                  p: m,
                  um: V,
                  m: W,
                  r: q,
                  mt: F,
                  mc: E,
                  pc: Y,
                  pbc: P,
                  n: Z,
                  o: e
              };
              let Q, ee;
              return t && ([Q, ee] = t(K)), {
                  render: J,
                  hydrate: Q,
                  createApp: Gt(J, Q)
              }
          }

          function ai({
              effect: e,
              update: t
          }, i) {
              e.allowRecurse = t.allowRecurse = i
          }

          function ri(e, t, i = !1) {
              const n = e.children,
                  r = t.children;
              if ((0, a.kJ)(n) && (0, a.kJ)(r))
                  for (let a = 0; a < n.length; a++) {
                      const e = n[a];
                      let t = r[a];
                      1 & t.shapeFlag && !t.dynamicChildren && ((t.patchFlag <= 0 || 32 === t.patchFlag) && (t = r[a] = Ki(r[a]), t.el = e.el), i || ri(e, t))
                  }
          }

          function si(e) {
              const t = e.slice(),
                  i = [0];
              let n, a, r, s, o;
              const l = e.length;
              for (n = 0; n < l; n++) {
                  const l = e[n];
                  if (0 !== l) {
                      if (a = i[i.length - 1], e[a] < l) {
                          t[n] = a, i.push(n);
                          continue
                      }
                      r = 0, s = i.length - 1;
                      while (r < s) o = r + s >> 1, e[i[o]] < l ? r = o + 1 : s = o;
                      l < e[i[r]] && (r > 0 && (t[n] = i[r - 1]), i[r] = n)
                  }
              }
              r = i.length, s = i[r - 1];
              while (r-- > 0) i[r] = s, s = t[s];
              return i
          }
          const oi = e => e.__isTeleport,
              li = e => e && (e.disabled || "" === e.disabled),
              ci = e => "undefined" !== typeof SVGElement && e instanceof SVGElement,
              hi = (e, t) => {
                  const i = e && e.to;
                  if ((0, a.HD)(i)) {
                      if (t) {
                          const e = t(i);
                          return e
                      }
                      return null
                  }
                  return i
              },
              ui = {
                  __isTeleport: !0,
                  process(e, t, i, n, a, r, s, o, l, c) {
                      const {
                          mc: h,
                          pc: u,
                          pbc: d,
                          o: {
                              insert: f,
                              querySelector: p,
                              createText: g,
                              createComment: x
                          }
                      } = c, v = li(t.props);
                      let {
                          shapeFlag: m,
                          children: b,
                          dynamicChildren: y
                      } = t;
                      if (null == e) {
                          const e = t.el = g(""),
                              c = t.anchor = g("");
                          f(e, i, n), f(c, i, n);
                          const u = t.target = hi(t.props, p),
                              d = t.targetAnchor = g("");
                          u && (f(d, u), s = s || ci(u));
                          const x = (e, t) => {
                              16 & m && h(b, e, t, a, r, s, o, l)
                          };
                          v ? x(i, c) : u && x(u, d)
                      } else {
                          t.el = e.el;
                          const n = t.anchor = e.anchor,
                              h = t.target = e.target,
                              f = t.targetAnchor = e.targetAnchor,
                              g = li(e.props),
                              x = g ? i : h,
                              m = g ? n : f;
                          if (s = s || ci(h), y ? (d(e.dynamicChildren, y, x, a, r, s, o), ri(e, t, !0)) : l || u(e, t, x, m, a, r, s, o, !1), v) g || di(t, i, n, c, 1);
                          else if ((t.props && t.props.to) !== (e.props && e.props.to)) {
                              const e = t.target = hi(t.props, p);
                              e && di(t, e, null, c, 0)
                          } else g && di(t, h, f, c, 1)
                      }
                  },
                  remove(e, t, i, n, {
                      um: a,
                      o: {
                          remove: r
                      }
                  }, s) {
                      const {
                          shapeFlag: o,
                          children: l,
                          anchor: c,
                          targetAnchor: h,
                          target: u,
                          props: d
                      } = e;
                      if (u && r(h), (s || !li(d)) && (r(c), 16 & o))
                          for (let f = 0; f < l.length; f++) {
                              const e = l[f];
                              a(e, t, i, !0, !!e.dynamicChildren)
                          }
                  },
                  move: di,
                  hydrate: fi
              };

          function di(e, t, i, {
              o: {
                  insert: n
              },
              m: a
          }, r = 2) {
              0 === r && n(e.targetAnchor, t, i);
              const {
                  el: s,
                  anchor: o,
                  shapeFlag: l,
                  children: c,
                  props: h
              } = e, u = 2 === r;
              if (u && n(s, t, i), (!u || li(h)) && 16 & l)
                  for (let d = 0; d < c.length; d++) a(c[d], t, i, 2);
              u && n(o, t, i)
          }

          function fi(e, t, i, n, a, r, {
              o: {
                  nextSibling: s,
                  parentNode: o,
                  querySelector: l
              }
          }, c) {
              const h = t.target = hi(t.props, l);
              if (h) {
                  const l = h._lpa || h.firstChild;
                  16 & t.shapeFlag && (li(t.props) ? (t.anchor = c(s(e), t, o(e), i, n, a, r), t.targetAnchor = l) : (t.anchor = s(e), t.targetAnchor = c(l, t, h, i, n, a, r)), h._lpa = t.targetAnchor && s(t.targetAnchor))
              }
              return t.anchor && s(t.anchor)
          }
          const pi = ui,
              gi = "components",
              xi = "directives";

          function vi(e, t) {
              return wi(gi, e, !0, t) || e
          }
          const mi = Symbol();

          function bi(e) {
              return (0, a.HD)(e) ? wi(gi, e, !1) || e : e || mi
          }

          function yi(e) {
              return wi(xi, e)
          }

          function wi(e, t, i = !0, n = !1) {
              const r = U || gn;
              if (r) {
                  const i = r.type;
                  if (e === gi) {
                      const e = On(i);
                      if (e && (e === t || e === (0, a._A)(t) || e === (0, a.kC)((0, a._A)(t)))) return i
                  }
                  const s = ki(r[e] || i[e], t) || ki(r.appContext[e], t);
                  return !s && n ? i : s
              }
          }

          function ki(e, t) {
              return e && (e[t] || e[(0, a._A)(t)] || e[(0, a.kC)((0, a._A)(t))])
          }
          const Si = Symbol(void 0),
              Ai = Symbol(void 0),
              Ci = Symbol(void 0),
              Ti = Symbol(void 0),
              Ei = [];
          let Li = null;

          function Pi(e = !1) {
              Ei.push(Li = e ? null : [])
          }

          function Mi() {
              Ei.pop(), Li = Ei[Ei.length - 1] || null
          }
          let Ii, Ri = 1;

          function _i(e) {
              Ri += e
          }

          function Oi(e) {
              return e.dynamicChildren = Ri > 0 ? Li || a.Z6 : null, Mi(), Ri > 0 && Li && Li.push(e), e
          }

          function Fi(e, t, i, n, a, r) {
              return Oi(ji(e, t, i, n, a, r, !0))
          }

          function Ni(e, t, i, n, a) {
              return Oi(Wi(e, t, i, n, a, !0))
          }

          function zi(e) {
              return !!e && !0 === e.__v_isVNode
          }

          function Di(e, t) {
              return e.type === t.type && e.key === t.key
          }

          function Hi(e) {
              Ii = e
          }
          const Xi = "__vInternal",
              Yi = ({
                  key: e
              }) => null != e ? e : null,
              Bi = ({
                  ref: e,
                  ref_key: t,
                  ref_for: i
              }) => null != e ? (0, a.HD)(e) || (0, n.dq)(e) || (0, a.mf)(e) ? {
                  i: U,
                  r: e,
                  k: t,
                  f: !!i
              } : e : null;

          function ji(e, t = null, i = null, n = 0, r = null, s = (e === Si ? 0 : 1), o = !1, l = !1) {
              const c = {
                  __v_isVNode: !0,
                  __v_skip: !0,
                  type: e,
                  props: t,
                  key: t && Yi(t),
                  ref: t && Bi(t),
                  scopeId: $,
                  slotScopeIds: null,
                  children: i,
                  component: null,
                  suspense: null,
                  ssContent: null,
                  ssFallback: null,
                  dirs: null,
                  transition: null,
                  el: null,
                  anchor: null,
                  target: null,
                  targetAnchor: null,
                  staticCount: 0,
                  shapeFlag: s,
                  patchFlag: n,
                  dynamicProps: r,
                  dynamicChildren: null,
                  appContext: null
              };
              return l ? (Qi(c, i), 128 & s && e.normalize(c)) : i && (c.shapeFlag |= (0, a.HD)(i) ? 8 : 16), Ri > 0 && !o && Li && (c.patchFlag > 0 || 6 & s) && 32 !== c.patchFlag && Li.push(c), c
          }
          const Wi = Vi;

          function Vi(e, t = null, i = null, r = 0, s = null, o = !1) {
              if (e && e !== mi || (e = Ci), zi(e)) {
                  const n = Gi(e, t, !0);
                  return i && Qi(n, i), n
              }
              if (Nn(e) && (e = e.__vccOpts), t) {
                  t = qi(t);
                  let {
                      class: e,
                      style: i
                  } = t;
                  e && !(0, a.HD)(e) && (t.class = (0, a.C_)(e)), (0, a.Kn)(i) && ((0, n.X3)(i) && !(0, a.kJ)(i) && (i = (0, a.l7)({}, i)), t.style = (0, a.j5)(i))
              }
              const l = (0, a.HD)(e) ? 1 : le(e) ? 128 : oi(e) ? 64 : (0, a.Kn)(e) ? 4 : (0, a.mf)(e) ? 2 : 0;
              return ji(e, t, i, r, s, l, o, !0)
          }

          function qi(e) {
              return e ? (0, n.X3)(e) || Xi in e ? (0, a.l7)({}, e) : e : null
          }

          function Gi(e, t, i = !1) {
              const {
                  props: n,
                  ref: r,
                  patchFlag: s,
                  children: o
              } = e, l = t ? en(n || {}, t) : n, c = {
                  __v_isVNode: !0,
                  __v_skip: !0,
                  type: e.type,
                  props: l,
                  key: l && Yi(l),
                  ref: t && t.ref ? i && r ? (0, a.kJ)(r) ? r.concat(Bi(t)) : [r, Bi(t)] : Bi(t) : r,
                  scopeId: e.scopeId,
                  slotScopeIds: e.slotScopeIds,
                  children: o,
                  target: e.target,
                  targetAnchor: e.targetAnchor,
                  staticCount: e.staticCount,
                  shapeFlag: e.shapeFlag,
                  patchFlag: t && e.type !== Si ? -1 === s ? 16 : 16 | s : s,
                  dynamicProps: e.dynamicProps,
                  dynamicChildren: e.dynamicChildren,
                  appContext: e.appContext,
                  dirs: e.dirs,
                  transition: e.transition,
                  component: e.component,
                  suspense: e.suspense,
                  ssContent: e.ssContent && Gi(e.ssContent),
                  ssFallback: e.ssFallback && Gi(e.ssFallback),
                  el: e.el,
                  anchor: e.anchor
              };
              return c
          }

          function Ui(e = " ", t = 0) {
              return Wi(Ai, null, e, t)
          }

          function $i(e, t) {
              const i = Wi(Ti, null, e);
              return i.staticCount = t, i
          }

          function Zi(e = "", t = !1) {
              return t ? (Pi(), Ni(Ci, null, e)) : Wi(Ci, null, e)
          }

          function Ji(e) {
              return null == e || "boolean" === typeof e ? Wi(Ci) : (0, a.kJ)(e) ? Wi(Si, null, e.slice()) : "object" === typeof e ? Ki(e) : Wi(Ai, null, String(e))
          }

          function Ki(e) {
              return null === e.el || e.memo ? e : Gi(e)
          }

          function Qi(e, t) {
              let i = 0;
              const {
                  shapeFlag: n
              } = e;
              if (null == t) t = null;
              else if ((0, a.kJ)(t)) i = 16;
              else if ("object" === typeof t) {
                  if (65 & n) {
                      const i = t.default;
                      return void(i && (i._c && (i._d = !1), Qi(e, i()), i._c && (i._d = !0)))
                  } {
                      i = 32;
                      const n = t._;
                      n || Xi in t ? 3 === n && U && (1 === U.slots._ ? t._ = 1 : (t._ = 2, e.patchFlag |= 1024)) : t._ctx = U
                  }
              } else(0, a.mf)(t) ? (t = {
                  default: t,
                  _ctx: U
              }, i = 32) : (t = String(t), 64 & n ? (i = 16, t = [Ui(t)]) : i = 8);
              e.children = t, e.shapeFlag |= i
          }

          function en(...e) {
              const t = {};
              for (let i = 0; i < e.length; i++) {
                  const n = e[i];
                  for (const e in n)
                      if ("class" === e) t.class !== n.class && (t.class = (0, a.C_)([t.class, n.class]));
                      else if ("style" === e) t.style = (0, a.j5)([t.style, n.style]);
                  else if ((0, a.F7)(e)) {
                      const i = t[e],
                          r = n[e];
                      !r || i === r || (0, a.kJ)(i) && i.includes(r) || (t[e] = i ? [].concat(i, r) : r)
                  } else "" !== e && (t[e] = n[e])
              }
              return t
          }

          function tn(e, t, i, n = null) {
              f(e, t, 7, [i, n])
          }

          function nn(e, t, i, n) {
              let r;
              const s = i && i[n];
              if ((0, a.kJ)(e) || (0, a.HD)(e)) {
                  r = new Array(e.length);
                  for (let i = 0, n = e.length; i < n; i++) r[i] = t(e[i], i, void 0, s && s[i])
              } else if ("number" === typeof e) {
                  0,
                  r = new Array(e);
                  for (let i = 0; i < e; i++) r[i] = t(i + 1, i, void 0, s && s[i])
              }
              else if ((0, a.Kn)(e))
                  if (e[Symbol.iterator]) r = Array.from(e, ((e, i) => t(e, i, void 0, s && s[i])));
                  else {
                      const i = Object.keys(e);
                      r = new Array(i.length);
                      for (let n = 0, a = i.length; n < a; n++) {
                          const a = i[n];
                          r[n] = t(e[a], a, n, s && s[n])
                      }
                  }
              else r = [];
              return i && (i[n] = r), r
          }

          function an(e, t) {
              for (let i = 0; i < t.length; i++) {
                  const n = t[i];
                  if ((0, a.kJ)(n))
                      for (let t = 0; t < n.length; t++) e[n[t].name] = n[t].fn;
                  else n && (e[n.name] = n.fn)
              }
              return e
          }

          function rn(e, t, i = {}, n, a) {
              if (U.isCE) return Wi("slot", "default" === t ? null : {
                  name: t
              }, n && n());
              let r = e[t];
              r && r._c && (r._d = !1), Pi();
              const s = r && sn(r(i)),
                  o = Ni(Si, {
                      key: i.key || `_${t}`
                  }, s || (n ? n() : []), s && 1 === e._ ? 64 : -2);
              return !a && o.scopeId && (o.slotScopeIds = [o.scopeId + "-s"]), r && r._c && (r._d = !0), o
          }

          function sn(e) {
              return e.some((e => !zi(e) || e.type !== Ci && !(e.type === Si && !sn(e.children)))) ? e : null
          }

          function on(e) {
              const t = {};
              for (const i in e) t[(0, a.hR)(i)] = e[i];
              return t
          }
          const ln = e => e ? bn(e) ? In(e) || e.proxy : ln(e.parent) : null,
              cn = (0, a.l7)(Object.create(null), {
                  $: e => e,
                  $el: e => e.vnode.el,
                  $data: e => e.data,
                  $props: e => e.props,
                  $attrs: e => e.attrs,
                  $slots: e => e.slots,
                  $refs: e => e.refs,
                  $parent: e => ln(e.parent),
                  $root: e => ln(e.root),
                  $emit: e => e.emit,
                  $options: e => mt(e),
                  $forceUpdate: e => () => I(e.update),
                  $nextTick: e => P.bind(e.proxy),
                  $watch: e => Le.bind(e)
              }),
              hn = {
                  get({
                      _: e
                  }, t) {
                      const {
                          ctx: i,
                          setupState: r,
                          data: s,
                          props: o,
                          accessCache: l,
                          type: c,
                          appContext: h
                      } = e;
                      let u;
                      if ("$" !== t[0]) {
                          const n = l[t];
                          if (void 0 !== n) switch (n) {
                              case 1:
                                  return r[t];
                              case 2:
                                  return s[t];
                              case 4:
                                  return i[t];
                              case 3:
                                  return o[t]
                          } else {
                              if (r !== a.kT && (0, a.RI)(r, t)) return l[t] = 1, r[t];
                              if (s !== a.kT && (0, a.RI)(s, t)) return l[t] = 2, s[t];
                              if ((u = e.propsOptions[0]) && (0, a.RI)(u, t)) return l[t] = 3, o[t];
                              if (i !== a.kT && (0, a.RI)(i, t)) return l[t] = 4, i[t];
                              ft && (l[t] = 0)
                          }
                      }
                      const d = cn[t];
                      let f, p;
                      return d ? ("$attrs" === t && (0, n.j)(e, "get", t), d(e)) : (f = c.__cssModules) && (f = f[t]) ? f : i !== a.kT && (0, a.RI)(i, t) ? (l[t] = 4, i[t]) : (p = h.config.globalProperties, (0, a.RI)(p, t) ? p[t] : void 0)
                  },
                  set({
                      _: e
                  }, t, i) {
                      const {
                          data: n,
                          setupState: r,
                          ctx: s
                      } = e;
                      return r !== a.kT && (0, a.RI)(r, t) ? (r[t] = i, !0) : n !== a.kT && (0, a.RI)(n, t) ? (n[t] = i, !0) : !(0, a.RI)(e.props, t) && (("$" !== t[0] || !(t.slice(1) in e)) && (s[t] = i, !0))
                  },
                  has({
                      _: {
                          data: e,
                          setupState: t,
                          accessCache: i,
                          ctx: n,
                          appContext: r,
                          propsOptions: s
                      }
                  }, o) {
                      let l;
                      return !!i[o] || e !== a.kT && (0, a.RI)(e, o) || t !== a.kT && (0, a.RI)(t, o) || (l = s[0]) && (0, a.RI)(l, o) || (0, a.RI)(n, o) || (0, a.RI)(cn, o) || (0, a.RI)(r.config.globalProperties, o)
                  },
                  defineProperty(e, t, i) {
                      return null != i.get ? this.set(e, t, i.get(), null) : null != i.value && this.set(e, t, i.value, null), Reflect.defineProperty(e, t, i)
                  }
              };
          const un = (0, a.l7)({}, hn, {
              get(e, t) {
                  if (t !== Symbol.unscopables) return hn.get(e, t, e)
              },
              has(e, t) {
                  const i = "_" !== t[0] && !(0, a.e1)(t);
                  return i
              }
          });
          const dn = Vt();
          let fn = 0;

          function pn(e, t, i) {
              const r = e.type,
                  s = (t ? t.appContext : e.appContext) || dn,
                  o = {
                      uid: fn++,
                      vnode: e,
                      type: r,
                      parent: t,
                      appContext: s,
                      root: null,
                      next: null,
                      subTree: null,
                      effect: null,
                      update: null,
                      scope: new n.Bj(!0),
                      render: null,
                      proxy: null,
                      exposed: null,
                      exposeProxy: null,
                      withProxy: null,
                      provides: t ? t.provides : Object.create(s.provides),
                      accessCache: null,
                      renderCache: [],
                      components: null,
                      directives: null,
                      propsOptions: It(r, s),
                      emitsOptions: q(r, s),
                      emit: null,
                      emitted: null,
                      propsDefaults: a.kT,
                      inheritAttrs: r.inheritAttrs,
                      ctx: a.kT,
                      data: a.kT,
                      props: a.kT,
                      attrs: a.kT,
                      slots: a.kT,
                      refs: a.kT,
                      setupState: a.kT,
                      setupContext: null,
                      suspense: i,
                      suspenseId: i ? i.pendingId : 0,
                      asyncDep: null,
                      asyncResolved: !1,
                      isMounted: !1,
                      isUnmounted: !1,
                      isDeactivated: !1,
                      bc: null,
                      c: null,
                      bm: null,
                      m: null,
                      bu: null,
                      u: null,
                      um: null,
                      bum: null,
                      da: null,
                      a: null,
                      rtg: null,
                      rtc: null,
                      ec: null,
                      sp: null
                  };
              return o.ctx = {
                  _: o
              }, o.root = t ? t.root : o, o.emit = V.bind(null, o), e.ce && e.ce(o), o
          }
          let gn = null;
          const xn = () => gn || U,
              vn = e => {
                  gn = e, e.scope.on()
              },
              mn = () => {
                  gn && gn.scope.off(), gn = null
              };

          function bn(e) {
              return 4 & e.vnode.shapeFlag
          }
          let yn, wn, kn = !1;

          function Sn(e, t = !1) {
              kn = t;
              const {
                  props: i,
                  children: n
              } = e.vnode, a = bn(e);
              Et(e, i, a, t), Yt(e, n);
              const r = a ? An(e, t) : void 0;
              return kn = !1, r
          }

          function An(e, t) {
              const i = e.type;
              e.accessCache = Object.create(null), e.proxy = (0, n.Xl)(new Proxy(e.ctx, hn));
              const {
                  setup: r
              } = i;
              if (r) {
                  const i = e.setupContext = r.length > 1 ? Mn(e) : null;
                  vn(e), (0, n.Jd)();
                  const s = d(r, e, 0, [e.props, i]);
                  if ((0, n.lk)(), mn(), (0, a.tI)(s)) {
                      if (s.then(mn, mn), t) return s.then((i => {
                          Cn(e, i, t)
                      })).catch((t => {
                          p(t, e, 0)
                      }));
                      e.asyncDep = s
                  } else Cn(e, s, t)
              } else Ln(e, t)
          }

          function Cn(e, t, i) {
              (0, a.mf)(t) ? e.type.__ssrInlineRender ? e.ssrRender = t : e.render = t: (0, a.Kn)(t) && (e.setupState = (0, n.WL)(t)), Ln(e, i)
          }

          function Tn(e) {
              yn = e, wn = e => {
                  e.render._rc && (e.withProxy = new Proxy(e.ctx, un))
              }
          }
          const En = () => !yn;

          function Ln(e, t, i) {
              const r = e.type;
              if (!e.render) {
                  if (!t && yn && !r.render) {
                      const t = r.template;
                      if (t) {
                          0;
                          const {
                              isCustomElement: i,
                              compilerOptions: n
                          } = e.appContext.config, {
                              delimiters: s,
                              compilerOptions: o
                          } = r, l = (0, a.l7)((0, a.l7)({
                              isCustomElement: i,
                              delimiters: s
                          }, n), o);
                          r.render = yn(t, l)
                      }
                  }
                  e.render = r.render || a.dG, wn && wn(e)
              }
              vn(e), (0, n.Jd)(), pt(e), (0, n.lk)(), mn()
          }

          function Pn(e) {
              return new Proxy(e.attrs, {
                  get(t, i) {
                      return (0, n.j)(e, "get", "$attrs"), t[i]
                  }
              })
          }

          function Mn(e) {
              const t = t => {
                  e.exposed = t || {}
              };
              let i;
              return {
                  get attrs() {
                      return i || (i = Pn(e))
                  },
                  slots: e.slots,
                  emit: e.emit,
                  expose: t
              }
          }

          function In(e) {
              if (e.exposed) return e.exposeProxy || (e.exposeProxy = new Proxy((0, n.WL)((0, n.Xl)(e.exposed)), {
                  get(t, i) {
                      return i in t ? t[i] : i in cn ? cn[i](e) : void 0
                  }
              }))
          }
          const Rn = /(?:^|[-_])(\w)/g,
              _n = e => e.replace(Rn, (e => e.toUpperCase())).replace(/[-_]/g, "");

          function On(e) {
              return (0, a.mf)(e) && e.displayName || e.name
          }

          function Fn(e, t, i = !1) {
              let n = On(t);
              if (!n && t.__file) {
                  const e = t.__file.match(/([^/\\]+)\.\w+$/);
                  e && (n = e[1])
              }
              if (!n && e && e.parent) {
                  const i = e => {
                      for (const i in e)
                          if (e[i] === t) return i
                  };
                  n = i(e.components || e.parent.type.components) || i(e.appContext.components)
              }
              return n ? _n(n) : i ? "App" : "Anonymous"
          }

          function Nn(e) {
              return (0, a.mf)(e) && "__vccOpts" in e
          }
          const zn = (e, t) => (0, n.Fl)(e, t, kn);

          function Dn() {
              return null
          }

          function Hn() {
              return null
          }

          function Xn(e) {
              0
          }

          function Yn(e, t) {
              return null
          }

          function Bn() {
              return Wn().slots
          }

          function jn() {
              return Wn().attrs
          }

          function Wn() {
              const e = xn();
              return e.setupContext || (e.setupContext = Mn(e))
          }

          function Vn(e, t) {
              const i = (0, a.kJ)(e) ? e.reduce(((e, t) => (e[t] = {}, e)), {}) : e;
              for (const n in t) {
                  const e = i[n];
                  e ? (0, a.kJ)(e) || (0, a.mf)(e) ? i[n] = {
                      type: e,
                      default: t[n]
                  } : e.default = t[n] : null === e && (i[n] = {
                      default: t[n]
                  })
              }
              return i
          }

          function qn(e, t) {
              const i = {};
              for (const n in e) t.includes(n) || Object.defineProperty(i, n, {
                  enumerable: !0,
                  get: () => e[n]
              });
              return i
          }

          function Gn(e) {
              const t = xn();
              let i = e();
              return mn(), (0, a.tI)(i) && (i = i.catch((e => {
                  throw vn(t), e
              }))), [i, () => vn(t)]
          }

          function Un(e, t, i) {
              const n = arguments.length;
              return 2 === n ? (0, a.Kn)(t) && !(0, a.kJ)(t) ? zi(t) ? Wi(e, null, [t]) : Wi(e, t) : Wi(e, null, t) : (n > 3 ? i = Array.prototype.slice.call(arguments, 2) : 3 === n && zi(i) && (i = [i]), Wi(e, t, i))
          }
          const $n = Symbol(""),
              Zn = () => {
                  {
                      const e = we($n);
                      return e || s("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."), e
                  }
              };

          function Jn() {
              return void 0
          }

          function Kn(e, t, i, n) {
              const a = i[n];
              if (a && Qn(a, e)) return a;
              const r = t();
              return r.memo = e.slice(), i[n] = r
          }

          function Qn(e, t) {
              const i = e.memo;
              if (i.length != t.length) return !1;
              for (let n = 0; n < i.length; n++)
                  if (i[n] !== t[n]) return !1;
              return Ri > 0 && Li && Li.push(e), !0
          }
          const ea = "3.2.31",
              ta = {
                  createComponentInstance: pn,
                  setupComponent: Sn,
                  renderComponentRoot: te,
                  setCurrentRenderingInstance: Z,
                  isVNode: zi,
                  normalizeVNode: Ji
              },
              ia = ta,
              na = null,
              aa = null
      },
      1957: (e, t, i) => {
          "use strict";
          i.d(t, {
              $d: () => a.$d,
              $y: () => a.$y,
              Ah: () => z,
              B: () => a.B,
              BK: () => a.BK,
              Bj: () => a.Bj,
              Bz: () => a.Bz,
              C3: () => a.C3,
              C_: () => a.C_,
              Cn: () => a.Cn,
              D2: () => Ne,
              EB: () => a.EB,
              Eo: () => a.Eo,
              F4: () => a.F4,
              F8: () => ze,
              FN: () => a.FN,
              Fl: () => a.Fl,
              G: () => a.G,
              G2: () => Ae,
              HX: () => a.HX,
              HY: () => a.HY,
              Ho: () => a.Ho,
              IU: () => a.IU,
              JJ: () => a.JJ,
              Jd: () => a.Jd,
              KU: () => a.KU,
              Ko: () => a.Ko,
              LL: () => a.LL,
              MW: () => N,
              MX: () => a.MX,
              Mr: () => a.Mr,
              Nd: () => Je,
              Nv: () => a.Nv,
              OT: () => a.OT,
              Ob: () => a.Ob,
              P$: () => a.P$,
              PG: () => a.PG,
              Q2: () => a.Q2,
              Q6: () => a.Q6,
              RC: () => a.RC,
              Rh: () => a.Rh,
              Rr: () => a.Rr,
              S3: () => a.S3,
              SK: () => a.Ah,
              SU: () => a.SU,
              U2: () => a.U2,
              Uc: () => a.Uc,
              Uk: () => a.Uk,
              Um: () => a.Um,
              Us: () => a.Us,
              Vh: () => a.Vh,
              W3: () => de,
              WI: () => a.WI,
              WL: () => a.WL,
              WY: () => a.WY,
              Wm: () => a.Wm,
              X3: () => a.X3,
              XI: () => a.XI,
              Xl: () => a.Xl,
              Xn: () => a.Xn,
              Y1: () => a.Y1,
              Y3: () => a.Y3,
              Y8: () => a.Y8,
              YP: () => a.YP,
              YS: () => a.YS,
              YZ: () => Pe,
              Yq: () => a.Yq,
              ZB: () => qe,
              ZK: () => a.ZK,
              ZM: () => a.ZM,
              Zq: () => a.Zq,
              _: () => a._,
              _A: () => a._A,
              a2: () => H,
              aZ: () => a.aZ,
              b9: () => a.b9,
              bM: () => Ce,
              bT: () => a.bT,
              bv: () => a.bv,
              cE: () => a.cE,
              d1: () => a.d1,
              dD: () => a.dD,
              dG: () => a.dG,
              dl: () => a.dl,
              dq: () => a.dq,
              e8: () => ke,
              ec: () => a.ec,
              eq: () => a.eq,
              f3: () => a.f3,
              fb: () => X,
              h: () => a.h,
              hR: () => a.hR,
              i8: () => a.i8,
              iD: () => a.iD,
              iH: () => a.iH,
              iM: () => Oe,
              ic: () => a.ic,
              j4: () => a.j4,
              j5: () => a.j5,
              kC: () => a.kC,
              kq: () => a.kq,
              l1: () => a.l1,
              lA: () => a.lA,
              lR: () => a.lR,
              m0: () => a.m0,
              mW: () => a.mW,
              mv: () => a.mv,
              mx: () => a.mx,
              n4: () => a.n4,
              nK: () => a.nK,
              nQ: () => a.nQ,
              nZ: () => a.nZ,
              nr: () => we,
              oR: () => a.oR,
              of: () => a.of,
              p1: () => a.p1,
              qG: () => a.qG,
              qZ: () => a.qZ,
              qb: () => a.qb,
              qj: () => a.qj,
              qq: () => a.qq,
              ri: () => Ge,
              ry: () => a.ry,
              sT: () => a.sT,
              sY: () => Ve,
              se: () => a.se,
              sj: () => Y,
              sv: () => a.sv,
              uE: () => a.uE,
              uT: () => q,
              u_: () => a.u_,
              up: () => a.up,
              vl: () => a.vl,
              vr: () => Ue,
              vs: () => a.vs,
              w5: () => a.w5,
              wF: () => a.wF,
              wg: () => a.wg,
              wy: () => a.wy,
              xv: () => a.xv,
              yT: () => a.yT,
              yX: () => a.yX,
              yb: () => a.MW,
              zw: () => a.zw
          });
          var n = i(6970),
              a = i(9835),
              r = i(499);
          const s = "http://www.w3.org/2000/svg",
              o = "undefined" !== typeof document ? document : null,
              l = o && o.createElement("template"),
              c = {
                  insert: (e, t, i) => {
                      t.insertBefore(e, i || null)
                  },
                  remove: e => {
                      const t = e.parentNode;
                      t && t.removeChild(e)
                  },
                  createElement: (e, t, i, n) => {
                      const a = t ? o.createElementNS(s, e) : o.createElement(e, i ? {
                          is: i
                      } : void 0);
                      return "select" === e && n && null != n.multiple && a.setAttribute("multiple", n.multiple), a
                  },
                  createText: e => o.createTextNode(e),
                  createComment: e => o.createComment(e),
                  setText: (e, t) => {
                      e.nodeValue = t
                  },
                  setElementText: (e, t) => {
                      e.textContent = t
                  },
                  parentNode: e => e.parentNode,
                  nextSibling: e => e.nextSibling,
                  querySelector: e => o.querySelector(e),
                  setScopeId(e, t) {
                      e.setAttribute(t, "")
                  },
                  cloneNode(e) {
                      const t = e.cloneNode(!0);
                      return "_value" in e && (t._value = e._value), t
                  },
                  insertStaticContent(e, t, i, n, a, r) {
                      const s = i ? i.previousSibling : t.lastChild;
                      if (a && (a === r || a.nextSibling)) {
                          while (1)
                              if (t.insertBefore(a.cloneNode(!0), i), a === r || !(a = a.nextSibling)) break
                      } else {
                          l.innerHTML = n ? `<svg>${e}</svg>` : e;
                          const a = l.content;
                          if (n) {
                              const e = a.firstChild;
                              while (e.firstChild) a.appendChild(e.firstChild);
                              a.removeChild(e)
                          }
                          t.insertBefore(a, i)
                      }
                      return [s ? s.nextSibling : t.firstChild, i ? i.previousSibling : t.lastChild]
                  }
              };

          function h(e, t, i) {
              const n = e._vtc;
              n && (t = (t ? [t, ...n] : [...n]).join(" ")), null == t ? e.removeAttribute("class") : i ? e.setAttribute("class", t) : e.className = t
          }

          function u(e, t, i) {
              const a = e.style,
                  r = (0, n.HD)(i);
              if (i && !r) {
                  for (const e in i) f(a, e, i[e]);
                  if (t && !(0, n.HD)(t))
                      for (const e in t) null == i[e] && f(a, e, "")
              } else {
                  const n = a.display;
                  r ? t !== i && (a.cssText = i) : t && e.removeAttribute("style"), "_vod" in e && (a.display = n)
              }
          }
          const d = /\s*!important$/;

          function f(e, t, i) {
              if ((0, n.kJ)(i)) i.forEach((i => f(e, t, i)));
              else if (t.startsWith("--")) e.setProperty(t, i);
              else {
                  const a = x(e, t);
                  d.test(i) ? e.setProperty((0, n.rs)(a), i.replace(d, ""), "important") : e[a] = i
              }
          }
          const p = ["Webkit", "Moz", "ms"],
              g = {};

          function x(e, t) {
              const i = g[t];
              if (i) return i;
              let a = (0, n._A)(t);
              if ("filter" !== a && a in e) return g[t] = a;
              a = (0, n.kC)(a);
              for (let n = 0; n < p.length; n++) {
                  const i = p[n] + a;
                  if (i in e) return g[t] = i
              }
              return t
          }
          const v = "http://www.w3.org/1999/xlink";

          function m(e, t, i, a, r) {
              if (a && t.startsWith("xlink:")) null == i ? e.removeAttributeNS(v, t.slice(6, t.length)) : e.setAttributeNS(v, t, i);
              else {
                  const a = (0, n.Pq)(t);
                  null == i || a && !(0, n.yA)(i) ? e.removeAttribute(t) : e.setAttribute(t, a ? "" : i)
              }
          }

          function b(e, t, i, a, r, s, o) {
              if ("innerHTML" === t || "textContent" === t) return a && o(a, r, s), void(e[t] = null == i ? "" : i);
              if ("value" === t && "PROGRESS" !== e.tagName && !e.tagName.includes("-")) {
                  e._value = i;
                  const n = null == i ? "" : i;
                  return e.value === n && "OPTION" !== e.tagName || (e.value = n), void(null == i && e.removeAttribute(t))
              }
              if ("" === i || null == i) {
                  const a = typeof e[t];
                  if ("boolean" === a) return void(e[t] = (0, n.yA)(i));
                  if (null == i && "string" === a) return e[t] = "", void e.removeAttribute(t);
                  if ("number" === a) {
                      try {
                          e[t] = 0
                      } catch (l) {}
                      return void e.removeAttribute(t)
                  }
              }
              try {
                  e[t] = i
              } catch (c) {
                  0
              }
          }
          let y = Date.now,
              w = !1;
          if ("undefined" !== typeof window) {
              y() > document.createEvent("Event").timeStamp && (y = () => performance.now());
              const e = navigator.userAgent.match(/firefox\/(\d+)/i);
              w = !!(e && Number(e[1]) <= 53)
          }
          let k = 0;
          const S = Promise.resolve(),
              A = () => {
                  k = 0
              },
              C = () => k || (S.then(A), k = y());

          function T(e, t, i, n) {
              e.addEventListener(t, i, n)
          }

          function E(e, t, i, n) {
              e.removeEventListener(t, i, n)
          }

          function L(e, t, i, n, a = null) {
              const r = e._vei || (e._vei = {}),
                  s = r[t];
              if (n && s) s.value = n;
              else {
                  const [i, o] = M(t);
                  if (n) {
                      const s = r[t] = I(n, a);
                      T(e, i, s, o)
                  } else s && (E(e, i, s, o), r[t] = void 0)
              }
          }
          const P = /(?:Once|Passive|Capture)$/;

          function M(e) {
              let t;
              if (P.test(e)) {
                  let i;
                  t = {};
                  while (i = e.match(P)) e = e.slice(0, e.length - i[0].length), t[i[0].toLowerCase()] = !0
              }
              return [(0, n.rs)(e.slice(2)), t]
          }

          function I(e, t) {
              const i = e => {
                  const n = e.timeStamp || y();
                  (w || n >= i.attached - 1) && (0, a.$d)(R(e, i.value), t, 5, [e])
              };
              return i.value = e, i.attached = C(), i
          }

          function R(e, t) {
              if ((0, n.kJ)(t)) {
                  const i = e.stopImmediatePropagation;
                  return e.stopImmediatePropagation = () => {
                      i.call(e), e._stopped = !0
                  }, t.map((e => t => !t._stopped && e && e(t)))
              }
              return t
          }
          const _ = /^on[a-z]/,
              O = (e, t, i, a, r = !1, s, o, l, c) => {
                  "class" === t ? h(e, a, r) : "style" === t ? u(e, i, a) : (0, n.F7)(t) ? (0, n.tR)(t) || L(e, t, i, a, o) : ("." === t[0] ? (t = t.slice(1), 1) : "^" === t[0] ? (t = t.slice(1), 0) : F(e, t, a, r)) ? b(e, t, a, s, o, l, c) : ("true-value" === t ? e._trueValue = a : "false-value" === t && (e._falseValue = a), m(e, t, a, r))
              };

          function F(e, t, i, a) {
              return a ? "innerHTML" === t || "textContent" === t || !!(t in e && _.test(t) && (0, n.mf)(i)) : "spellcheck" !== t && "draggable" !== t && ("form" !== t && (("list" !== t || "INPUT" !== e.tagName) && (("type" !== t || "TEXTAREA" !== e.tagName) && ((!_.test(t) || !(0, n.HD)(i)) && t in e))))
          }

          function N(e, t) {
              const i = (0, a.aZ)(e);
              class n extends H {
                  constructor(e) {
                      super(i, e, t)
                  }
              }
              return n.def = i, n
          }
          const z = e => N(e, qe),
              D = "undefined" !== typeof HTMLElement ? HTMLElement : class {};
          class H extends D {
              constructor(e, t = {}, i) {
                  super(), this._def = e, this._props = t, this._instance = null, this._connected = !1, this._resolved = !1, this._numberProps = null, this.shadowRoot && i ? i(this._createVNode(), this.shadowRoot) : this.attachShadow({
                      mode: "open"
                  })
              }
              connectedCallback() {
                  this._connected = !0, this._instance || this._resolveDef()
              }
              disconnectedCallback() {
                  this._connected = !1, (0, a.Y3)((() => {
                      this._connected || (Ve(null, this.shadowRoot), this._instance = null)
                  }))
              }
              _resolveDef() {
                  if (this._resolved) return;
                  this._resolved = !0;
                  for (let i = 0; i < this.attributes.length; i++) this._setAttr(this.attributes[i].name);
                  new MutationObserver((e => {
                      for (const t of e) this._setAttr(t.attributeName)
                  })).observe(this, {
                      attributes: !0
                  });
                  const e = e => {
                          const {
                              props: t,
                              styles: i
                          } = e, a = !(0, n.kJ)(t), r = t ? a ? Object.keys(t) : t : [];
                          let s;
                          if (a)
                              for (const o in this._props) {
                                  const e = t[o];
                                  (e === Number || e && e.type === Number) && (this._props[o] = (0, n.He)(this._props[o]), (s || (s = Object.create(null)))[o] = !0)
                              }
                          this._numberProps = s;
                          for (const n of Object.keys(this)) "_" !== n[0] && this._setProp(n, this[n], !0, !1);
                          for (const o of r.map(n._A)) Object.defineProperty(this, o, {
                              get() {
                                  return this._getProp(o)
                              },
                              set(e) {
                                  this._setProp(o, e)
                              }
                          });
                          this._applyStyles(i), this._update()
                      },
                      t = this._def.__asyncLoader;
                  t ? t().then(e) : e(this._def)
              }
              _setAttr(e) {
                  let t = this.getAttribute(e);
                  this._numberProps && this._numberProps[e] && (t = (0, n.He)(t)), this._setProp((0, n._A)(e), t, !1)
              }
              _getProp(e) {
                  return this._props[e]
              }
              _setProp(e, t, i = !0, a = !0) {
                  t !== this._props[e] && (this._props[e] = t, a && this._instance && this._update(), i && (!0 === t ? this.setAttribute((0, n.rs)(e), "") : "string" === typeof t || "number" === typeof t ? this.setAttribute((0, n.rs)(e), t + "") : t || this.removeAttribute((0, n.rs)(e))))
              }
              _update() {
                  Ve(this._createVNode(), this.shadowRoot)
              }
              _createVNode() {
                  const e = (0, a.Wm)(this._def, (0, n.l7)({}, this._props));
                  return this._instance || (e.ce = e => {
                      this._instance = e, e.isCE = !0, e.emit = (e, ...t) => {
                          this.dispatchEvent(new CustomEvent(e, {
                              detail: t
                          }))
                      };
                      let t = this;
                      while (t = t && (t.parentNode || t.host))
                          if (t instanceof H) {
                              e.parent = t._instance;
                              break
                          }
                  }), e
              }
              _applyStyles(e) {
                  e && e.forEach((e => {
                      const t = document.createElement("style");
                      t.textContent = e, this.shadowRoot.appendChild(t)
                  }))
              }
          }

          function X(e = "$style") {
              {
                  const t = (0, a.FN)();
                  if (!t) return n.kT;
                  const i = t.type.__cssModules;
                  if (!i) return n.kT;
                  const r = i[e];
                  return r || n.kT
              }
          }

          function Y(e) {
              const t = (0, a.FN)();
              if (!t) return;
              const i = () => B(t.subTree, e(t.proxy));
              (0, a.Rh)(i), (0, a.bv)((() => {
                  const e = new MutationObserver(i);
                  e.observe(t.subTree.el.parentNode, {
                      childList: !0
                  }), (0, a.Ah)((() => e.disconnect()))
              }))
          }

          function B(e, t) {
              if (128 & e.shapeFlag) {
                  const i = e.suspense;
                  e = i.activeBranch, i.pendingBranch && !i.isHydrating && i.effects.push((() => {
                      B(i.activeBranch, t)
                  }))
              }
              while (e.component) e = e.component.subTree;
              if (1 & e.shapeFlag && e.el) j(e.el, t);
              else if (e.type === a.HY) e.children.forEach((e => B(e, t)));
              else if (e.type === a.qG) {
                  let {
                      el: i,
                      anchor: n
                  } = e;
                  while (i) {
                      if (j(i, t), i === n) break;
                      i = i.nextSibling
                  }
              }
          }

          function j(e, t) {
              if (1 === e.nodeType) {
                  const i = e.style;
                  for (const e in t) i.setProperty(`--${e}`, t[e])
              }
          }
          const W = "transition",
              V = "animation",
              q = (e, {
                  slots: t
              }) => (0, a.h)(a.P$, J(e), t);
          q.displayName = "Transition";
          const G = {
                  name: String,
                  type: String,
                  css: {
                      type: Boolean,
                      default: !0
                  },
                  duration: [String, Number, Object],
                  enterFromClass: String,
                  enterActiveClass: String,
                  enterToClass: String,
                  appearFromClass: String,
                  appearActiveClass: String,
                  appearToClass: String,
                  leaveFromClass: String,
                  leaveActiveClass: String,
                  leaveToClass: String
              },
              U = q.props = (0, n.l7)({}, a.P$.props, G),
              $ = (e, t = []) => {
                  (0, n.kJ)(e) ? e.forEach((e => e(...t))): e && e(...t)
              },
              Z = e => !!e && ((0, n.kJ)(e) ? e.some((e => e.length > 1)) : e.length > 1);

          function J(e) {
              const t = {};
              for (const n in e) n in G || (t[n] = e[n]);
              if (!1 === e.css) return t;
              const {
                  name: i = "v",
                  type: a,
                  duration: r,
                  enterFromClass: s = `${i}-enter-from`,
                  enterActiveClass: o = `${i}-enter-active`,
                  enterToClass: l = `${i}-enter-to`,
                  appearFromClass: c = s,
                  appearActiveClass: h = o,
                  appearToClass: u = l,
                  leaveFromClass: d = `${i}-leave-from`,
                  leaveActiveClass: f = `${i}-leave-active`,
                  leaveToClass: p = `${i}-leave-to`
              } = e, g = K(r), x = g && g[0], v = g && g[1], {
                  onBeforeEnter: m,
                  onEnter: b,
                  onEnterCancelled: y,
                  onLeave: w,
                  onLeaveCancelled: k,
                  onBeforeAppear: S = m,
                  onAppear: A = b,
                  onAppearCancelled: C = y
              } = t, T = (e, t, i) => {
                  te(e, t ? u : l), te(e, t ? h : o), i && i()
              }, E = (e, t) => {
                  te(e, p), te(e, f), t && t()
              }, L = e => (t, i) => {
                  const n = e ? A : b,
                      r = () => T(t, e, i);
                  $(n, [t, r]), ie((() => {
                      te(t, e ? c : s), ee(t, e ? u : l), Z(n) || ae(t, a, x, r)
                  }))
              };
              return (0, n.l7)(t, {
                  onBeforeEnter(e) {
                      $(m, [e]), ee(e, s), ee(e, o)
                  },
                  onBeforeAppear(e) {
                      $(S, [e]), ee(e, c), ee(e, h)
                  },
                  onEnter: L(!1),
                  onAppear: L(!0),
                  onLeave(e, t) {
                      const i = () => E(e, t);
                      ee(e, d), le(), ee(e, f), ie((() => {
                          te(e, d), ee(e, p), Z(w) || ae(e, a, v, i)
                      })), $(w, [e, i])
                  },
                  onEnterCancelled(e) {
                      T(e, !1), $(y, [e])
                  },
                  onAppearCancelled(e) {
                      T(e, !0), $(C, [e])
                  },
                  onLeaveCancelled(e) {
                      E(e), $(k, [e])
                  }
              })
          }

          function K(e) {
              if (null == e) return null;
              if ((0, n.Kn)(e)) return [Q(e.enter), Q(e.leave)]; {
                  const t = Q(e);
                  return [t, t]
              }
          }

          function Q(e) {
              const t = (0, n.He)(e);
              return t
          }

          function ee(e, t) {
              t.split(/\s+/).forEach((t => t && e.classList.add(t))), (e._vtc || (e._vtc = new Set)).add(t)
          }

          function te(e, t) {
              t.split(/\s+/).forEach((t => t && e.classList.remove(t)));
              const {
                  _vtc: i
              } = e;
              i && (i.delete(t), i.size || (e._vtc = void 0))
          }

          function ie(e) {
              requestAnimationFrame((() => {
                  requestAnimationFrame(e)
              }))
          }
          let ne = 0;

          function ae(e, t, i, n) {
              const a = e._endId = ++ne,
                  r = () => {
                      a === e._endId && n()
                  };
              if (i) return setTimeout(r, i);
              const {
                  type: s,
                  timeout: o,
                  propCount: l
              } = re(e, t);
              if (!s) return n();
              const c = s + "end";
              let h = 0;
              const u = () => {
                      e.removeEventListener(c, d), r()
                  },
                  d = t => {
                      t.target === e && ++h >= l && u()
                  };
              setTimeout((() => {
                  h < l && u()
              }), o + 1), e.addEventListener(c, d)
          }

          function re(e, t) {
              const i = window.getComputedStyle(e),
                  n = e => (i[e] || "").split(", "),
                  a = n(W + "Delay"),
                  r = n(W + "Duration"),
                  s = se(a, r),
                  o = n(V + "Delay"),
                  l = n(V + "Duration"),
                  c = se(o, l);
              let h = null,
                  u = 0,
                  d = 0;
              t === W ? s > 0 && (h = W, u = s, d = r.length) : t === V ? c > 0 && (h = V, u = c, d = l.length) : (u = Math.max(s, c), h = u > 0 ? s > c ? W : V : null, d = h ? h === W ? r.length : l.length : 0);
              const f = h === W && /\b(transform|all)(,|$)/.test(i[W + "Property"]);
              return {
                  type: h,
                  timeout: u,
                  propCount: d,
                  hasTransform: f
              }
          }

          function se(e, t) {
              while (e.length < t.length) e = e.concat(e);
              return Math.max(...t.map(((t, i) => oe(t) + oe(e[i]))))
          }

          function oe(e) {
              return 1e3 * Number(e.slice(0, -1).replace(",", "."))
          }

          function le() {
              return document.body.offsetHeight
          }
          const ce = new WeakMap,
              he = new WeakMap,
              ue = {
                  name: "TransitionGroup",
                  props: (0, n.l7)({}, U, {
                      tag: String,
                      moveClass: String
                  }),
                  setup(e, {
                      slots: t
                  }) {
                      const i = (0, a.FN)(),
                          n = (0, a.Y8)();
                      let s, o;
                      return (0, a.ic)((() => {
                          if (!s.length) return;
                          const t = e.moveClass || `${e.name||"v"}-move`;
                          if (!xe(s[0].el, i.vnode.el, t)) return;
                          s.forEach(fe), s.forEach(pe);
                          const n = s.filter(ge);
                          le(), n.forEach((e => {
                              const i = e.el,
                                  n = i.style;
                              ee(i, t), n.transform = n.webkitTransform = n.transitionDuration = "";
                              const a = i._moveCb = e => {
                                  e && e.target !== i || e && !/transform$/.test(e.propertyName) || (i.removeEventListener("transitionend", a), i._moveCb = null, te(i, t))
                              };
                              i.addEventListener("transitionend", a)
                          }))
                      })), () => {
                          const l = (0, r.IU)(e),
                              c = J(l);
                          let h = l.tag || a.HY;
                          s = o, o = t.default ? (0, a.Q6)(t.default()) : [];
                          for (let e = 0; e < o.length; e++) {
                              const t = o[e];
                              null != t.key && (0, a.nK)(t, (0, a.U2)(t, c, n, i))
                          }
                          if (s)
                              for (let e = 0; e < s.length; e++) {
                                  const t = s[e];
                                  (0, a.nK)(t, (0, a.U2)(t, c, n, i)), ce.set(t, t.el.getBoundingClientRect())
                              }
                          return (0, a.Wm)(h, null, o)
                      }
                  }
              },
              de = ue;

          function fe(e) {
              const t = e.el;
              t._moveCb && t._moveCb(), t._enterCb && t._enterCb()
          }

          function pe(e) {
              he.set(e, e.el.getBoundingClientRect())
          }

          function ge(e) {
              const t = ce.get(e),
                  i = he.get(e),
                  n = t.left - i.left,
                  a = t.top - i.top;
              if (n || a) {
                  const t = e.el.style;
                  return t.transform = t.webkitTransform = `translate(${n}px,${a}px)`, t.transitionDuration = "0s", e
              }
          }

          function xe(e, t, i) {
              const n = e.cloneNode();
              e._vtc && e._vtc.forEach((e => {
                  e.split(/\s+/).forEach((e => e && n.classList.remove(e)))
              })), i.split(/\s+/).forEach((e => e && n.classList.add(e))), n.style.display = "none";
              const a = 1 === t.nodeType ? t : t.parentNode;
              a.appendChild(n);
              const {
                  hasTransform: r
              } = re(n);
              return a.removeChild(n), r
          }
          const ve = e => {
              const t = e.props["onUpdate:modelValue"];
              return (0, n.kJ)(t) ? e => (0, n.ir)(t, e) : t
          };

          function me(e) {
              e.target.composing = !0
          }

          function be(e) {
              const t = e.target;
              t.composing && (t.composing = !1, ye(t, "input"))
          }

          function ye(e, t) {
              const i = document.createEvent("HTMLEvents");
              i.initEvent(t, !0, !0), e.dispatchEvent(i)
          }
          const we = {
                  created(e, {
                      modifiers: {
                          lazy: t,
                          trim: i,
                          number: a
                      }
                  }, r) {
                      e._assign = ve(r);
                      const s = a || r.props && "number" === r.props.type;
                      T(e, t ? "change" : "input", (t => {
                          if (t.target.composing) return;
                          let a = e.value;
                          i ? a = a.trim() : s && (a = (0, n.He)(a)), e._assign(a)
                      })), i && T(e, "change", (() => {
                          e.value = e.value.trim()
                      })), t || (T(e, "compositionstart", me), T(e, "compositionend", be), T(e, "change", be))
                  },
                  mounted(e, {
                      value: t
                  }) {
                      e.value = null == t ? "" : t
                  },
                  beforeUpdate(e, {
                      value: t,
                      modifiers: {
                          lazy: i,
                          trim: a,
                          number: r
                      }
                  }, s) {
                      if (e._assign = ve(s), e.composing) return;
                      if (document.activeElement === e) {
                          if (i) return;
                          if (a && e.value.trim() === t) return;
                          if ((r || "number" === e.type) && (0, n.He)(e.value) === t) return
                      }
                      const o = null == t ? "" : t;
                      e.value !== o && (e.value = o)
                  }
              },
              ke = {
                  deep: !0,
                  created(e, t, i) {
                      e._assign = ve(i), T(e, "change", (() => {
                          const t = e._modelValue,
                              i = Ee(e),
                              a = e.checked,
                              r = e._assign;
                          if ((0, n.kJ)(t)) {
                              const e = (0, n.hq)(t, i),
                                  s = -1 !== e;
                              if (a && !s) r(t.concat(i));
                              else if (!a && s) {
                                  const i = [...t];
                                  i.splice(e, 1), r(i)
                              }
                          } else if ((0, n.DM)(t)) {
                              const e = new Set(t);
                              a ? e.add(i) : e.delete(i), r(e)
                          } else r(Le(e, a))
                      }))
                  },
                  mounted: Se,
                  beforeUpdate(e, t, i) {
                      e._assign = ve(i), Se(e, t, i)
                  }
              };

          function Se(e, {
              value: t,
              oldValue: i
          }, a) {
              e._modelValue = t, (0, n.kJ)(t) ? e.checked = (0, n.hq)(t, a.props.value) > -1 : (0, n.DM)(t) ? e.checked = t.has(a.props.value) : t !== i && (e.checked = (0, n.WV)(t, Le(e, !0)))
          }
          const Ae = {
                  created(e, {
                      value: t
                  }, i) {
                      e.checked = (0, n.WV)(t, i.props.value), e._assign = ve(i), T(e, "change", (() => {
                          e._assign(Ee(e))
                      }))
                  },
                  beforeUpdate(e, {
                      value: t,
                      oldValue: i
                  }, a) {
                      e._assign = ve(a), t !== i && (e.checked = (0, n.WV)(t, a.props.value))
                  }
              },
              Ce = {
                  deep: !0,
                  created(e, {
                      value: t,
                      modifiers: {
                          number: i
                      }
                  }, a) {
                      const r = (0, n.DM)(t);
                      T(e, "change", (() => {
                          const t = Array.prototype.filter.call(e.options, (e => e.selected)).map((e => i ? (0, n.He)(Ee(e)) : Ee(e)));
                          e._assign(e.multiple ? r ? new Set(t) : t : t[0])
                      })), e._assign = ve(a)
                  },
                  mounted(e, {
                      value: t
                  }) {
                      Te(e, t)
                  },
                  beforeUpdate(e, t, i) {
                      e._assign = ve(i)
                  },
                  updated(e, {
                      value: t
                  }) {
                      Te(e, t)
                  }
              };

          function Te(e, t) {
              const i = e.multiple;
              if (!i || (0, n.kJ)(t) || (0, n.DM)(t)) {
                  for (let a = 0, r = e.options.length; a < r; a++) {
                      const r = e.options[a],
                          s = Ee(r);
                      if (i)(0, n.kJ)(t) ? r.selected = (0, n.hq)(t, s) > -1 : r.selected = t.has(s);
                      else if ((0, n.WV)(Ee(r), t)) return void(e.selectedIndex !== a && (e.selectedIndex = a))
                  }
                  i || -1 === e.selectedIndex || (e.selectedIndex = -1)
              }
          }

          function Ee(e) {
              return "_value" in e ? e._value : e.value
          }

          function Le(e, t) {
              const i = t ? "_trueValue" : "_falseValue";
              return i in e ? e[i] : t
          }
          const Pe = {
              created(e, t, i) {
                  Me(e, t, i, null, "created")
              },
              mounted(e, t, i) {
                  Me(e, t, i, null, "mounted")
              },
              beforeUpdate(e, t, i, n) {
                  Me(e, t, i, n, "beforeUpdate")
              },
              updated(e, t, i, n) {
                  Me(e, t, i, n, "updated")
              }
          };

          function Me(e, t, i, n, a) {
              let r;
              switch (e.tagName) {
                  case "SELECT":
                      r = Ce;
                      break;
                  case "TEXTAREA":
                      r = we;
                      break;
                  default:
                      switch (i.props && i.props.type) {
                          case "checkbox":
                              r = ke;
                              break;
                          case "radio":
                              r = Ae;
                              break;
                          default:
                              r = we
                      }
              }
              const s = r[a];
              s && s(e, t, i, n)
          }

          function Ie() {
              we.getSSRProps = ({
                  value: e
              }) => ({
                  value: e
              }), Ae.getSSRProps = ({
                  value: e
              }, t) => {
                  if (t.props && (0, n.WV)(t.props.value, e)) return {
                      checked: !0
                  }
              }, ke.getSSRProps = ({
                  value: e
              }, t) => {
                  if ((0, n.kJ)(e)) {
                      if (t.props && (0, n.hq)(e, t.props.value) > -1) return {
                          checked: !0
                      }
                  } else if ((0, n.DM)(e)) {
                      if (t.props && e.has(t.props.value)) return {
                          checked: !0
                      }
                  } else if (e) return {
                      checked: !0
                  }
              }
          }
          const Re = ["ctrl", "shift", "alt", "meta"],
              _e = {
                  stop: e => e.stopPropagation(),
                  prevent: e => e.preventDefault(),
                  self: e => e.target !== e.currentTarget,
                  ctrl: e => !e.ctrlKey,
                  shift: e => !e.shiftKey,
                  alt: e => !e.altKey,
                  meta: e => !e.metaKey,
                  left: e => "button" in e && 0 !== e.button,
                  middle: e => "button" in e && 1 !== e.button,
                  right: e => "button" in e && 2 !== e.button,
                  exact: (e, t) => Re.some((i => e[`${i}Key`] && !t.includes(i)))
              },
              Oe = (e, t) => (i, ...n) => {
                  for (let e = 0; e < t.length; e++) {
                      const n = _e[t[e]];
                      if (n && n(i, t)) return
                  }
                  return e(i, ...n)
              },
              Fe = {
                  esc: "escape",
                  space: " ",
                  up: "arrow-up",
                  left: "arrow-left",
                  right: "arrow-right",
                  down: "arrow-down",
                  delete: "backspace"
              },
              Ne = (e, t) => i => {
                  if (!("key" in i)) return;
                  const a = (0, n.rs)(i.key);
                  return t.some((e => e === a || Fe[e] === a)) ? e(i) : void 0
              },
              ze = {
                  beforeMount(e, {
                      value: t
                  }, {
                      transition: i
                  }) {
                      e._vod = "none" === e.style.display ? "" : e.style.display, i && t ? i.beforeEnter(e) : De(e, t)
                  },
                  mounted(e, {
                      value: t
                  }, {
                      transition: i
                  }) {
                      i && t && i.enter(e)
                  },
                  updated(e, {
                      value: t,
                      oldValue: i
                  }, {
                      transition: n
                  }) {
                      !t !== !i && (n ? t ? (n.beforeEnter(e), De(e, !0), n.enter(e)) : n.leave(e, (() => {
                          De(e, !1)
                      })) : De(e, t))
                  },
                  beforeUnmount(e, {
                      value: t
                  }) {
                      De(e, t)
                  }
              };

          function De(e, t) {
              e.style.display = t ? e._vod : "none"
          }

          function He() {
              ze.getSSRProps = ({
                  value: e
              }) => {
                  if (!e) return {
                      style: {
                          display: "none"
                      }
                  }
              }
          }
          const Xe = (0, n.l7)({
              patchProp: O
          }, c);
          let Ye, Be = !1;

          function je() {
              return Ye || (Ye = (0, a.Us)(Xe))
          }

          function We() {
              return Ye = Be ? Ye : (0, a.Eo)(Xe), Be = !0, Ye
          }
          const Ve = (...e) => {
                  je().render(...e)
              },
              qe = (...e) => {
                  We().hydrate(...e)
              },
              Ge = (...e) => {
                  const t = je().createApp(...e);
                  const {
                      mount: i
                  } = t;
                  return t.mount = e => {
                      const a = $e(e);
                      if (!a) return;
                      const r = t._component;
                      (0, n.mf)(r) || r.render || r.template || (r.template = a.innerHTML), a.innerHTML = "";
                      const s = i(a, !1, a instanceof SVGElement);
                      return a instanceof Element && (a.removeAttribute("v-cloak"), a.setAttribute("data-v-app", "")), s
                  }, t
              },
              Ue = (...e) => {
                  const t = We().createApp(...e);
                  const {
                      mount: i
                  } = t;
                  return t.mount = e => {
                      const t = $e(e);
                      if (t) return i(t, !0, t instanceof SVGElement)
                  }, t
              };

          function $e(e) {
              if ((0, n.HD)(e)) {
                  const t = document.querySelector(e);
                  return t
              }
              return e
          }
          let Ze = !1;
          const Je = () => {
              Ze || (Ze = !0, Ie(), He())
          }
      },
      6970: (e, t, i) => {
          "use strict";

          function n(e, t) {
              const i = Object.create(null),
                  n = e.split(",");
              for (let a = 0; a < n.length; a++) i[n[a]] = !0;
              return t ? e => !!i[e.toLowerCase()] : e => !!i[e]
          }
          i.d(t, {
              C_: () => f,
              DM: () => _,
              E9: () => ae,
              F7: () => C,
              Gg: () => V,
              HD: () => N,
              He: () => ie,
              Kn: () => D,
              NO: () => S,
              Nj: () => te,
              Od: () => L,
              PO: () => j,
              Pq: () => o,
              RI: () => M,
              S0: () => W,
              W7: () => B,
              WV: () => x,
              Z6: () => w,
              _A: () => U,
              _N: () => R,
              aU: () => Q,
              dG: () => k,
              e1: () => r,
              fY: () => n,
              hR: () => K,
              hq: () => v,
              ir: () => ee,
              j5: () => c,
              kC: () => J,
              kJ: () => I,
              kT: () => y,
              l7: () => E,
              mf: () => F,
              rs: () => Z,
              tI: () => H,
              tR: () => T,
              vs: () => p,
              yA: () => l,
              yk: () => z,
              zw: () => m
          });
          const a = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",
              r = n(a);
          const s = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
              o = n(s);

          function l(e) {
              return !!e || "" === e
          }

          function c(e) {
              if (I(e)) {
                  const t = {};
                  for (let i = 0; i < e.length; i++) {
                      const n = e[i],
                          a = N(n) ? d(n) : c(n);
                      if (a)
                          for (const e in a) t[e] = a[e]
                  }
                  return t
              }
              return N(e) || D(e) ? e : void 0
          }
          const h = /;(?![^(]*\))/g,
              u = /:(.+)/;

          function d(e) {
              const t = {};
              return e.split(h).forEach((e => {
                  if (e) {
                      const i = e.split(u);
                      i.length > 1 && (t[i[0].trim()] = i[1].trim())
                  }
              })), t
          }

          function f(e) {
              let t = "";
              if (N(e)) t = e;
              else if (I(e))
                  for (let i = 0; i < e.length; i++) {
                      const n = f(e[i]);
                      n && (t += n + " ")
                  } else if (D(e))
                      for (const i in e) e[i] && (t += i + " ");
              return t.trim()
          }

          function p(e) {
              if (!e) return null;
              let {
                  class: t,
                  style: i
              } = e;
              return t && !N(t) && (e.class = f(t)), i && (e.style = c(i)), e
          }

          function g(e, t) {
              if (e.length !== t.length) return !1;
              let i = !0;
              for (let n = 0; i && n < e.length; n++) i = x(e[n], t[n]);
              return i
          }

          function x(e, t) {
              if (e === t) return !0;
              let i = O(e),
                  n = O(t);
              if (i || n) return !(!i || !n) && e.getTime() === t.getTime();
              if (i = I(e), n = I(t), i || n) return !(!i || !n) && g(e, t);
              if (i = D(e), n = D(t), i || n) {
                  if (!i || !n) return !1;
                  const a = Object.keys(e).length,
                      r = Object.keys(t).length;
                  if (a !== r) return !1;
                  for (const i in e) {
                      const n = e.hasOwnProperty(i),
                          a = t.hasOwnProperty(i);
                      if (n && !a || !n && a || !x(e[i], t[i])) return !1
                  }
              }
              return String(e) === String(t)
          }

          function v(e, t) {
              return e.findIndex((e => x(e, t)))
          }
          const m = e => N(e) ? e : null == e ? "" : I(e) || D(e) && (e.toString === X || !F(e.toString)) ? JSON.stringify(e, b, 2) : String(e),
              b = (e, t) => t && t.__v_isRef ? b(e, t.value) : R(t) ? {
                  [`Map(${t.size})`]: [...t.entries()].reduce(((e, [t, i]) => (e[`${t} =>`] = i, e)), {})
              } : _(t) ? {
                  [`Set(${t.size})`]: [...t.values()]
              } : !D(t) || I(t) || j(t) ? t : String(t),
              y = {},
              w = [],
              k = () => {},
              S = () => !1,
              A = /^on[^a-z]/,
              C = e => A.test(e),
              T = e => e.startsWith("onUpdate:"),
              E = Object.assign,
              L = (e, t) => {
                  const i = e.indexOf(t);
                  i > -1 && e.splice(i, 1)
              },
              P = Object.prototype.hasOwnProperty,
              M = (e, t) => P.call(e, t),
              I = Array.isArray,
              R = e => "[object Map]" === Y(e),
              _ = e => "[object Set]" === Y(e),
              O = e => e instanceof Date,
              F = e => "function" === typeof e,
              N = e => "string" === typeof e,
              z = e => "symbol" === typeof e,
              D = e => null !== e && "object" === typeof e,
              H = e => D(e) && F(e.then) && F(e.catch),
              X = Object.prototype.toString,
              Y = e => X.call(e),
              B = e => Y(e).slice(8, -1),
              j = e => "[object Object]" === Y(e),
              W = e => N(e) && "NaN" !== e && "-" !== e[0] && "" + parseInt(e, 10) === e,
              V = n(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),
              q = e => {
                  const t = Object.create(null);
                  return i => {
                      const n = t[i];
                      return n || (t[i] = e(i))
                  }
              },
              G = /-(\w)/g,
              U = q((e => e.replace(G, ((e, t) => t ? t.toUpperCase() : "")))),
              $ = /\B([A-Z])/g,
              Z = q((e => e.replace($, "-$1").toLowerCase())),
              J = q((e => e.charAt(0).toUpperCase() + e.slice(1))),
              K = q((e => e ? `on${J(e)}` : "")),
              Q = (e, t) => !Object.is(e, t),
              ee = (e, t) => {
                  for (let i = 0; i < e.length; i++) e[i](t)
              },
              te = (e, t, i) => {
                  Object.defineProperty(e, t, {
                      configurable: !0,
                      enumerable: !1,
                      value: i
                  })
              },
              ie = e => {
                  const t = parseFloat(e);
                  return isNaN(t) ? e : t
              };
          let ne;
          const ae = () => ne || (ne = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : "undefined" !== typeof i.g ? i.g : {})
      },
      0: (e, t, i) => {
          "use strict";
          var n;
          /*!
           * ApexCharts v3.33.2
           * (c) 2018-2022 ApexCharts
           * Released under the MIT License.
           */
          function a(e, t) {
              var i = Object.keys(e);
              if (Object.getOwnPropertySymbols) {
                  var n = Object.getOwnPropertySymbols(e);
                  t && (n = n.filter((function(t) {
                      return Object.getOwnPropertyDescriptor(e, t).enumerable
                  }))), i.push.apply(i, n)
              }
              return i
          }

          function r(e) {
              for (var t = 1; t < arguments.length; t++) {
                  var i = null != arguments[t] ? arguments[t] : {};
                  t % 2 ? a(Object(i), !0).forEach((function(t) {
                      h(e, t, i[t])
                  })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : a(Object(i)).forEach((function(t) {
                      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                  }))
              }
              return e
          }

          function s(e) {
              return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                  return typeof e
              } : function(e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
              })(e)
          }

          function o(e, t) {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
          }

          function l(e, t) {
              for (var i = 0; i < t.length; i++) {
                  var n = t[i];
                  n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
              }
          }

          function c(e, t, i) {
              return t && l(e.prototype, t), i && l(e, i), e
          }

          function h(e, t, i) {
              return t in e ? Object.defineProperty(e, t, {
                  value: i,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
              }) : e[t] = i, e
          }

          function u(e, t) {
              if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
              e.prototype = Object.create(t && t.prototype, {
                  constructor: {
                      value: e,
                      writable: !0,
                      configurable: !0
                  }
              }), t && f(e, t)
          }

          function d(e) {
              return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                  return e.__proto__ || Object.getPrototypeOf(e)
              })(e)
          }

          function f(e, t) {
              return (f = Object.setPrototypeOf || function(e, t) {
                  return e.__proto__ = t, e
              })(e, t)
          }

          function p(e, t) {
              if (t && ("object" == typeof t || "function" == typeof t)) return t;
              if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
              return function(e) {
                  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return e
              }(e)
          }

          function g(e) {
              var t = function() {
                  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                  if (Reflect.construct.sham) return !1;
                  if ("function" == typeof Proxy) return !0;
                  try {
                      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                  } catch (e) {
                      return !1
                  }
              }();
              return function() {
                  var i, n = d(e);
                  if (t) {
                      var a = d(this).constructor;
                      i = Reflect.construct(n, arguments, a)
                  } else i = n.apply(this, arguments);
                  return p(this, i)
              }
          }

          function x(e, t) {
              return function(e) {
                  if (Array.isArray(e)) return e
              }(e) || function(e, t) {
                  var i = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                  if (null != i) {
                      var n, a, r = [],
                          s = !0,
                          o = !1;
                      try {
                          for (i = i.call(e); !(s = (n = i.next()).done) && (r.push(n.value), !t || r.length !== t); s = !0);
                      } catch (e) {
                          o = !0, a = e
                      } finally {
                          try {
                              s || null == i.return || i.return()
                          } finally {
                              if (o) throw a
                          }
                      }
                      return r
                  }
              }(e, t) || m(e, t) || function() {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
              }()
          }

          function v(e) {
              return function(e) {
                  if (Array.isArray(e)) return b(e)
              }(e) || function(e) {
                  if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
              }(e) || m(e) || function() {
                  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
              }()
          }

          function m(e, t) {
              if (e) {
                  if ("string" == typeof e) return b(e, t);
                  var i = Object.prototype.toString.call(e).slice(8, -1);
                  return "Object" === i && e.constructor && (i = e.constructor.name), "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? b(e, t) : void 0
              }
          }

          function b(e, t) {
              (null == t || t > e.length) && (t = e.length);
              for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
              return n
          }
          var y = function() {
                  function e() {
                      o(this, e)
                  }
                  return c(e, [{
                      key: "shadeRGBColor",
                      value: function(e, t) {
                          var i = t.split(","),
                              n = e < 0 ? 0 : 255,
                              a = e < 0 ? -1 * e : e,
                              r = parseInt(i[0].slice(4), 10),
                              s = parseInt(i[1], 10),
                              o = parseInt(i[2], 10);
                          return "rgb(" + (Math.round((n - r) * a) + r) + "," + (Math.round((n - s) * a) + s) + "," + (Math.round((n - o) * a) + o) + ")"
                      }
                  }, {
                      key: "shadeHexColor",
                      value: function(e, t) {
                          var i = parseInt(t.slice(1), 16),
                              n = e < 0 ? 0 : 255,
                              a = e < 0 ? -1 * e : e,
                              r = i >> 16,
                              s = i >> 8 & 255,
                              o = 255 & i;
                          return "#" + (16777216 + 65536 * (Math.round((n - r) * a) + r) + 256 * (Math.round((n - s) * a) + s) + (Math.round((n - o) * a) + o)).toString(16).slice(1)
                      }
                  }, {
                      key: "shadeColor",
                      value: function(t, i) {
                          return e.isColorHex(i) ? this.shadeHexColor(t, i) : this.shadeRGBColor(t, i)
                      }
                  }], [{
                      key: "bind",
                      value: function(e, t) {
                          return function() {
                              return e.apply(t, arguments)
                          }
                      }
                  }, {
                      key: "isObject",
                      value: function(e) {
                          return e && "object" === s(e) && !Array.isArray(e) && null != e
                      }
                  }, {
                      key: "is",
                      value: function(e, t) {
                          return Object.prototype.toString.call(t) === "[object " + e + "]"
                      }
                  }, {
                      key: "listToArray",
                      value: function(e) {
                          var t, i = [];
                          for (t = 0; t < e.length; t++) i[t] = e[t];
                          return i
                      }
                  }, {
                      key: "extend",
                      value: function(e, t) {
                          var i = this;
                          "function" != typeof Object.assign && (Object.assign = function(e) {
                              if (null == e) throw new TypeError("Cannot convert undefined or null to object");
                              for (var t = Object(e), i = 1; i < arguments.length; i++) {
                                  var n = arguments[i];
                                  if (null != n)
                                      for (var a in n) n.hasOwnProperty(a) && (t[a] = n[a])
                              }
                              return t
                          });
                          var n = Object.assign({}, e);
                          return this.isObject(e) && this.isObject(t) && Object.keys(t).forEach((function(a) {
                              i.isObject(t[a]) && a in e ? n[a] = i.extend(e[a], t[a]) : Object.assign(n, h({}, a, t[a]))
                          })), n
                      }
                  }, {
                      key: "extendArray",
                      value: function(t, i) {
                          var n = [];
                          return t.map((function(t) {
                              n.push(e.extend(i, t))
                          })), n
                      }
                  }, {
                      key: "monthMod",
                      value: function(e) {
                          return e % 12
                      }
                  }, {
                      key: "clone",
                      value: function(t) {
                          if (e.is("Array", t)) {
                              for (var i = [], n = 0; n < t.length; n++) i[n] = this.clone(t[n]);
                              return i
                          }
                          if (e.is("Null", t)) return null;
                          if (e.is("Date", t)) return t;
                          if ("object" === s(t)) {
                              var a = {};
                              for (var r in t) t.hasOwnProperty(r) && (a[r] = this.clone(t[r]));
                              return a
                          }
                          return t
                      }
                  }, {
                      key: "log10",
                      value: function(e) {
                          return Math.log(e) / Math.LN10
                      }
                  }, {
                      key: "roundToBase10",
                      value: function(e) {
                          return Math.pow(10, Math.floor(Math.log10(e)))
                      }
                  }, {
                      key: "roundToBase",
                      value: function(e, t) {
                          return Math.pow(t, Math.floor(Math.log(e) / Math.log(t)))
                      }
                  }, {
                      key: "parseNumber",
                      value: function(e) {
                          return null === e ? e : parseFloat(e)
                      }
                  }, {
                      key: "randomId",
                      value: function() {
                          return (Math.random() + 1).toString(36).substring(4)
                      }
                  }, {
                      key: "noExponents",
                      value: function(e) {
                          var t = String(e).split(/[eE]/);
                          if (1 === t.length) return t[0];
                          var i = "",
                              n = e < 0 ? "-" : "",
                              a = t[0].replace(".", ""),
                              r = Number(t[1]) + 1;
                          if (r < 0) {
                              for (i = n + "0."; r++;) i += "0";
                              return i + a.replace(/^-/, "")
                          }
                          for (r -= a.length; r--;) i += "0";
                          return a + i
                      }
                  }, {
                      key: "getDimensions",
                      value: function(e) {
                          var t = getComputedStyle(e, null),
                              i = e.clientHeight,
                              n = e.clientWidth;
                          return i -= parseFloat(t.paddingTop) + parseFloat(t.paddingBottom), [n -= parseFloat(t.paddingLeft) + parseFloat(t.paddingRight), i]
                      }
                  }, {
                      key: "getBoundingClientRect",
                      value: function(e) {
                          var t = e.getBoundingClientRect();
                          return {
                              top: t.top,
                              right: t.right,
                              bottom: t.bottom,
                              left: t.left,
                              width: e.clientWidth,
                              height: e.clientHeight,
                              x: t.left,
                              y: t.top
                          }
                      }
                  }, {
                      key: "getLargestStringFromArr",
                      value: function(e) {
                          return e.reduce((function(e, t) {
                              return Array.isArray(t) && (t = t.reduce((function(e, t) {
                                  return e.length > t.length ? e : t
                              }))), e.length > t.length ? e : t
                          }), 0)
                      }
                  }, {
                      key: "hexToRgba",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
                              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
                          "#" !== e.substring(0, 1) && (e = "#999999");
                          var i = e.replace("#", "");
                          i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));
                          for (var n = 0; n < i.length; n++) i[n] = parseInt(1 === i[n].length ? i[n] + i[n] : i[n], 16);
                          return void 0 !== t && i.push(t), "rgba(" + i.join(",") + ")"
                      }
                  }, {
                      key: "getOpacityFromRGBA",
                      value: function(e) {
                          return parseFloat(e.replace(/^.*,(.+)\)/, "$1"))
                      }
                  }, {
                      key: "rgb2hex",
                      value: function(e) {
                          return (e = e.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === e.length ? "#" + ("0" + parseInt(e[1], 10).toString(16)).slice(-2) + ("0" + parseInt(e[2], 10).toString(16)).slice(-2) + ("0" + parseInt(e[3], 10).toString(16)).slice(-2) : ""
                      }
                  }, {
                      key: "isColorHex",
                      value: function(e) {
                          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(e)
                      }
                  }, {
                      key: "getPolygonPos",
                      value: function(e, t) {
                          for (var i = [], n = 2 * Math.PI / t, a = 0; a < t; a++) {
                              var r = {};
                              r.x = e * Math.sin(a * n), r.y = -e * Math.cos(a * n), i.push(r)
                          }
                          return i
                      }
                  }, {
                      key: "polarToCartesian",
                      value: function(e, t, i, n) {
                          var a = (n - 90) * Math.PI / 180;
                          return {
                              x: e + i * Math.cos(a),
                              y: t + i * Math.sin(a)
                          }
                      }
                  }, {
                      key: "escapeString",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x",
                              i = e.toString().slice();
                          return i.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi, t)
                      }
                  }, {
                      key: "negToZero",
                      value: function(e) {
                          return e < 0 ? 0 : e
                      }
                  }, {
                      key: "moveIndexInArray",
                      value: function(e, t, i) {
                          if (i >= e.length)
                              for (var n = i - e.length + 1; n--;) e.push(void 0);
                          return e.splice(i, 0, e.splice(t, 1)[0]), e
                      }
                  }, {
                      key: "extractNumber",
                      value: function(e) {
                          return parseFloat(e.replace(/[^\d.]*/g, ""))
                      }
                  }, {
                      key: "findAncestor",
                      value: function(e, t) {
                          for (;
                              (e = e.parentElement) && !e.classList.contains(t););
                          return e
                      }
                  }, {
                      key: "setELstyles",
                      value: function(e, t) {
                          for (var i in t) t.hasOwnProperty(i) && (e.style.key = t[i])
                      }
                  }, {
                      key: "isNumber",
                      value: function(e) {
                          return !isNaN(e) && parseFloat(Number(e)) === e && !isNaN(parseInt(e, 10))
                      }
                  }, {
                      key: "isFloat",
                      value: function(e) {
                          return Number(e) === e && e % 1 != 0
                      }
                  }, {
                      key: "isSafari",
                      value: function() {
                          return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                      }
                  }, {
                      key: "isFirefox",
                      value: function() {
                          return navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                      }
                  }, {
                      key: "isIE11",
                      value: function() {
                          if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0
                      }
                  }, {
                      key: "isIE",
                      value: function() {
                          var e = window.navigator.userAgent,
                              t = e.indexOf("MSIE ");
                          if (t > 0) return parseInt(e.substring(t + 5, e.indexOf(".", t)), 10);
                          if (e.indexOf("Trident/") > 0) {
                              var i = e.indexOf("rv:");
                              return parseInt(e.substring(i + 3, e.indexOf(".", i)), 10)
                          }
                          var n = e.indexOf("Edge/");
                          return n > 0 && parseInt(e.substring(n + 5, e.indexOf(".", n)), 10)
                      }
                  }]), e
              }(),
              w = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.setEasingFunctions()
                  }
                  return c(e, [{
                      key: "setEasingFunctions",
                      value: function() {
                          var e;
                          if (!this.w.globals.easing) {
                              switch (this.w.config.chart.animations.easing) {
                                  case "linear":
                                      e = "-";
                                      break;
                                  case "easein":
                                      e = "<";
                                      break;
                                  case "easeout":
                                      e = ">";
                                      break;
                                  case "easeinout":
                                      e = "<>";
                                      break;
                                  case "swing":
                                      e = function(e) {
                                          var t = 1.70158;
                                          return (e -= 1) * e * ((t + 1) * e + t) + 1
                                      };
                                      break;
                                  case "bounce":
                                      e = function(e) {
                                          return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                                      };
                                      break;
                                  case "elastic":
                                      e = function(e) {
                                          return e === !!e ? e : Math.pow(2, -10 * e) * Math.sin((e - .075) * (2 * Math.PI) / .3) + 1
                                      };
                                      break;
                                  default:
                                      e = "<>"
                              }
                              this.w.globals.easing = e
                          }
                      }
                  }, {
                      key: "animateLine",
                      value: function(e, t, i, n) {
                          e.attr(t).animate(n).attr(i)
                      }
                  }, {
                      key: "animateMarker",
                      value: function(e, t, i, n, a, r) {
                          t || (t = 0), e.attr({
                              r: t,
                              width: t,
                              height: t
                          }).animate(n, a).attr({
                              r: i,
                              width: i.width,
                              height: i.height
                          }).afterAll((function() {
                              r()
                          }))
                      }
                  }, {
                      key: "animateCircle",
                      value: function(e, t, i, n, a) {
                          e.attr({
                              r: t.r,
                              cx: t.cx,
                              cy: t.cy
                          }).animate(n, a).attr({
                              r: i.r,
                              cx: i.cx,
                              cy: i.cy
                          })
                      }
                  }, {
                      key: "animateRect",
                      value: function(e, t, i, n, a) {
                          e.attr(t).animate(n).attr(i).afterAll((function() {
                              return a()
                          }))
                      }
                  }, {
                      key: "animatePathsGradually",
                      value: function(e) {
                          var t = e.el,
                              i = e.realIndex,
                              n = e.j,
                              a = e.fill,
                              r = e.pathFrom,
                              s = e.pathTo,
                              o = e.speed,
                              l = e.delay,
                              c = this.w,
                              h = 0;
                          c.config.chart.animations.animateGradually.enabled && (h = c.config.chart.animations.animateGradually.delay), c.config.chart.animations.dynamicAnimation.enabled && c.globals.dataChanged && "bar" !== c.config.chart.type && (h = 0), this.morphSVG(t, i, n, "line" !== c.config.chart.type || c.globals.comboCharts ? a : "stroke", r, s, o, l * h)
                      }
                  }, {
                      key: "showDelayedElements",
                      value: function() {
                          this.w.globals.delayedElements.forEach((function(e) {
                              e.el.classList.remove("apexcharts-element-hidden")
                          }))
                      }
                  }, {
                      key: "animationCompleted",
                      value: function(e) {
                          var t = this.w;
                          t.globals.animationEnded || (t.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof t.config.chart.events.animationEnd && t.config.chart.events.animationEnd(this.ctx, {
                              el: e,
                              w: t
                          }))
                      }
                  }, {
                      key: "morphSVG",
                      value: function(e, t, i, n, a, r, s, o) {
                          var l = this,
                              c = this.w;
                          a || (a = e.attr("pathFrom")), r || (r = e.attr("pathTo"));
                          var h = function(e) {
                              return "radar" === c.config.chart.type && (s = 1), "M 0 ".concat(c.globals.gridHeight)
                          };
                          (!a || a.indexOf("undefined") > -1 || a.indexOf("NaN") > -1) && (a = h()), (!r || r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = h()), c.globals.shouldAnimate || (s = 1), e.plot(a).animate(1, c.globals.easing, o).plot(a).animate(s, c.globals.easing, o).plot(r).afterAll((function() {
                              y.isNumber(i) ? i === c.globals.series[c.globals.maxValsInArrayIndex].length - 2 && c.globals.shouldAnimate && l.animationCompleted(e) : "none" !== n && c.globals.shouldAnimate && (!c.globals.comboCharts && t === c.globals.series.length - 1 || c.globals.comboCharts) && l.animationCompleted(e), l.showDelayedElements()
                          }))
                      }
                  }]), e
              }(),
              k = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "getDefaultFilter",
                      value: function(e, t) {
                          var i = this.w;
                          e.unfilter(!0), (new window.SVG.Filter).size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(e, t, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(e, i.config.chart.dropShadow, t)
                      }
                  }, {
                      key: "addNormalFilter",
                      value: function(e, t) {
                          var i = this.w;
                          i.config.chart.dropShadow.enabled && !e.node.classList.contains("apexcharts-marker") && this.dropShadow(e, i.config.chart.dropShadow, t)
                      }
                  }, {
                      key: "addLightenFilter",
                      value: function(e, t, i) {
                          var n = this,
                              a = this.w,
                              r = i.intensity;
                          e.unfilter(!0), new window.SVG.Filter, e.filter((function(e) {
                              var i = a.config.chart.dropShadow;
                              (i.enabled ? n.addShadow(e, t, i) : e).componentTransfer({
                                  rgb: {
                                      type: "linear",
                                      slope: 1.5,
                                      intercept: r
                                  }
                              })
                          })), e.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(e.filterer.node)
                      }
                  }, {
                      key: "addDarkenFilter",
                      value: function(e, t, i) {
                          var n = this,
                              a = this.w,
                              r = i.intensity;
                          e.unfilter(!0), new window.SVG.Filter, e.filter((function(e) {
                              var i = a.config.chart.dropShadow;
                              (i.enabled ? n.addShadow(e, t, i) : e).componentTransfer({
                                  rgb: {
                                      type: "linear",
                                      slope: r
                                  }
                              })
                          })), e.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(e.filterer.node)
                      }
                  }, {
                      key: "applyFilter",
                      value: function(e, t, i) {
                          var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                          switch (i) {
                              case "none":
                                  this.addNormalFilter(e, t);
                                  break;
                              case "lighten":
                                  this.addLightenFilter(e, t, {
                                      intensity: n
                                  });
                                  break;
                              case "darken":
                                  this.addDarkenFilter(e, t, {
                                      intensity: n
                                  })
                          }
                      }
                  }, {
                      key: "addShadow",
                      value: function(e, t, i) {
                          var n = i.blur,
                              a = i.top,
                              r = i.left,
                              s = i.color,
                              o = i.opacity,
                              l = e.flood(Array.isArray(s) ? s[t] : s, o).composite(e.sourceAlpha, "in").offset(r, a).gaussianBlur(n).merge(e.source);
                          return e.blend(e.source, l)
                      }
                  }, {
                      key: "dropShadow",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                              n = t.top,
                              a = t.left,
                              r = t.blur,
                              s = t.color,
                              o = t.opacity,
                              l = t.noUserSpaceOnUse,
                              c = this.w;
                          return e.unfilter(!0), y.isIE() && "radialBar" === c.config.chart.type || (s = Array.isArray(s) ? s[i] : s, e.filter((function(e) {
                              var t = null;
                              t = y.isSafari() || y.isFirefox() || y.isIE() ? e.flood(s, o).composite(e.sourceAlpha, "in").offset(a, n).gaussianBlur(r) : e.flood(s, o).composite(e.sourceAlpha, "in").offset(a, n).gaussianBlur(r).merge(e.source), e.blend(e.source, t)
                          })), l || e.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(e.filterer.node)), e
                      }
                  }, {
                      key: "setSelectionFilter",
                      value: function(e, t, i) {
                          var n = this.w;
                          if (void 0 !== n.globals.selectedDataPoints[t] && n.globals.selectedDataPoints[t].indexOf(i) > -1) {
                              e.node.setAttribute("selected", !0);
                              var a = n.config.states.active.filter;
                              "none" !== a && this.applyFilter(e, t, a.type, a.value)
                          }
                      }
                  }, {
                      key: "_scaleFilterSize",
                      value: function(e) {
                          ! function(t) {
                              for (var i in t) t.hasOwnProperty(i) && e.setAttribute(i, t[i])
                          }({
                              width: "200%",
                              height: "200%",
                              x: "-50%",
                              y: "-50%"
                          })
                      }
                  }]), e
              }(),
              S = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "drawLine",
                      value: function(e, t, i, n) {
                          var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
                              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                              s = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                              o = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt",
                              l = this.w,
                              c = l.globals.dom.Paper.line().attr({
                                  x1: e,
                                  y1: t,
                                  x2: i,
                                  y2: n,
                                  stroke: a,
                                  "stroke-dasharray": r,
                                  "stroke-width": s,
                                  "stroke-linecap": o
                              });
                          return c
                      }
                  }, {
                      key: "drawRect",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                              n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                              a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
                              s = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
                              o = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                              l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
                              c = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
                              h = this.w,
                              u = h.globals.dom.Paper.rect();
                          return u.attr({
                              x: e,
                              y: t,
                              width: i > 0 ? i : 0,
                              height: n > 0 ? n : 0,
                              rx: a,
                              ry: a,
                              opacity: s,
                              "stroke-width": null !== o ? o : 0,
                              stroke: null !== l ? l : "none",
                              "stroke-dasharray": c
                          }), u.node.setAttribute("fill", r), u
                      }
                  }, {
                      key: "drawPolygon",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                              n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none",
                              a = this.w,
                              r = a.globals.dom.Paper.polygon(e).attr({
                                  fill: n,
                                  stroke: t,
                                  "stroke-width": i
                              });
                          return r
                      }
                  }, {
                      key: "drawCircle",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                              i = this.w;
                          e < 0 && (e = 0);
                          var n = i.globals.dom.Paper.circle(2 * e);
                          return null !== t && n.attr(t), n
                      }
                  }, {
                      key: "drawPath",
                      value: function(e) {
                          var t = e.d,
                              i = void 0 === t ? "" : t,
                              n = e.stroke,
                              a = void 0 === n ? "#a8a8a8" : n,
                              r = e.strokeWidth,
                              s = void 0 === r ? 1 : r,
                              o = e.fill,
                              l = e.fillOpacity,
                              c = void 0 === l ? 1 : l,
                              h = e.strokeOpacity,
                              u = void 0 === h ? 1 : h,
                              d = e.classes,
                              f = e.strokeLinecap,
                              p = void 0 === f ? null : f,
                              g = e.strokeDashArray,
                              x = void 0 === g ? 0 : g,
                              v = this.w;
                          return null === p && (p = v.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(v.globals.gridHeight)), v.globals.dom.Paper.path(i).attr({
                              fill: o,
                              "fill-opacity": c,
                              stroke: a,
                              "stroke-opacity": u,
                              "stroke-linecap": p,
                              "stroke-width": s,
                              "stroke-dasharray": x,
                              class: d
                          })
                      }
                  }, {
                      key: "group",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                              t = this.w,
                              i = t.globals.dom.Paper.group();
                          return null !== e && i.attr(e), i
                      }
                  }, {
                      key: "move",
                      value: function(e, t) {
                          var i = ["M", e, t].join(" ");
                          return i
                      }
                  }, {
                      key: "line",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                              n = null;
                          return null === i ? n = ["L", e, t].join(" ") : "H" === i ? n = ["H", e].join(" ") : "V" === i && (n = ["V", t].join(" ")), n
                      }
                  }, {
                      key: "curve",
                      value: function(e, t, i, n, a, r) {
                          var s = ["C", e, t, i, n, a, r].join(" ");
                          return s
                      }
                  }, {
                      key: "quadraticCurve",
                      value: function(e, t, i, n) {
                          return ["Q", e, t, i, n].join(" ")
                      }
                  }, {
                      key: "arc",
                      value: function(e, t, i, n, a, r, s) {
                          var o = arguments.length > 7 && void 0 !== arguments[7] && arguments[7],
                              l = "A";
                          o && (l = "a");
                          var c = [l, e, t, i, n, a, r, s].join(" ");
                          return c
                      }
                  }, {
                      key: "renderPaths",
                      value: function(e) {
                          var t, i = e.j,
                              n = e.realIndex,
                              a = e.pathFrom,
                              s = e.pathTo,
                              o = e.stroke,
                              l = e.strokeWidth,
                              c = e.strokeLinecap,
                              h = e.fill,
                              u = e.animationDelay,
                              d = e.initialSpeed,
                              f = e.dataChangeSpeed,
                              p = e.className,
                              g = e.shouldClipToGrid,
                              x = void 0 === g || g,
                              v = e.bindEventsOnPaths,
                              m = void 0 === v || v,
                              b = e.drawShadow,
                              y = void 0 === b || b,
                              S = this.w,
                              A = new k(this.ctx),
                              C = new w(this.ctx),
                              T = this.w.config.chart.animations.enabled,
                              E = T && this.w.config.chart.animations.dynamicAnimation.enabled,
                              L = !!(T && !S.globals.resized || E && S.globals.dataChanged && S.globals.shouldAnimate);
                          L ? t = a : (t = s, S.globals.animationEnded = !0);
                          var P = S.config.stroke.dashArray,
                              M = 0;
                          M = Array.isArray(P) ? P[n] : S.config.stroke.dashArray;
                          var I = this.drawPath({
                              d: t,
                              stroke: o,
                              strokeWidth: l,
                              fill: h,
                              fillOpacity: 1,
                              classes: p,
                              strokeLinecap: c,
                              strokeDashArray: M
                          });
                          if (I.attr("index", n), x && I.attr({
                                  "clip-path": "url(#gridRectMask".concat(S.globals.cuid, ")")
                              }), "none" !== S.config.states.normal.filter.type) A.getDefaultFilter(I, n);
                          else if (S.config.chart.dropShadow.enabled && y && (!S.config.chart.dropShadow.enabledOnSeries || S.config.chart.dropShadow.enabledOnSeries && -1 !== S.config.chart.dropShadow.enabledOnSeries.indexOf(n))) {
                              var R = S.config.chart.dropShadow;
                              A.dropShadow(I, R, n)
                          }
                          m && (I.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, I)), I.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, I)), I.node.addEventListener("mousedown", this.pathMouseDown.bind(this, I))), I.attr({
                              pathTo: s,
                              pathFrom: a
                          });
                          var _ = {
                              el: I,
                              j: i,
                              realIndex: n,
                              pathFrom: a,
                              pathTo: s,
                              fill: h,
                              strokeWidth: l,
                              delay: u
                          };
                          return !T || S.globals.resized || S.globals.dataChanged ? !S.globals.resized && S.globals.dataChanged || C.showDelayedElements() : C.animatePathsGradually(r(r({}, _), {}, {
                              speed: d
                          })), S.globals.dataChanged && E && L && C.animatePathsGradually(r(r({}, _), {}, {
                              speed: f
                          })), I
                      }
                  }, {
                      key: "drawPattern",
                      value: function(e, t, i) {
                          var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
                              a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                              r = this.w,
                              s = r.globals.dom.Paper.pattern(t, i, (function(r) {
                                  "horizontalLines" === e ? r.line(0, 0, i, 0).stroke({
                                      color: n,
                                      width: a + 1
                                  }) : "verticalLines" === e ? r.line(0, 0, 0, t).stroke({
                                      color: n,
                                      width: a + 1
                                  }) : "slantedLines" === e ? r.line(0, 0, t, i).stroke({
                                      color: n,
                                      width: a
                                  }) : "squares" === e ? r.rect(t, i).fill("none").stroke({
                                      color: n,
                                      width: a
                                  }) : "circles" === e && r.circle(t).fill("none").stroke({
                                      color: n,
                                      width: a
                                  })
                              }));
                          return s
                      }
                  }, {
                      key: "drawGradient",
                      value: function(e, t, i, n, a) {
                          var r, s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                              o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                              l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                              c = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
                              h = this.w;
                          t.length < 9 && 0 === t.indexOf("#") && (t = y.hexToRgba(t, n)), i.length < 9 && 0 === i.indexOf("#") && (i = y.hexToRgba(i, a));
                          var u = 0,
                              d = 1,
                              f = 1,
                              p = null;
                          null !== o && (u = void 0 !== o[0] ? o[0] / 100 : 0, d = void 0 !== o[1] ? o[1] / 100 : 1, f = void 0 !== o[2] ? o[2] / 100 : 1, p = void 0 !== o[3] ? o[3] / 100 : null);
                          var g = !("donut" !== h.config.chart.type && "pie" !== h.config.chart.type && "polarArea" !== h.config.chart.type && "bubble" !== h.config.chart.type);
                          if (r = null === l || 0 === l.length ? h.globals.dom.Paper.gradient(g ? "radial" : "linear", (function(e) {
                                  e.at(u, t, n), e.at(d, i, a), e.at(f, i, a), null !== p && e.at(p, t, n)
                              })) : h.globals.dom.Paper.gradient(g ? "radial" : "linear", (function(e) {
                                  (Array.isArray(l[c]) ? l[c] : l).forEach((function(t) {
                                      e.at(t.offset / 100, t.color, t.opacity)
                                  }))
                              })), g) {
                              var x = h.globals.gridWidth / 2,
                                  v = h.globals.gridHeight / 2;
                              "bubble" !== h.config.chart.type ? r.attr({
                                  gradientUnits: "userSpaceOnUse",
                                  cx: x,
                                  cy: v,
                                  r: s
                              }) : r.attr({
                                  cx: .5,
                                  cy: .5,
                                  r: .8,
                                  fx: .2,
                                  fy: .2
                              })
                          } else "vertical" === e ? r.from(0, 0).to(0, 1) : "diagonal" === e ? r.from(0, 0).to(1, 1) : "horizontal" === e ? r.from(0, 1).to(1, 1) : "diagonal2" === e && r.from(1, 0).to(0, 1);
                          return r
                      }
                  }, {
                      key: "drawText",
                      value: function(e) {
                          var t, i = e.x,
                              n = e.y,
                              a = e.text,
                              r = e.textAnchor,
                              s = e.fontSize,
                              o = e.fontFamily,
                              l = e.fontWeight,
                              c = e.foreColor,
                              h = e.opacity,
                              u = e.cssClass,
                              d = void 0 === u ? "" : u,
                              f = e.isPlainText,
                              p = void 0 === f || f,
                              g = this.w;
                          return void 0 === a && (a = ""), r || (r = "start"), c && c.length || (c = g.config.chart.foreColor), o = o || g.config.chart.fontFamily, l = l || "regular", (t = Array.isArray(a) ? g.globals.dom.Paper.text((function(e) {
                              for (var t = 0; t < a.length; t++) 0 === t ? e.tspan(a[t]) : e.tspan(a[t]).newLine()
                          })) : p ? g.globals.dom.Paper.plain(a) : g.globals.dom.Paper.text((function(e) {
                              return e.tspan(a)
                          }))).attr({
                              x: i,
                              y: n,
                              "text-anchor": r,
                              "dominant-baseline": "auto",
                              "font-size": s,
                              "font-family": o,
                              "font-weight": l,
                              fill: c,
                              class: "apexcharts-text " + d
                          }), t.node.style.fontFamily = o, t.node.style.opacity = h, t
                      }
                  }, {
                      key: "drawMarker",
                      value: function(e, t, i) {
                          e = e || 0;
                          var n = i.pSize || 0,
                              a = null;
                          if ("square" === i.shape || "rect" === i.shape) {
                              var r = void 0 === i.pRadius ? n / 2 : i.pRadius;
                              null !== t && n || (n = 0, r = 0);
                              var s = 1.2 * n + r,
                                  o = this.drawRect(s, s, s, s, r);
                              o.attr({
                                  x: e - s / 2,
                                  y: t - s / 2,
                                  cx: e,
                                  cy: t,
                                  class: i.class ? i.class : "",
                                  fill: i.pointFillColor,
                                  "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                                  stroke: i.pointStrokeColor,
                                  "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
                                  "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                              }), a = o
                          } else "circle" !== i.shape && i.shape || (y.isNumber(t) || (n = 0, t = 0), a = this.drawCircle(n, {
                              cx: e,
                              cy: t,
                              class: i.class ? i.class : "",
                              stroke: i.pointStrokeColor,
                              fill: i.pointFillColor,
                              "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                              "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
                              "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                          }));
                          return a
                      }
                  }, {
                      key: "pathMouseEnter",
                      value: function(e, t) {
                          var i = this.w,
                              n = new k(this.ctx),
                              a = parseInt(e.node.getAttribute("index"), 10),
                              r = parseInt(e.node.getAttribute("j"), 10);
                          if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(t, this.ctx, {
                                  seriesIndex: a,
                                  dataPointIndex: r,
                                  w: i
                              }), this.ctx.events.fireEvent("dataPointMouseEnter", [t, this.ctx, {
                                  seriesIndex: a,
                                  dataPointIndex: r,
                                  w: i
                              }]), ("none" === i.config.states.active.filter.type || "true" !== e.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && !i.globals.isTouchDevice) {
                              var s = i.config.states.hover.filter;
                              n.applyFilter(e, a, s.type, s.value)
                          }
                      }
                  }, {
                      key: "pathMouseLeave",
                      value: function(e, t) {
                          var i = this.w,
                              n = new k(this.ctx),
                              a = parseInt(e.node.getAttribute("index"), 10),
                              r = parseInt(e.node.getAttribute("j"), 10);
                          "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(t, this.ctx, {
                              seriesIndex: a,
                              dataPointIndex: r,
                              w: i
                          }), this.ctx.events.fireEvent("dataPointMouseLeave", [t, this.ctx, {
                              seriesIndex: a,
                              dataPointIndex: r,
                              w: i
                          }]), "none" !== i.config.states.active.filter.type && "true" === e.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && n.getDefaultFilter(e, a)
                      }
                  }, {
                      key: "pathMouseDown",
                      value: function(e, t) {
                          var i = this.w,
                              n = new k(this.ctx),
                              a = parseInt(e.node.getAttribute("index"), 10),
                              r = parseInt(e.node.getAttribute("j"), 10),
                              s = "false";
                          if ("true" === e.node.getAttribute("selected")) {
                              if (e.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[a].indexOf(r) > -1) {
                                  var o = i.globals.selectedDataPoints[a].indexOf(r);
                                  i.globals.selectedDataPoints[a].splice(o, 1)
                              }
                          } else {
                              if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
                                  i.globals.selectedDataPoints = [];
                                  var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
                                      c = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
                                      h = function(e) {
                                          Array.prototype.forEach.call(e, (function(e) {
                                              e.node.setAttribute("selected", "false"), n.getDefaultFilter(e, a)
                                          }))
                                      };
                                  h(l), h(c)
                              }
                              e.node.setAttribute("selected", "true"), s = "true", void 0 === i.globals.selectedDataPoints[a] && (i.globals.selectedDataPoints[a] = []), i.globals.selectedDataPoints[a].push(r)
                          }
                          if ("true" === s) {
                              var u = i.config.states.active.filter;
                              "none" !== u && n.applyFilter(e, a, u.type, u.value)
                          } else "none" !== i.config.states.active.filter.type && n.getDefaultFilter(e, a);
                          "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(t, this.ctx, {
                              selectedDataPoints: i.globals.selectedDataPoints,
                              seriesIndex: a,
                              dataPointIndex: r,
                              w: i
                          }), t && this.ctx.events.fireEvent("dataPointSelection", [t, this.ctx, {
                              selectedDataPoints: i.globals.selectedDataPoints,
                              seriesIndex: a,
                              dataPointIndex: r,
                              w: i
                          }])
                      }
                  }, {
                      key: "rotateAroundCenter",
                      value: function(e) {
                          var t = {};
                          return e && "function" == typeof e.getBBox && (t = e.getBBox()), {
                              x: t.x + t.width / 2,
                              y: t.y + t.height / 2
                          }
                      }
                  }, {
                      key: "getTextRects",
                      value: function(e, t, i, n) {
                          var a = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                              r = this.w,
                              s = this.drawText({
                                  x: -200,
                                  y: -200,
                                  text: e,
                                  textAnchor: "start",
                                  fontSize: t,
                                  fontFamily: i,
                                  foreColor: "#fff",
                                  opacity: 0
                              });
                          n && s.attr("transform", n), r.globals.dom.Paper.add(s);
                          var o = s.bbox();
                          return a || (o = s.node.getBoundingClientRect()), s.remove(), {
                              width: o.width,
                              height: o.height
                          }
                      }
                  }, {
                      key: "placeTextWithEllipsis",
                      value: function(e, t, i) {
                          if ("function" == typeof e.getComputedTextLength && (e.textContent = t, t.length > 0 && e.getComputedTextLength() >= i / 1.1)) {
                              for (var n = t.length - 3; n > 0; n -= 3)
                                  if (e.getSubStringLength(0, n) <= i / 1.1) return void(e.textContent = t.substring(0, n) + "...");
                              e.textContent = "."
                          }
                      }
                  }], [{
                      key: "setAttrs",
                      value: function(e, t) {
                          for (var i in t) t.hasOwnProperty(i) && e.setAttribute(i, t[i])
                      }
                  }]), e
              }(),
              A = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.annoCtx = t
                  }
                  return c(e, [{
                      key: "setOrientations",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                              i = this.w;
                          if ("vertical" === e.label.orientation) {
                              var n = null !== t ? t : 0,
                                  a = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(n, "']"));
                              if (null !== a) {
                                  var r = a.getBoundingClientRect();
                                  a.setAttribute("x", parseFloat(a.getAttribute("x")) - r.height + 4), "top" === e.label.position ? a.setAttribute("y", parseFloat(a.getAttribute("y")) + r.width) : a.setAttribute("y", parseFloat(a.getAttribute("y")) - r.width);
                                  var s = this.annoCtx.graphics.rotateAroundCenter(a),
                                      o = s.x,
                                      l = s.y;
                                  a.setAttribute("transform", "rotate(-90 ".concat(o, " ").concat(l, ")"))
                              }
                          }
                      }
                  }, {
                      key: "addBackgroundToAnno",
                      value: function(e, t) {
                          var i = this.w;
                          if (!e || void 0 === t.label.text || void 0 !== t.label.text && !String(t.label.text).trim()) return null;
                          var n = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
                              a = e.getBoundingClientRect(),
                              r = t.label.style.padding.left,
                              s = t.label.style.padding.right,
                              o = t.label.style.padding.top,
                              l = t.label.style.padding.bottom;
                          "vertical" === t.label.orientation && (o = t.label.style.padding.left, l = t.label.style.padding.right, r = t.label.style.padding.top, s = t.label.style.padding.bottom);
                          var c = a.left - n.left - r,
                              h = a.top - n.top - o,
                              u = this.annoCtx.graphics.drawRect(c - i.globals.barPadForNumericAxis, h, a.width + r + s, a.height + o + l, t.label.borderRadius, t.label.style.background, 1, t.label.borderWidth, t.label.borderColor, 0);
                          return t.id && u.node.classList.add(y.escapeString(t.id)), u
                      }
                  }, {
                      key: "annotationsBackground",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = function(i, n, a) {
                                  var r = t.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations .apexcharts-").concat(a, "-annotation-label[rel='").concat(n, "']"));
                                  if (r) {
                                      var s = r.parentNode,
                                          o = e.addBackgroundToAnno(r, i);
                                      o && (s.insertBefore(o.node, r), i.label.mouseEnter && o.node.addEventListener("mouseenter", i.label.mouseEnter.bind(e, i)), i.label.mouseLeave && o.node.addEventListener("mouseleave", i.label.mouseLeave.bind(e, i)))
                                  }
                              };
                          t.config.annotations.xaxis.map((function(e, t) {
                              i(e, t, "xaxis")
                          })), t.config.annotations.yaxis.map((function(e, t) {
                              i(e, t, "yaxis")
                          })), t.config.annotations.points.map((function(e, t) {
                              i(e, t, "point")
                          }))
                      }
                  }, {
                      key: "getStringX",
                      value: function(e) {
                          var t = this.w,
                              i = e;
                          t.config.xaxis.convertedCatToNumeric && t.globals.categoryLabels.length && (e = t.globals.categoryLabels.indexOf(e) + 1);
                          var n = t.globals.labels.indexOf(e),
                              a = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (n + 1) + ")");
                          return a && (i = parseFloat(a.getAttribute("x"))), i
                      }
                  }]), e
              }(),
              C = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.annoCtx = t, this.invertAxis = this.annoCtx.invertAxis
                  }
                  return c(e, [{
                      key: "addXaxisAnnotation",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = this.invertAxis ? n.globals.minY : n.globals.minX,
                              r = this.invertAxis ? n.globals.maxY : n.globals.maxX,
                              s = this.invertAxis ? n.globals.yRange[0] : n.globals.xRange,
                              o = (e.x - a) / (s / n.globals.gridWidth);
                          this.annoCtx.inversedReversedAxis && (o = (r - e.x) / (s / n.globals.gridWidth));
                          var l = e.label.text;
                          "category" !== n.config.xaxis.type && !n.config.xaxis.convertedCatToNumeric || this.invertAxis || n.globals.dataFormatXNumeric || (o = this.annoCtx.helpers.getStringX(e.x));
                          var c = e.strokeDashArray;
                          if (y.isNumber(o)) {
                              if (null === e.x2 || void 0 === e.x2) {
                                  var h = this.annoCtx.graphics.drawLine(o + e.offsetX, 0 + e.offsetY, o + e.offsetX, n.globals.gridHeight + e.offsetY, e.borderColor, c, e.borderWidth);
                                  t.appendChild(h.node), e.id && h.node.classList.add(e.id)
                              } else {
                                  var u = (e.x2 - a) / (s / n.globals.gridWidth);
                                  if (this.annoCtx.inversedReversedAxis && (u = (r - e.x2) / (s / n.globals.gridWidth)), "category" !== n.config.xaxis.type && !n.config.xaxis.convertedCatToNumeric || this.invertAxis || n.globals.dataFormatXNumeric || (u = this.annoCtx.helpers.getStringX(e.x2)), u < o) {
                                      var d = o;
                                      o = u, u = d
                                  }
                                  var f = this.annoCtx.graphics.drawRect(o + e.offsetX, 0 + e.offsetY, u - o, n.globals.gridHeight + e.offsetY, 0, e.fillColor, e.opacity, 1, e.borderColor, c);
                                  f.node.classList.add("apexcharts-annotation-rect"), f.attr("clip-path", "url(#gridRectMask".concat(n.globals.cuid, ")")), t.appendChild(f.node), e.id && f.node.classList.add(e.id)
                              }
                              var p = "top" === e.label.position ? 4 : n.globals.gridHeight,
                                  g = this.annoCtx.graphics.getTextRects(l, parseFloat(e.label.style.fontSize)),
                                  x = this.annoCtx.graphics.drawText({
                                      x: o + e.label.offsetX,
                                      y: p + e.label.offsetY - ("vertical" === e.label.orientation ? "top" === e.label.position ? g.width / 2 - 12 : -g.width / 2 : 0),
                                      text: l,
                                      textAnchor: e.label.textAnchor,
                                      fontSize: e.label.style.fontSize,
                                      fontFamily: e.label.style.fontFamily,
                                      fontWeight: e.label.style.fontWeight,
                                      foreColor: e.label.style.color,
                                      cssClass: "apexcharts-xaxis-annotation-label ".concat(e.label.style.cssClass, " ").concat(e.id ? e.id : "")
                                  });
                              x.attr({
                                  rel: i
                              }), t.appendChild(x.node), this.annoCtx.helpers.setOrientations(e, i)
                          }
                      }
                  }, {
                      key: "drawXAxisAnnotations",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = this.annoCtx.graphics.group({
                                  class: "apexcharts-xaxis-annotations"
                              });
                          return t.config.annotations.xaxis.map((function(t, n) {
                              e.addXaxisAnnotation(t, i.node, n)
                          })), i
                      }
                  }]), e
              }(),
              T = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "getStackedSeriesTotals",
                      value: function() {
                          var e = this.w,
                              t = [];
                          if (0 === e.globals.series.length) return t;
                          for (var i = 0; i < e.globals.series[e.globals.maxValsInArrayIndex].length; i++) {
                              for (var n = 0, a = 0; a < e.globals.series.length; a++) void 0 !== e.globals.series[a][i] && (n += e.globals.series[a][i]);
                              t.push(n)
                          }
                          return e.globals.stackedSeriesTotals = t, t
                      }
                  }, {
                      key: "getSeriesTotalByIndex",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                          return null === e ? this.w.config.series.reduce((function(e, t) {
                              return e + t
                          }), 0) : this.w.globals.series[e].reduce((function(e, t) {
                              return e + t
                          }), 0)
                      }
                  }, {
                      key: "isSeriesNull",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                          return 0 === (null === e ? this.w.config.series.filter((function(e) {
                              return null !== e
                          })) : this.w.config.series[e].data.filter((function(e) {
                              return null !== e
                          }))).length
                      }
                  }, {
                      key: "seriesHaveSameValues",
                      value: function(e) {
                          return this.w.globals.series[e].every((function(e, t, i) {
                              return e === i[0]
                          }))
                      }
                  }, {
                      key: "getCategoryLabels",
                      value: function(e) {
                          var t = this.w,
                              i = e.slice();
                          return t.config.xaxis.convertedCatToNumeric && (i = e.map((function(e, i) {
                              return t.config.xaxis.labels.formatter(e - t.globals.minX + 1)
                          }))), i
                      }
                  }, {
                      key: "getLargestSeries",
                      value: function() {
                          var e = this.w;
                          e.globals.maxValsInArrayIndex = e.globals.series.map((function(e) {
                              return e.length
                          })).indexOf(Math.max.apply(Math, e.globals.series.map((function(e) {
                              return e.length
                          }))))
                      }
                  }, {
                      key: "getLargestMarkerSize",
                      value: function() {
                          var e = this.w,
                              t = 0;
                          return e.globals.markers.size.forEach((function(e) {
                              t = Math.max(t, e)
                          })), e.config.markers.discrete && e.config.markers.discrete.length && e.config.markers.discrete.forEach((function(e) {
                              t = Math.max(t, e.size)
                          })), t > 0 && (t += e.config.markers.hover.sizeOffset + 1), e.globals.markers.largestSize = t, t
                      }
                  }, {
                      key: "getSeriesTotals",
                      value: function() {
                          var e = this.w;
                          e.globals.seriesTotals = e.globals.series.map((function(e, t) {
                              var i = 0;
                              if (Array.isArray(e))
                                  for (var n = 0; n < e.length; n++) i += e[n];
                              else i += e;
                              return i
                          }))
                      }
                  }, {
                      key: "getSeriesTotalsXRange",
                      value: function(e, t) {
                          var i = this.w;
                          return i.globals.series.map((function(n, a) {
                              for (var r = 0, s = 0; s < n.length; s++) i.globals.seriesX[a][s] > e && i.globals.seriesX[a][s] < t && (r += n[s]);
                              return r
                          }))
                      }
                  }, {
                      key: "getPercentSeries",
                      value: function() {
                          var e = this.w;
                          e.globals.seriesPercent = e.globals.series.map((function(t, i) {
                              var n = [];
                              if (Array.isArray(t))
                                  for (var a = 0; a < t.length; a++) {
                                      var r = e.globals.stackedSeriesTotals[a],
                                          s = 0;
                                      r && (s = 100 * t[a] / r), n.push(s)
                                  } else {
                                      var o = 100 * t / e.globals.seriesTotals.reduce((function(e, t) {
                                          return e + t
                                      }), 0);
                                      n.push(o)
                                  }
                              return n
                          }))
                      }
                  }, {
                      key: "getCalculatedRatios",
                      value: function() {
                          var e, t, i, n, a = this.w.globals,
                              r = [],
                              s = 0,
                              o = [],
                              l = .1,
                              c = 0;
                          if (a.yRange = [], a.isMultipleYAxis)
                              for (var h = 0; h < a.minYArr.length; h++) a.yRange.push(Math.abs(a.minYArr[h] - a.maxYArr[h])), o.push(0);
                          else a.yRange.push(Math.abs(a.minY - a.maxY));
                          a.xRange = Math.abs(a.maxX - a.minX), a.zRange = Math.abs(a.maxZ - a.minZ);
                          for (var u = 0; u < a.yRange.length; u++) r.push(a.yRange[u] / a.gridHeight);
                          if (t = a.xRange / a.gridWidth, i = Math.abs(a.initialMaxX - a.initialMinX) / a.gridWidth, e = a.yRange / a.gridWidth, n = a.xRange / a.gridHeight, (s = a.zRange / a.gridHeight * 16) || (s = 1), a.minY !== Number.MIN_VALUE && 0 !== Math.abs(a.minY) && (a.hasNegs = !0), a.isMultipleYAxis) {
                              o = [];
                              for (var d = 0; d < r.length; d++) o.push(-a.minYArr[d] / r[d])
                          } else o.push(-a.minY / r[0]), a.minY !== Number.MIN_VALUE && 0 !== Math.abs(a.minY) && (l = -a.minY / e, c = a.minX / t);
                          return {
                              yRatio: r,
                              invertedYRatio: e,
                              zRatio: s,
                              xRatio: t,
                              initialXRatio: i,
                              invertedXRatio: n,
                              baseLineInvertedY: l,
                              baseLineY: o,
                              baseLineX: c
                          }
                      }
                  }, {
                      key: "getLogSeries",
                      value: function(e) {
                          var t = this,
                              i = this.w;
                          return i.globals.seriesLog = e.map((function(e, n) {
                              return i.config.yaxis[n] && i.config.yaxis[n].logarithmic ? e.map((function(e) {
                                  return null === e ? null : t.getLogVal(i.config.yaxis[n].logBase, e, n)
                              })) : e
                          })), i.globals.invalidLogScale ? e : i.globals.seriesLog
                      }
                  }, {
                      key: "getBaseLog",
                      value: function(e, t) {
                          return Math.log(t) / Math.log(e)
                      }
                  }, {
                      key: "getLogVal",
                      value: function(e, t, i) {
                          if (0 === t) return 0;
                          var n = this.w,
                              a = 0 === n.globals.minYArr[i] ? -1 : this.getBaseLog(e, n.globals.minYArr[i]),
                              r = (0 === n.globals.maxYArr[i] ? 0 : this.getBaseLog(e, n.globals.maxYArr[i])) - a;
                          return (this.getBaseLog(e, t) - a) / r
                      }
                  }, {
                      key: "getLogYRatios",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = this.w.globals;
                          return n.yLogRatio = e.slice(), n.logYRange = n.yRange.map((function(e, a) {
                              if (i.config.yaxis[a] && t.w.config.yaxis[a].logarithmic) {
                                  var r, s = -Number.MAX_VALUE,
                                      o = Number.MIN_VALUE;
                                  return n.seriesLog.forEach((function(e, t) {
                                      e.forEach((function(e) {
                                          i.config.yaxis[t] && i.config.yaxis[t].logarithmic && (s = Math.max(e, s), o = Math.min(e, o))
                                      }))
                                  })), r = Math.pow(n.yRange[a], Math.abs(o - s) / n.yRange[a]), n.yLogRatio[a] = r / n.gridHeight, r
                              }
                          })), n.invalidLogScale ? e.slice() : n.yLogRatio
                      }
                  }], [{
                      key: "checkComboSeries",
                      value: function(e) {
                          var t = !1,
                              i = 0,
                              n = 0;
                          return e.length && void 0 !== e[0].type && e.forEach((function(e) {
                              "bar" !== e.type && "column" !== e.type && "candlestick" !== e.type && "boxPlot" !== e.type || i++, void 0 !== e.type && n++
                          })), n > 0 && (t = !0), {
                              comboBarCount: i,
                              comboCharts: t
                          }
                      }
                  }, {
                      key: "extendArrayProps",
                      value: function(e, t, i) {
                          return t.yaxis && (t = e.extendYAxis(t, i)), t.annotations && (t.annotations.yaxis && (t = e.extendYAxisAnnotations(t)), t.annotations.xaxis && (t = e.extendXAxisAnnotations(t)), t.annotations.points && (t = e.extendPointAnnotations(t))), t
                      }
                  }]), e
              }(),
              E = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.annoCtx = t
                  }
                  return c(e, [{
                      key: "addYaxisAnnotation",
                      value: function(e, t, i) {
                          var n, a = this.w,
                              r = e.strokeDashArray,
                              s = this._getY1Y2("y1", e),
                              o = e.label.text;
                          if (null === e.y2 || void 0 === e.y2) {
                              var l = this.annoCtx.graphics.drawLine(0 + e.offsetX, s + e.offsetY, this._getYAxisAnnotationWidth(e), s + e.offsetY, e.borderColor, r, e.borderWidth);
                              t.appendChild(l.node), e.id && l.node.classList.add(e.id)
                          } else {
                              if ((n = this._getY1Y2("y2", e)) > s) {
                                  var c = s;
                                  s = n, n = c
                              }
                              var h = this.annoCtx.graphics.drawRect(0 + e.offsetX, n + e.offsetY, this._getYAxisAnnotationWidth(e), s - n, 0, e.fillColor, e.opacity, 1, e.borderColor, r);
                              h.node.classList.add("apexcharts-annotation-rect"), h.attr("clip-path", "url(#gridRectMask".concat(a.globals.cuid, ")")), t.appendChild(h.node), e.id && h.node.classList.add(e.id)
                          }
                          var u = "right" === e.label.position ? a.globals.gridWidth : 0,
                              d = this.annoCtx.graphics.drawText({
                                  x: u + e.label.offsetX,
                                  y: (null != n ? n : s) + e.label.offsetY - 3,
                                  text: o,
                                  textAnchor: e.label.textAnchor,
                                  fontSize: e.label.style.fontSize,
                                  fontFamily: e.label.style.fontFamily,
                                  fontWeight: e.label.style.fontWeight,
                                  foreColor: e.label.style.color,
                                  cssClass: "apexcharts-yaxis-annotation-label ".concat(e.label.style.cssClass, " ").concat(e.id ? e.id : "")
                              });
                          d.attr({
                              rel: i
                          }), t.appendChild(d.node)
                      }
                  }, {
                      key: "_getY1Y2",
                      value: function(e, t) {
                          var i, n = "y1" === e ? t.y : t.y2,
                              a = this.w;
                          if (this.annoCtx.invertAxis) {
                              var r = a.globals.labels.indexOf(n);
                              a.config.xaxis.convertedCatToNumeric && (r = a.globals.categoryLabels.indexOf(n));
                              var s = a.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r + 1) + ")");
                              s && (i = parseFloat(s.getAttribute("y")))
                          } else {
                              var o;
                              o = a.config.yaxis[t.yAxisIndex].logarithmic ? (n = new T(this.annoCtx.ctx).getLogVal(n, t.yAxisIndex)) / a.globals.yLogRatio[t.yAxisIndex] : (n - a.globals.minYArr[t.yAxisIndex]) / (a.globals.yRange[t.yAxisIndex] / a.globals.gridHeight), i = a.globals.gridHeight - o, a.config.yaxis[t.yAxisIndex] && a.config.yaxis[t.yAxisIndex].reversed && (i = o)
                          }
                          return i
                      }
                  }, {
                      key: "_getYAxisAnnotationWidth",
                      value: function(e) {
                          var t = this.w;
                          return t.globals.gridWidth, (e.width.indexOf("%") > -1 ? t.globals.gridWidth * parseInt(e.width, 10) / 100 : parseInt(e.width, 10)) + e.offsetX
                      }
                  }, {
                      key: "drawYAxisAnnotations",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = this.annoCtx.graphics.group({
                                  class: "apexcharts-yaxis-annotations"
                              });
                          return t.config.annotations.yaxis.map((function(t, n) {
                              e.addYaxisAnnotation(t, i.node, n)
                          })), i
                      }
                  }]), e
              }(),
              L = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.annoCtx = t
                  }
                  return c(e, [{
                      key: "addPointAnnotation",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = 0,
                              r = 0,
                              s = 0;
                          this.annoCtx.invertAxis && console.warn("Point annotation is not supported in horizontal bar charts.");
                          var o = parseFloat(e.y);
                          if ("string" == typeof e.x || "category" === n.config.xaxis.type || n.config.xaxis.convertedCatToNumeric) {
                              var l = n.globals.labels.indexOf(e.x);
                              n.config.xaxis.convertedCatToNumeric && (l = n.globals.categoryLabels.indexOf(e.x)), a = this.annoCtx.helpers.getStringX(e.x), null === e.y && (o = n.globals.series[e.seriesIndex][l])
                          } else a = (e.x - n.globals.minX) / (n.globals.xRange / n.globals.gridWidth);
                          for (var c, h = [], u = 0, d = 0; d <= e.seriesIndex; d++) {
                              var f = n.config.yaxis[d].seriesName;
                              if (f)
                                  for (var p = d + 1; p <= e.seriesIndex; p++) n.config.yaxis[p].seriesName === f && -1 === h.indexOf(f) && (u++, h.push(f))
                          }
                          if (n.config.yaxis[e.yAxisIndex].logarithmic) c = (o = new T(this.annoCtx.ctx).getLogVal(o, e.yAxisIndex)) / n.globals.yLogRatio[e.yAxisIndex];
                          else {
                              var g = e.yAxisIndex + u;
                              c = (o - n.globals.minYArr[g]) / (n.globals.yRange[g] / n.globals.gridHeight)
                          }
                          if (r = n.globals.gridHeight - c - parseFloat(e.label.style.fontSize) - e.marker.size, s = n.globals.gridHeight - c, n.config.yaxis[e.yAxisIndex] && n.config.yaxis[e.yAxisIndex].reversed && (r = c + parseFloat(e.label.style.fontSize) + e.marker.size, s = c), y.isNumber(a)) {
                              var x = {
                                      pSize: e.marker.size,
                                      pointStrokeWidth: e.marker.strokeWidth,
                                      pointFillColor: e.marker.fillColor,
                                      pointStrokeColor: e.marker.strokeColor,
                                      shape: e.marker.shape,
                                      pRadius: e.marker.radius,
                                      class: "apexcharts-point-annotation-marker ".concat(e.marker.cssClass, " ").concat(e.id ? e.id : "")
                                  },
                                  v = this.annoCtx.graphics.drawMarker(a + e.marker.offsetX, s + e.marker.offsetY, x);
                              t.appendChild(v.node);
                              var m = e.label.text ? e.label.text : "",
                                  b = this.annoCtx.graphics.drawText({
                                      x: a + e.label.offsetX,
                                      y: r + e.label.offsetY,
                                      text: m,
                                      textAnchor: e.label.textAnchor,
                                      fontSize: e.label.style.fontSize,
                                      fontFamily: e.label.style.fontFamily,
                                      fontWeight: e.label.style.fontWeight,
                                      foreColor: e.label.style.color,
                                      cssClass: "apexcharts-point-annotation-label ".concat(e.label.style.cssClass, " ").concat(e.id ? e.id : "")
                                  });
                              if (b.attr({
                                      rel: i
                                  }), t.appendChild(b.node), e.customSVG.SVG) {
                                  var w = this.annoCtx.graphics.group({
                                      class: "apexcharts-point-annotations-custom-svg " + e.customSVG.cssClass
                                  });
                                  w.attr({
                                      transform: "translate(".concat(a + e.customSVG.offsetX, ", ").concat(r + e.customSVG.offsetY, ")")
                                  }), w.node.innerHTML = e.customSVG.SVG, t.appendChild(w.node)
                              }
                              if (e.image.path) {
                                  var k = e.image.width ? e.image.width : 20,
                                      S = e.image.height ? e.image.height : 20;
                                  v = this.annoCtx.addImage({
                                      x: a + e.image.offsetX - k / 2,
                                      y: r + e.image.offsetY - S / 2,
                                      width: k,
                                      height: S,
                                      path: e.image.path,
                                      appendTo: ".apexcharts-point-annotations"
                                  })
                              }
                              e.mouseEnter && v.node.addEventListener("mouseenter", e.mouseEnter.bind(this, e)), e.mouseLeave && v.node.addEventListener("mouseleave", e.mouseLeave.bind(this, e))
                          }
                      }
                  }, {
                      key: "drawPointAnnotations",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = this.annoCtx.graphics.group({
                                  class: "apexcharts-point-annotations"
                              });
                          return t.config.annotations.points.map((function(t, n) {
                              e.addPointAnnotation(t, i.node, n)
                          })), i
                      }
                  }]), e
              }(),
              P = {
                  name: "en",
                  options: {
                      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                      toolbar: {
                          exportToSVG: "Download SVG",
                          exportToPNG: "Download PNG",
                          exportToCSV: "Download CSV",
                          menu: "Menu",
                          selection: "Selection",
                          selectionZoom: "Selection Zoom",
                          zoomIn: "Zoom In",
                          zoomOut: "Zoom Out",
                          pan: "Panning",
                          reset: "Reset Zoom"
                      }
                  }
              },
              M = function() {
                  function e() {
                      o(this, e), this.yAxis = {
                          show: !0,
                          showAlways: !1,
                          showForNullSeries: !0,
                          seriesName: void 0,
                          opposite: !1,
                          reversed: !1,
                          logarithmic: !1,
                          logBase: 10,
                          tickAmount: void 0,
                          forceNiceScale: !1,
                          max: void 0,
                          min: void 0,
                          floating: !1,
                          decimalsInFloat: void 0,
                          labels: {
                              show: !0,
                              minWidth: 0,
                              maxWidth: 160,
                              offsetX: 0,
                              offsetY: 0,
                              align: void 0,
                              rotate: 0,
                              padding: 20,
                              style: {
                                  colors: [],
                                  fontSize: "11px",
                                  fontWeight: 400,
                                  fontFamily: void 0,
                                  cssClass: ""
                              },
                              formatter: void 0
                          },
                          axisBorder: {
                              show: !1,
                              color: "#e0e0e0",
                              width: 1,
                              offsetX: 0,
                              offsetY: 0
                          },
                          axisTicks: {
                              show: !1,
                              color: "#e0e0e0",
                              width: 6,
                              offsetX: 0,
                              offsetY: 0
                          },
                          title: {
                              text: void 0,
                              rotate: -90,
                              offsetY: 0,
                              offsetX: 0,
                              style: {
                                  color: void 0,
                                  fontSize: "11px",
                                  fontWeight: 900,
                                  fontFamily: void 0,
                                  cssClass: ""
                              }
                          },
                          tooltip: {
                              enabled: !1,
                              offsetX: 0
                          },
                          crosshairs: {
                              show: !0,
                              position: "front",
                              stroke: {
                                  color: "#b6b6b6",
                                  width: 1,
                                  dashArray: 0
                              }
                          }
                      }, this.pointAnnotation = {
                          id: void 0,
                          x: 0,
                          y: null,
                          yAxisIndex: 0,
                          seriesIndex: 0,
                          mouseEnter: void 0,
                          mouseLeave: void 0,
                          marker: {
                              size: 4,
                              fillColor: "#fff",
                              strokeWidth: 2,
                              strokeColor: "#333",
                              shape: "circle",
                              offsetX: 0,
                              offsetY: 0,
                              radius: 2,
                              cssClass: ""
                          },
                          label: {
                              borderColor: "#c2c2c2",
                              borderWidth: 1,
                              borderRadius: 2,
                              text: void 0,
                              textAnchor: "middle",
                              offsetX: 0,
                              offsetY: 0,
                              mouseEnter: void 0,
                              mouseLeave: void 0,
                              style: {
                                  background: "#fff",
                                  color: void 0,
                                  fontSize: "11px",
                                  fontFamily: void 0,
                                  fontWeight: 400,
                                  cssClass: "",
                                  padding: {
                                      left: 5,
                                      right: 5,
                                      top: 2,
                                      bottom: 2
                                  }
                              }
                          },
                          customSVG: {
                              SVG: void 0,
                              cssClass: void 0,
                              offsetX: 0,
                              offsetY: 0
                          },
                          image: {
                              path: void 0,
                              width: 20,
                              height: 20,
                              offsetX: 0,
                              offsetY: 0
                          }
                      }, this.yAxisAnnotation = {
                          id: void 0,
                          y: 0,
                          y2: null,
                          strokeDashArray: 1,
                          fillColor: "#c2c2c2",
                          borderColor: "#c2c2c2",
                          borderWidth: 1,
                          opacity: .3,
                          offsetX: 0,
                          offsetY: 0,
                          width: "100%",
                          yAxisIndex: 0,
                          label: {
                              borderColor: "#c2c2c2",
                              borderWidth: 1,
                              borderRadius: 2,
                              text: void 0,
                              textAnchor: "end",
                              position: "right",
                              offsetX: 0,
                              offsetY: -3,
                              mouseEnter: void 0,
                              mouseLeave: void 0,
                              style: {
                                  background: "#fff",
                                  color: void 0,
                                  fontSize: "11px",
                                  fontFamily: void 0,
                                  fontWeight: 400,
                                  cssClass: "",
                                  padding: {
                                      left: 5,
                                      right: 5,
                                      top: 2,
                                      bottom: 2
                                  }
                              }
                          }
                      }, this.xAxisAnnotation = {
                          id: void 0,
                          x: 0,
                          x2: null,
                          strokeDashArray: 1,
                          fillColor: "#c2c2c2",
                          borderColor: "#c2c2c2",
                          borderWidth: 1,
                          opacity: .3,
                          offsetX: 0,
                          offsetY: 0,
                          label: {
                              borderColor: "#c2c2c2",
                              borderWidth: 1,
                              borderRadius: 2,
                              text: void 0,
                              textAnchor: "middle",
                              orientation: "vertical",
                              position: "top",
                              offsetX: 0,
                              offsetY: 0,
                              mouseEnter: void 0,
                              mouseLeave: void 0,
                              style: {
                                  background: "#fff",
                                  color: void 0,
                                  fontSize: "11px",
                                  fontFamily: void 0,
                                  fontWeight: 400,
                                  cssClass: "",
                                  padding: {
                                      left: 5,
                                      right: 5,
                                      top: 2,
                                      bottom: 2
                                  }
                              }
                          }
                      }, this.text = {
                          x: 0,
                          y: 0,
                          text: "",
                          textAnchor: "start",
                          foreColor: void 0,
                          fontSize: "13px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          appendTo: ".apexcharts-annotations",
                          backgroundColor: "transparent",
                          borderColor: "#c2c2c2",
                          borderRadius: 0,
                          borderWidth: 0,
                          paddingLeft: 4,
                          paddingRight: 4,
                          paddingTop: 2,
                          paddingBottom: 2
                      }
                  }
                  return c(e, [{
                      key: "init",
                      value: function() {
                          return {
                              annotations: {
                                  position: "front",
                                  yaxis: [this.yAxisAnnotation],
                                  xaxis: [this.xAxisAnnotation],
                                  points: [this.pointAnnotation],
                                  texts: [],
                                  images: [],
                                  shapes: []
                              },
                              chart: {
                                  animations: {
                                      enabled: !0,
                                      easing: "easeinout",
                                      speed: 800,
                                      animateGradually: {
                                          delay: 150,
                                          enabled: !0
                                      },
                                      dynamicAnimation: {
                                          enabled: !0,
                                          speed: 350
                                      }
                                  },
                                  background: "transparent",
                                  locales: [P],
                                  defaultLocale: "en",
                                  dropShadow: {
                                      enabled: !1,
                                      enabledOnSeries: void 0,
                                      top: 2,
                                      left: 2,
                                      blur: 4,
                                      color: "#000",
                                      opacity: .35
                                  },
                                  events: {
                                      animationEnd: void 0,
                                      beforeMount: void 0,
                                      mounted: void 0,
                                      updated: void 0,
                                      click: void 0,
                                      mouseMove: void 0,
                                      mouseLeave: void 0,
                                      legendClick: void 0,
                                      markerClick: void 0,
                                      selection: void 0,
                                      dataPointSelection: void 0,
                                      dataPointMouseEnter: void 0,
                                      dataPointMouseLeave: void 0,
                                      beforeZoom: void 0,
                                      beforeResetZoom: void 0,
                                      zoomed: void 0,
                                      scrolled: void 0,
                                      brushScrolled: void 0
                                  },
                                  foreColor: "#373d3f",
                                  fontFamily: "Helvetica, Arial, sans-serif",
                                  height: "auto",
                                  parentHeightOffset: 15,
                                  redrawOnParentResize: !0,
                                  redrawOnWindowResize: !0,
                                  id: void 0,
                                  group: void 0,
                                  offsetX: 0,
                                  offsetY: 0,
                                  selection: {
                                      enabled: !1,
                                      type: "x",
                                      fill: {
                                          color: "#24292e",
                                          opacity: .1
                                      },
                                      stroke: {
                                          width: 1,
                                          color: "#24292e",
                                          opacity: .4,
                                          dashArray: 3
                                      },
                                      xaxis: {
                                          min: void 0,
                                          max: void 0
                                      },
                                      yaxis: {
                                          min: void 0,
                                          max: void 0
                                      }
                                  },
                                  sparkline: {
                                      enabled: !1
                                  },
                                  brush: {
                                      enabled: !1,
                                      autoScaleYaxis: !0,
                                      target: void 0
                                  },
                                  stacked: !1,
                                  stackType: "normal",
                                  toolbar: {
                                      show: !0,
                                      offsetX: 0,
                                      offsetY: 0,
                                      tools: {
                                          download: !0,
                                          selection: !0,
                                          zoom: !0,
                                          zoomin: !0,
                                          zoomout: !0,
                                          pan: !0,
                                          reset: !0,
                                          customIcons: []
                                      },
                                      export: {
                                          csv: {
                                              filename: void 0,
                                              columnDelimiter: ",",
                                              headerCategory: "category",
                                              headerValue: "value",
                                              dateFormatter: function(e) {
                                                  return new Date(e).toDateString()
                                              }
                                          },
                                          png: {
                                              filename: void 0
                                          },
                                          svg: {
                                              filename: void 0
                                          }
                                      },
                                      autoSelected: "zoom"
                                  },
                                  type: "line",
                                  width: "100%",
                                  zoom: {
                                      enabled: !0,
                                      type: "x",
                                      autoScaleYaxis: !1,
                                      zoomedArea: {
                                          fill: {
                                              color: "#90CAF9",
                                              opacity: .4
                                          },
                                          stroke: {
                                              color: "#0D47A1",
                                              opacity: .4,
                                              width: 1
                                          }
                                      }
                                  }
                              },
                              plotOptions: {
                                  area: {
                                      fillTo: "origin"
                                  },
                                  bar: {
                                      horizontal: !1,
                                      columnWidth: "70%",
                                      barHeight: "70%",
                                      distributed: !1,
                                      borderRadius: 0,
                                      rangeBarOverlap: !0,
                                      rangeBarGroupRows: !1,
                                      colors: {
                                          ranges: [],
                                          backgroundBarColors: [],
                                          backgroundBarOpacity: 1,
                                          backgroundBarRadius: 0
                                      },
                                      dataLabels: {
                                          position: "top",
                                          maxItems: 100,
                                          hideOverflowingLabels: !0,
                                          orientation: "horizontal"
                                      }
                                  },
                                  bubble: {
                                      minBubbleRadius: void 0,
                                      maxBubbleRadius: void 0
                                  },
                                  candlestick: {
                                      colors: {
                                          upward: "#00B746",
                                          downward: "#EF403C"
                                      },
                                      wick: {
                                          useFillColor: !0
                                      }
                                  },
                                  boxPlot: {
                                      colors: {
                                          upper: "#00E396",
                                          lower: "#008FFB"
                                      }
                                  },
                                  heatmap: {
                                      radius: 2,
                                      enableShades: !0,
                                      shadeIntensity: .5,
                                      reverseNegativeShade: !1,
                                      distributed: !1,
                                      useFillColorAsStroke: !1,
                                      colorScale: {
                                          inverse: !1,
                                          ranges: [],
                                          min: void 0,
                                          max: void 0
                                      }
                                  },
                                  treemap: {
                                      enableShades: !0,
                                      shadeIntensity: .5,
                                      distributed: !1,
                                      reverseNegativeShade: !1,
                                      useFillColorAsStroke: !1,
                                      colorScale: {
                                          inverse: !1,
                                          ranges: [],
                                          min: void 0,
                                          max: void 0
                                      }
                                  },
                                  radialBar: {
                                      inverseOrder: !1,
                                      startAngle: 0,
                                      endAngle: 360,
                                      offsetX: 0,
                                      offsetY: 0,
                                      hollow: {
                                          margin: 5,
                                          size: "50%",
                                          background: "transparent",
                                          image: void 0,
                                          imageWidth: 150,
                                          imageHeight: 150,
                                          imageOffsetX: 0,
                                          imageOffsetY: 0,
                                          imageClipped: !0,
                                          position: "front",
                                          dropShadow: {
                                              enabled: !1,
                                              top: 0,
                                              left: 0,
                                              blur: 3,
                                              color: "#000",
                                              opacity: .5
                                          }
                                      },
                                      track: {
                                          show: !0,
                                          startAngle: void 0,
                                          endAngle: void 0,
                                          background: "#f2f2f2",
                                          strokeWidth: "97%",
                                          opacity: 1,
                                          margin: 5,
                                          dropShadow: {
                                              enabled: !1,
                                              top: 0,
                                              left: 0,
                                              blur: 3,
                                              color: "#000",
                                              opacity: .5
                                          }
                                      },
                                      dataLabels: {
                                          show: !0,
                                          name: {
                                              show: !0,
                                              fontSize: "16px",
                                              fontFamily: void 0,
                                              fontWeight: 600,
                                              color: void 0,
                                              offsetY: 0,
                                              formatter: function(e) {
                                                  return e
                                              }
                                          },
                                          value: {
                                              show: !0,
                                              fontSize: "14px",
                                              fontFamily: void 0,
                                              fontWeight: 400,
                                              color: void 0,
                                              offsetY: 16,
                                              formatter: function(e) {
                                                  return e + "%"
                                              }
                                          },
                                          total: {
                                              show: !1,
                                              label: "Total",
                                              fontSize: "16px",
                                              fontWeight: 600,
                                              fontFamily: void 0,
                                              color: void 0,
                                              formatter: function(e) {
                                                  return e.globals.seriesTotals.reduce((function(e, t) {
                                                      return e + t
                                                  }), 0) / e.globals.series.length + "%"
                                              }
                                          }
                                      }
                                  },
                                  pie: {
                                      customScale: 1,
                                      offsetX: 0,
                                      offsetY: 0,
                                      startAngle: 0,
                                      endAngle: 360,
                                      expandOnClick: !0,
                                      dataLabels: {
                                          offset: 0,
                                          minAngleToShowLabel: 10
                                      },
                                      donut: {
                                          size: "65%",
                                          background: "transparent",
                                          labels: {
                                              show: !1,
                                              name: {
                                                  show: !0,
                                                  fontSize: "16px",
                                                  fontFamily: void 0,
                                                  fontWeight: 600,
                                                  color: void 0,
                                                  offsetY: -10,
                                                  formatter: function(e) {
                                                      return e
                                                  }
                                              },
                                              value: {
                                                  show: !0,
                                                  fontSize: "20px",
                                                  fontFamily: void 0,
                                                  fontWeight: 400,
                                                  color: void 0,
                                                  offsetY: 10,
                                                  formatter: function(e) {
                                                      return e
                                                  }
                                              },
                                              total: {
                                                  show: !1,
                                                  showAlways: !1,
                                                  label: "Total",
                                                  fontSize: "16px",
                                                  fontWeight: 400,
                                                  fontFamily: void 0,
                                                  color: void 0,
                                                  formatter: function(e) {
                                                      return e.globals.seriesTotals.reduce((function(e, t) {
                                                          return e + t
                                                      }), 0)
                                                  }
                                              }
                                          }
                                      }
                                  },
                                  polarArea: {
                                      rings: {
                                          strokeWidth: 1,
                                          strokeColor: "#e8e8e8"
                                      },
                                      spokes: {
                                          strokeWidth: 1,
                                          connectorColors: "#e8e8e8"
                                      }
                                  },
                                  radar: {
                                      size: void 0,
                                      offsetX: 0,
                                      offsetY: 0,
                                      polygons: {
                                          strokeWidth: 1,
                                          strokeColors: "#e8e8e8",
                                          connectorColors: "#e8e8e8",
                                          fill: {
                                              colors: void 0
                                          }
                                      }
                                  }
                              },
                              colors: void 0,
                              dataLabels: {
                                  enabled: !0,
                                  enabledOnSeries: void 0,
                                  formatter: function(e) {
                                      return null !== e ? e : ""
                                  },
                                  textAnchor: "middle",
                                  distributed: !1,
                                  offsetX: 0,
                                  offsetY: 0,
                                  style: {
                                      fontSize: "12px",
                                      fontFamily: void 0,
                                      fontWeight: 600,
                                      colors: void 0
                                  },
                                  background: {
                                      enabled: !0,
                                      foreColor: "#fff",
                                      borderRadius: 2,
                                      padding: 4,
                                      opacity: .9,
                                      borderWidth: 1,
                                      borderColor: "#fff",
                                      dropShadow: {
                                          enabled: !1,
                                          top: 1,
                                          left: 1,
                                          blur: 1,
                                          color: "#000",
                                          opacity: .45
                                      }
                                  },
                                  dropShadow: {
                                      enabled: !1,
                                      top: 1,
                                      left: 1,
                                      blur: 1,
                                      color: "#000",
                                      opacity: .45
                                  }
                              },
                              fill: {
                                  type: "solid",
                                  colors: void 0,
                                  opacity: .85,
                                  gradient: {
                                      shade: "dark",
                                      type: "horizontal",
                                      shadeIntensity: .5,
                                      gradientToColors: void 0,
                                      inverseColors: !0,
                                      opacityFrom: 1,
                                      opacityTo: 1,
                                      stops: [0, 50, 100],
                                      colorStops: []
                                  },
                                  image: {
                                      src: [],
                                      width: void 0,
                                      height: void 0
                                  },
                                  pattern: {
                                      style: "squares",
                                      width: 6,
                                      height: 6,
                                      strokeWidth: 2
                                  }
                              },
                              forecastDataPoints: {
                                  count: 0,
                                  fillOpacity: .5,
                                  strokeWidth: void 0,
                                  dashArray: 4
                              },
                              grid: {
                                  show: !0,
                                  borderColor: "#e0e0e0",
                                  strokeDashArray: 0,
                                  position: "back",
                                  xaxis: {
                                      lines: {
                                          show: !1
                                      }
                                  },
                                  yaxis: {
                                      lines: {
                                          show: !0
                                      }
                                  },
                                  row: {
                                      colors: void 0,
                                      opacity: .5
                                  },
                                  column: {
                                      colors: void 0,
                                      opacity: .5
                                  },
                                  padding: {
                                      top: 0,
                                      right: 10,
                                      bottom: 0,
                                      left: 12
                                  }
                              },
                              labels: [],
                              legend: {
                                  show: !0,
                                  showForSingleSeries: !1,
                                  showForNullSeries: !0,
                                  showForZeroSeries: !0,
                                  floating: !1,
                                  position: "bottom",
                                  horizontalAlign: "center",
                                  inverseOrder: !1,
                                  fontSize: "12px",
                                  fontFamily: void 0,
                                  fontWeight: 400,
                                  width: void 0,
                                  height: void 0,
                                  formatter: void 0,
                                  tooltipHoverFormatter: void 0,
                                  offsetX: -20,
                                  offsetY: 4,
                                  customLegendItems: [],
                                  labels: {
                                      colors: void 0,
                                      useSeriesColors: !1
                                  },
                                  markers: {
                                      width: 12,
                                      height: 12,
                                      strokeWidth: 0,
                                      fillColors: void 0,
                                      strokeColor: "#fff",
                                      radius: 12,
                                      customHTML: void 0,
                                      offsetX: 0,
                                      offsetY: 0,
                                      onClick: void 0
                                  },
                                  itemMargin: {
                                      horizontal: 5,
                                      vertical: 2
                                  },
                                  onItemClick: {
                                      toggleDataSeries: !0
                                  },
                                  onItemHover: {
                                      highlightDataSeries: !0
                                  }
                              },
                              markers: {
                                  discrete: [],
                                  size: 0,
                                  colors: void 0,
                                  strokeColors: "#fff",
                                  strokeWidth: 2,
                                  strokeOpacity: .9,
                                  strokeDashArray: 0,
                                  fillOpacity: 1,
                                  shape: "circle",
                                  width: 8,
                                  height: 8,
                                  radius: 2,
                                  offsetX: 0,
                                  offsetY: 0,
                                  onClick: void 0,
                                  onDblClick: void 0,
                                  showNullDataPoints: !0,
                                  hover: {
                                      size: void 0,
                                      sizeOffset: 3
                                  }
                              },
                              noData: {
                                  text: void 0,
                                  align: "center",
                                  verticalAlign: "middle",
                                  offsetX: 0,
                                  offsetY: 0,
                                  style: {
                                      color: void 0,
                                      fontSize: "14px",
                                      fontFamily: void 0
                                  }
                              },
                              responsive: [],
                              series: void 0,
                              states: {
                                  normal: {
                                      filter: {
                                          type: "none",
                                          value: 0
                                      }
                                  },
                                  hover: {
                                      filter: {
                                          type: "lighten",
                                          value: .1
                                      }
                                  },
                                  active: {
                                      allowMultipleDataPointsSelection: !1,
                                      filter: {
                                          type: "darken",
                                          value: .5
                                      }
                                  }
                              },
                              title: {
                                  text: void 0,
                                  align: "left",
                                  margin: 5,
                                  offsetX: 0,
                                  offsetY: 0,
                                  floating: !1,
                                  style: {
                                      fontSize: "14px",
                                      fontWeight: 900,
                                      fontFamily: void 0,
                                      color: void 0
                                  }
                              },
                              subtitle: {
                                  text: void 0,
                                  align: "left",
                                  margin: 5,
                                  offsetX: 0,
                                  offsetY: 30,
                                  floating: !1,
                                  style: {
                                      fontSize: "12px",
                                      fontWeight: 400,
                                      fontFamily: void 0,
                                      color: void 0
                                  }
                              },
                              stroke: {
                                  show: !0,
                                  curve: "smooth",
                                  lineCap: "butt",
                                  width: 2,
                                  colors: void 0,
                                  dashArray: 0
                              },
                              tooltip: {
                                  enabled: !0,
                                  enabledOnSeries: void 0,
                                  shared: !0,
                                  followCursor: !1,
                                  intersect: !1,
                                  inverseOrder: !1,
                                  custom: void 0,
                                  fillSeriesColor: !1,
                                  theme: "light",
                                  style: {
                                      fontSize: "12px",
                                      fontFamily: void 0
                                  },
                                  onDatasetHover: {
                                      highlightDataSeries: !1
                                  },
                                  x: {
                                      show: !0,
                                      format: "dd MMM",
                                      formatter: void 0
                                  },
                                  y: {
                                      formatter: void 0,
                                      title: {
                                          formatter: function(e) {
                                              return e ? e + ": " : ""
                                          }
                                      }
                                  },
                                  z: {
                                      formatter: void 0,
                                      title: "Size: "
                                  },
                                  marker: {
                                      show: !0,
                                      fillColors: void 0
                                  },
                                  items: {
                                      display: "flex"
                                  },
                                  fixed: {
                                      enabled: !1,
                                      position: "topRight",
                                      offsetX: 0,
                                      offsetY: 0
                                  }
                              },
                              xaxis: {
                                  type: "category",
                                  categories: [],
                                  convertedCatToNumeric: !1,
                                  offsetX: 0,
                                  offsetY: 0,
                                  overwriteCategories: void 0,
                                  labels: {
                                      show: !0,
                                      rotate: -45,
                                      rotateAlways: !1,
                                      hideOverlappingLabels: !0,
                                      trim: !1,
                                      minHeight: void 0,
                                      maxHeight: 120,
                                      showDuplicates: !0,
                                      style: {
                                          colors: [],
                                          fontSize: "12px",
                                          fontWeight: 400,
                                          fontFamily: void 0,
                                          cssClass: ""
                                      },
                                      offsetX: 0,
                                      offsetY: 0,
                                      format: void 0,
                                      formatter: void 0,
                                      datetimeUTC: !0,
                                      datetimeFormatter: {
                                          year: "yyyy",
                                          month: "MMM 'yy",
                                          day: "dd MMM",
                                          hour: "HH:mm",
                                          minute: "HH:mm:ss",
                                          second: "HH:mm:ss"
                                      }
                                  },
                                  axisBorder: {
                                      show: !0,
                                      color: "#e0e0e0",
                                      width: "100%",
                                      height: 1,
                                      offsetX: 0,
                                      offsetY: 0
                                  },
                                  axisTicks: {
                                      show: !0,
                                      color: "#e0e0e0",
                                      height: 6,
                                      offsetX: 0,
                                      offsetY: 0
                                  },
                                  tickAmount: void 0,
                                  tickPlacement: "on",
                                  min: void 0,
                                  max: void 0,
                                  range: void 0,
                                  floating: !1,
                                  decimalsInFloat: void 0,
                                  position: "bottom",
                                  title: {
                                      text: void 0,
                                      offsetX: 0,
                                      offsetY: 0,
                                      style: {
                                          color: void 0,
                                          fontSize: "12px",
                                          fontWeight: 900,
                                          fontFamily: void 0,
                                          cssClass: ""
                                      }
                                  },
                                  crosshairs: {
                                      show: !0,
                                      width: 1,
                                      position: "back",
                                      opacity: .9,
                                      stroke: {
                                          color: "#b6b6b6",
                                          width: 1,
                                          dashArray: 3
                                      },
                                      fill: {
                                          type: "solid",
                                          color: "#B1B9C4",
                                          gradient: {
                                              colorFrom: "#D8E3F0",
                                              colorTo: "#BED1E6",
                                              stops: [0, 100],
                                              opacityFrom: .4,
                                              opacityTo: .5
                                          }
                                      },
                                      dropShadow: {
                                          enabled: !1,
                                          left: 0,
                                          top: 0,
                                          blur: 1,
                                          opacity: .4
                                      }
                                  },
                                  tooltip: {
                                      enabled: !0,
                                      offsetY: 0,
                                      formatter: void 0,
                                      style: {
                                          fontSize: "12px",
                                          fontFamily: void 0
                                      }
                                  }
                              },
                              yaxis: this.yAxis,
                              theme: {
                                  mode: "light",
                                  palette: "palette1",
                                  monochrome: {
                                      enabled: !1,
                                      color: "#008FFB",
                                      shadeTo: "light",
                                      shadeIntensity: .65
                                  }
                              }
                          }
                      }
                  }]), e
              }(),
              I = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.graphics = new S(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new A(this), this.xAxisAnnotations = new C(this), this.yAxisAnnotations = new E(this), this.pointsAnnotations = new L(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints
                  }
                  return c(e, [{
                      key: "drawAxesAnnotations",
                      value: function() {
                          var e = this.w;
                          if (e.globals.axisCharts) {
                              for (var t = this.yAxisAnnotations.drawYAxisAnnotations(), i = this.xAxisAnnotations.drawXAxisAnnotations(), n = this.pointsAnnotations.drawPointAnnotations(), a = e.config.chart.animations.enabled, r = [t, i, n], s = [i.node, t.node, n.node], o = 0; o < 3; o++) e.globals.dom.elGraphical.add(r[o]), !a || e.globals.resized || e.globals.dataChanged || "scatter" !== e.config.chart.type && "bubble" !== e.config.chart.type && e.globals.dataPoints > 1 && s[o].classList.add("apexcharts-element-hidden"), e.globals.delayedElements.push({
                                  el: s[o],
                                  index: 0
                              });
                              this.helpers.annotationsBackground()
                          }
                      }
                  }, {
                      key: "drawImageAnnos",
                      value: function() {
                          var e = this;
                          this.w.config.annotations.images.map((function(t, i) {
                              e.addImage(t, i)
                          }))
                      }
                  }, {
                      key: "drawTextAnnos",
                      value: function() {
                          var e = this;
                          this.w.config.annotations.texts.map((function(t, i) {
                              e.addText(t, i)
                          }))
                      }
                  }, {
                      key: "addXaxisAnnotation",
                      value: function(e, t, i) {
                          this.xAxisAnnotations.addXaxisAnnotation(e, t, i)
                      }
                  }, {
                      key: "addYaxisAnnotation",
                      value: function(e, t, i) {
                          this.yAxisAnnotations.addYaxisAnnotation(e, t, i)
                      }
                  }, {
                      key: "addPointAnnotation",
                      value: function(e, t, i) {
                          this.pointsAnnotations.addPointAnnotation(e, t, i)
                      }
                  }, {
                      key: "addText",
                      value: function(e, t) {
                          var i = e.x,
                              n = e.y,
                              a = e.text,
                              r = e.textAnchor,
                              s = e.foreColor,
                              o = e.fontSize,
                              l = e.fontFamily,
                              c = e.fontWeight,
                              h = e.cssClass,
                              u = e.backgroundColor,
                              d = e.borderWidth,
                              f = e.strokeDashArray,
                              p = e.borderRadius,
                              g = e.borderColor,
                              x = e.appendTo,
                              v = void 0 === x ? ".apexcharts-annotations" : x,
                              m = e.paddingLeft,
                              b = void 0 === m ? 4 : m,
                              y = e.paddingRight,
                              w = void 0 === y ? 4 : y,
                              k = e.paddingBottom,
                              S = void 0 === k ? 2 : k,
                              A = e.paddingTop,
                              C = void 0 === A ? 2 : A,
                              T = this.w,
                              E = this.graphics.drawText({
                                  x: i,
                                  y: n,
                                  text: a,
                                  textAnchor: r || "start",
                                  fontSize: o || "12px",
                                  fontWeight: c || "regular",
                                  fontFamily: l || T.config.chart.fontFamily,
                                  foreColor: s || T.config.chart.foreColor,
                                  cssClass: h
                              }),
                              L = T.globals.dom.baseEl.querySelector(v);
                          L && L.appendChild(E.node);
                          var P = E.bbox();
                          if (a) {
                              var M = this.graphics.drawRect(P.x - b, P.y - C, P.width + b + w, P.height + S + C, p, u || "transparent", 1, d, g, f);
                              L.insertBefore(M.node, E.node)
                          }
                      }
                  }, {
                      key: "addImage",
                      value: function(e, t) {
                          var i = this.w,
                              n = e.path,
                              a = e.x,
                              r = void 0 === a ? 0 : a,
                              s = e.y,
                              o = void 0 === s ? 0 : s,
                              l = e.width,
                              c = void 0 === l ? 20 : l,
                              h = e.height,
                              u = void 0 === h ? 20 : h,
                              d = e.appendTo,
                              f = void 0 === d ? ".apexcharts-annotations" : d,
                              p = i.globals.dom.Paper.image(n);
                          p.size(c, u).move(r, o);
                          var g = i.globals.dom.baseEl.querySelector(f);
                          return g && g.appendChild(p.node), p
                      }
                  }, {
                      key: "addXaxisAnnotationExternal",
                      value: function(e, t, i) {
                          return this.addAnnotationExternal({
                              params: e,
                              pushToMemory: t,
                              context: i,
                              type: "xaxis",
                              contextMethod: i.addXaxisAnnotation
                          }), i
                      }
                  }, {
                      key: "addYaxisAnnotationExternal",
                      value: function(e, t, i) {
                          return this.addAnnotationExternal({
                              params: e,
                              pushToMemory: t,
                              context: i,
                              type: "yaxis",
                              contextMethod: i.addYaxisAnnotation
                          }), i
                      }
                  }, {
                      key: "addPointAnnotationExternal",
                      value: function(e, t, i) {
                          return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
                              params: e,
                              pushToMemory: t,
                              context: i,
                              type: "point",
                              contextMethod: i.addPointAnnotation
                          }), i
                      }
                  }, {
                      key: "addAnnotationExternal",
                      value: function(e) {
                          var t = e.params,
                              i = e.pushToMemory,
                              n = e.context,
                              a = e.type,
                              r = e.contextMethod,
                              s = n,
                              o = s.w,
                              l = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations")),
                              c = l.childNodes.length + 1,
                              h = new M,
                              u = Object.assign({}, "xaxis" === a ? h.xAxisAnnotation : "yaxis" === a ? h.yAxisAnnotation : h.pointAnnotation),
                              d = y.extend(u, t);
                          switch (a) {
                              case "xaxis":
                                  this.addXaxisAnnotation(d, l, c);
                                  break;
                              case "yaxis":
                                  this.addYaxisAnnotation(d, l, c);
                                  break;
                              case "point":
                                  this.addPointAnnotation(d, l, c)
                          }
                          var f = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations .apexcharts-").concat(a, "-annotation-label[rel='").concat(c, "']")),
                              p = this.helpers.addBackgroundToAnno(f, d);
                          return p && l.insertBefore(p.node, f), i && o.globals.memory.methodsToExec.push({
                              context: s,
                              id: d.id ? d.id : y.randomId(),
                              method: r,
                              label: "addAnnotation",
                              params: t
                          }), n
                      }
                  }, {
                      key: "clearAnnotations",
                      value: function(e) {
                          var t = e.w,
                              i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
                          t.globals.memory.methodsToExec.map((function(e, i) {
                              "addText" !== e.label && "addAnnotation" !== e.label || t.globals.memory.methodsToExec.splice(i, 1)
                          })), i = y.listToArray(i), Array.prototype.forEach.call(i, (function(e) {
                              for (; e.firstChild;) e.removeChild(e.firstChild)
                          }))
                      }
                  }, {
                      key: "removeAnnotation",
                      value: function(e, t) {
                          var i = e.w,
                              n = i.globals.dom.baseEl.querySelectorAll(".".concat(t));
                          n && (i.globals.memory.methodsToExec.map((function(e, n) {
                              e.id === t && i.globals.memory.methodsToExec.splice(n, 1)
                          })), Array.prototype.forEach.call(n, (function(e) {
                              e.parentElement.removeChild(e)
                          })))
                      }
                  }]), e
              }(),
              R = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.opts = null, this.seriesIndex = 0
                  }
                  return c(e, [{
                      key: "clippedImgArea",
                      value: function(e) {
                          var t = this.w,
                              i = t.config,
                              n = parseInt(t.globals.gridWidth, 10),
                              a = parseInt(t.globals.gridHeight, 10),
                              r = n > a ? n : a,
                              s = e.image,
                              o = 0,
                              l = 0;
                          void 0 === e.width && void 0 === e.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (o = i.fill.image.width + 1, l = i.fill.image.height) : (o = r + 1, l = r) : (o = e.width, l = e.height);
                          var c = document.createElementNS(t.globals.SVGNS, "pattern");
                          S.setAttrs(c, {
                              id: e.patternID,
                              patternUnits: e.patternUnits ? e.patternUnits : "userSpaceOnUse",
                              width: o + "px",
                              height: l + "px"
                          });
                          var h = document.createElementNS(t.globals.SVGNS, "image");
                          c.appendChild(h), h.setAttributeNS(window.SVG.xlink, "href", s), S.setAttrs(h, {
                              x: 0,
                              y: 0,
                              preserveAspectRatio: "none",
                              width: o + "px",
                              height: l + "px"
                          }), h.style.opacity = e.opacity, t.globals.dom.elDefs.node.appendChild(c)
                      }
                  }, {
                      key: "getSeriesIndex",
                      value: function(e) {
                          var t = this.w;
                          return ("bar" === t.config.chart.type || "rangeBar" === t.config.chart.type) && t.config.plotOptions.bar.distributed || "heatmap" === t.config.chart.type || "treemap" === t.config.chart.type ? this.seriesIndex = e.seriesNumber : this.seriesIndex = e.seriesNumber % t.globals.series.length, this.seriesIndex
                      }
                  }, {
                      key: "fillPath",
                      value: function(e) {
                          var t = this.w;
                          this.opts = e;
                          var i, n, a, r = this.w.config;
                          this.seriesIndex = this.getSeriesIndex(e);
                          var s = this.getFillColors()[this.seriesIndex];
                          void 0 !== t.globals.seriesColors[this.seriesIndex] && (s = t.globals.seriesColors[this.seriesIndex]), "function" == typeof s && (s = s({
                              seriesIndex: this.seriesIndex,
                              dataPointIndex: e.dataPointIndex,
                              value: e.value,
                              w: t
                          }));
                          var o = this.getFillType(this.seriesIndex),
                              l = Array.isArray(r.fill.opacity) ? r.fill.opacity[this.seriesIndex] : r.fill.opacity;
                          e.color && (s = e.color);
                          var c = s;
                          if (-1 === s.indexOf("rgb") ? s.length < 9 && (c = y.hexToRgba(s, l)) : s.indexOf("rgba") > -1 && (l = y.getOpacityFromRGBA(s)), e.opacity && (l = e.opacity), "pattern" === o && (n = this.handlePatternFill(n, s, l, c)), "gradient" === o && (a = this.handleGradientFill(s, l, this.seriesIndex)), "image" === o) {
                              var h = r.fill.image.src,
                                  u = e.patternID ? e.patternID : "";
                              this.clippedImgArea({
                                  opacity: l,
                                  image: Array.isArray(h) ? e.seriesNumber < h.length ? h[e.seriesNumber] : h[0] : h,
                                  width: e.width ? e.width : void 0,
                                  height: e.height ? e.height : void 0,
                                  patternUnits: e.patternUnits,
                                  patternID: "pattern".concat(t.globals.cuid).concat(e.seriesNumber + 1).concat(u)
                              }), i = "url(#pattern".concat(t.globals.cuid).concat(e.seriesNumber + 1).concat(u, ")")
                          } else i = "gradient" === o ? a : "pattern" === o ? n : c;
                          return e.solid && (i = c), i
                      }
                  }, {
                      key: "getFillType",
                      value: function(e) {
                          var t = this.w;
                          return Array.isArray(t.config.fill.type) ? t.config.fill.type[e] : t.config.fill.type
                      }
                  }, {
                      key: "getFillColors",
                      value: function() {
                          var e = this.w,
                              t = e.config,
                              i = this.opts,
                              n = [];
                          return e.globals.comboCharts ? "line" === e.config.series[this.seriesIndex].type ? Array.isArray(e.globals.stroke.colors) ? n = e.globals.stroke.colors : n.push(e.globals.stroke.colors) : Array.isArray(e.globals.fill.colors) ? n = e.globals.fill.colors : n.push(e.globals.fill.colors) : "line" === t.chart.type ? Array.isArray(e.globals.stroke.colors) ? n = e.globals.stroke.colors : n.push(e.globals.stroke.colors) : Array.isArray(e.globals.fill.colors) ? n = e.globals.fill.colors : n.push(e.globals.fill.colors), void 0 !== i.fillColors && (n = [], Array.isArray(i.fillColors) ? n = i.fillColors.slice() : n.push(i.fillColors)), n
                      }
                  }, {
                      key: "handlePatternFill",
                      value: function(e, t, i, n) {
                          var a = this.w.config,
                              r = this.opts,
                              s = new S(this.ctx),
                              o = void 0 === a.fill.pattern.strokeWidth ? Array.isArray(a.stroke.width) ? a.stroke.width[this.seriesIndex] : a.stroke.width : Array.isArray(a.fill.pattern.strokeWidth) ? a.fill.pattern.strokeWidth[this.seriesIndex] : a.fill.pattern.strokeWidth,
                              l = t;
                          return e = Array.isArray(a.fill.pattern.style) ? void 0 !== a.fill.pattern.style[r.seriesNumber] ? s.drawPattern(a.fill.pattern.style[r.seriesNumber], a.fill.pattern.width, a.fill.pattern.height, l, o, i) : n : s.drawPattern(a.fill.pattern.style, a.fill.pattern.width, a.fill.pattern.height, l, o, i), e
                      }
                  }, {
                      key: "handleGradientFill",
                      value: function(e, t, i) {
                          var n, a = this.w.config,
                              r = this.opts,
                              s = new S(this.ctx),
                              o = new y,
                              l = a.fill.gradient.type,
                              c = e,
                              h = void 0 === a.fill.gradient.opacityFrom ? t : Array.isArray(a.fill.gradient.opacityFrom) ? a.fill.gradient.opacityFrom[i] : a.fill.gradient.opacityFrom;
                          c.indexOf("rgba") > -1 && (h = y.getOpacityFromRGBA(c));
                          var u = void 0 === a.fill.gradient.opacityTo ? t : Array.isArray(a.fill.gradient.opacityTo) ? a.fill.gradient.opacityTo[i] : a.fill.gradient.opacityTo;
                          if (void 0 === a.fill.gradient.gradientToColors || 0 === a.fill.gradient.gradientToColors.length) n = "dark" === a.fill.gradient.shade ? o.shadeColor(-1 * parseFloat(a.fill.gradient.shadeIntensity), e.indexOf("rgb") > -1 ? y.rgb2hex(e) : e) : o.shadeColor(parseFloat(a.fill.gradient.shadeIntensity), e.indexOf("rgb") > -1 ? y.rgb2hex(e) : e);
                          else if (a.fill.gradient.gradientToColors[r.seriesNumber]) {
                              var d = a.fill.gradient.gradientToColors[r.seriesNumber];
                              n = d, d.indexOf("rgba") > -1 && (u = y.getOpacityFromRGBA(d))
                          } else n = e;
                          if (a.fill.gradient.inverseColors) {
                              var f = c;
                              c = n, n = f
                          }
                          return c.indexOf("rgb") > -1 && (c = y.rgb2hex(c)), n.indexOf("rgb") > -1 && (n = y.rgb2hex(n)), s.drawGradient(l, c, n, h, u, r.size, a.fill.gradient.stops, a.fill.gradient.colorStops, i)
                      }
                  }]), e
              }(),
              _ = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "setGlobalMarkerSize",
                      value: function() {
                          var e = this.w;
                          if (e.globals.markers.size = Array.isArray(e.config.markers.size) ? e.config.markers.size : [e.config.markers.size], e.globals.markers.size.length > 0) {
                              if (e.globals.markers.size.length < e.globals.series.length + 1)
                                  for (var t = 0; t <= e.globals.series.length; t++) void 0 === e.globals.markers.size[t] && e.globals.markers.size.push(e.globals.markers.size[0])
                          } else e.globals.markers.size = e.config.series.map((function(t) {
                              return e.config.markers.size
                          }))
                      }
                  }, {
                      key: "plotChartMarkers",
                      value: function(e, t, i, n) {
                          var a, r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                              s = this.w,
                              o = t,
                              l = e,
                              c = null,
                              h = new S(this.ctx),
                              u = s.config.markers.discrete && s.config.markers.discrete.length;
                          if ((s.globals.markers.size[t] > 0 || r || u) && (c = h.group({
                                  class: r || u ? "" : "apexcharts-series-markers"
                              })).attr("clip-path", "url(#gridRectMarkerMask".concat(s.globals.cuid, ")")), Array.isArray(l.x))
                              for (var d = 0; d < l.x.length; d++) {
                                  var f = i;
                                  1 === i && 0 === d && (f = 0), 1 === i && 1 === d && (f = 1);
                                  var p = "apexcharts-marker";
                                  "line" !== s.config.chart.type && "area" !== s.config.chart.type || s.globals.comboCharts || s.config.tooltip.intersect || (p += " no-pointer-events");
                                  var g = Array.isArray(s.config.markers.size) ? s.globals.markers.size[t] > 0 : s.config.markers.size > 0;
                                  if (g || r || u) {
                                      y.isNumber(l.y[d]) ? p += " w".concat(y.randomId()) : p = "apexcharts-nullpoint";
                                      var x = this.getMarkerConfig({
                                          cssClass: p,
                                          seriesIndex: t,
                                          dataPointIndex: f
                                      });
                                      s.config.series[o].data[f] && (s.config.series[o].data[f].fillColor && (x.pointFillColor = s.config.series[o].data[f].fillColor), s.config.series[o].data[f].strokeColor && (x.pointStrokeColor = s.config.series[o].data[f].strokeColor)), n && (x.pSize = n), (a = h.drawMarker(l.x[d], l.y[d], x)).attr("rel", f), a.attr("j", f), a.attr("index", t), a.node.setAttribute("default-marker-size", x.pSize);
                                      var v = new k(this.ctx);
                                      v.setSelectionFilter(a, t, f), this.addEvents(a), c && c.add(a)
                                  } else void 0 === s.globals.pointsArray[t] && (s.globals.pointsArray[t] = []), s.globals.pointsArray[t].push([l.x[d], l.y[d]])
                              }
                          return c
                      }
                  }, {
                      key: "getMarkerConfig",
                      value: function(e) {
                          var t = e.cssClass,
                              i = e.seriesIndex,
                              n = e.dataPointIndex,
                              a = void 0 === n ? null : n,
                              r = e.finishRadius,
                              s = void 0 === r ? null : r,
                              o = this.w,
                              l = this.getMarkerStyle(i),
                              c = o.globals.markers.size[i],
                              h = o.config.markers;
                          return null !== a && h.discrete.length && h.discrete.map((function(e) {
                              e.seriesIndex === i && e.dataPointIndex === a && (l.pointStrokeColor = e.strokeColor, l.pointFillColor = e.fillColor, c = e.size, l.pointShape = e.shape)
                          })), {
                              pSize: null === s ? c : s,
                              pRadius: h.radius,
                              width: Array.isArray(h.width) ? h.width[i] : h.width,
                              height: Array.isArray(h.height) ? h.height[i] : h.height,
                              pointStrokeWidth: Array.isArray(h.strokeWidth) ? h.strokeWidth[i] : h.strokeWidth,
                              pointStrokeColor: l.pointStrokeColor,
                              pointFillColor: l.pointFillColor,
                              shape: l.pointShape || (Array.isArray(h.shape) ? h.shape[i] : h.shape),
                              class: t,
                              pointStrokeOpacity: Array.isArray(h.strokeOpacity) ? h.strokeOpacity[i] : h.strokeOpacity,
                              pointStrokeDashArray: Array.isArray(h.strokeDashArray) ? h.strokeDashArray[i] : h.strokeDashArray,
                              pointFillOpacity: Array.isArray(h.fillOpacity) ? h.fillOpacity[i] : h.fillOpacity,
                              seriesIndex: i
                          }
                      }
                  }, {
                      key: "addEvents",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx);
                          e.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this.ctx, e)), e.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this.ctx, e)), e.node.addEventListener("mousedown", i.pathMouseDown.bind(this.ctx, e)), e.node.addEventListener("click", t.config.markers.onClick), e.node.addEventListener("dblclick", t.config.markers.onDblClick), e.node.addEventListener("touchstart", i.pathMouseDown.bind(this.ctx, e), {
                              passive: !0
                          })
                      }
                  }, {
                      key: "getMarkerStyle",
                      value: function(e) {
                          var t = this.w,
                              i = t.globals.markers.colors,
                              n = t.config.markers.strokeColor || t.config.markers.strokeColors;
                          return {
                              pointStrokeColor: Array.isArray(n) ? n[e] : n,
                              pointFillColor: Array.isArray(i) ? i[e] : i
                          }
                      }
                  }]), e
              }(),
              O = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = new S(this.ctx),
                              r = i.realIndex,
                              s = i.pointsPos,
                              o = i.zRatio,
                              l = i.elParent,
                              c = a.group({
                                  class: "apexcharts-series-markers apexcharts-series-".concat(n.config.chart.type)
                              });
                          if (c.attr("clip-path", "url(#gridRectMarkerMask".concat(n.globals.cuid, ")")), Array.isArray(s.x))
                              for (var h = 0; h < s.x.length; h++) {
                                  var u = t + 1,
                                      d = !0;
                                  0 === t && 0 === h && (u = 0), 0 === t && 1 === h && (u = 1);
                                  var f = 0,
                                      p = n.globals.markers.size[r];
                                  if (o !== 1 / 0) {
                                      p = n.globals.seriesZ[r][u] / o;
                                      var g = n.config.plotOptions.bubble;
                                      g.minBubbleRadius && p < g.minBubbleRadius && (p = g.minBubbleRadius), g.maxBubbleRadius && p > g.maxBubbleRadius && (p = g.maxBubbleRadius)
                                  }
                                  n.config.chart.animations.enabled || (f = p);
                                  var x = s.x[h],
                                      v = s.y[h];
                                  if (f = f || 0, null !== v && void 0 !== n.globals.series[r][u] || (d = !1), d) {
                                      var m = this.drawPoint(x, v, f, p, r, u, t);
                                      c.add(m)
                                  }
                                  l.add(c)
                              }
                      }
                  }, {
                      key: "drawPoint",
                      value: function(e, t, i, n, a, r, s) {
                          var o = this.w,
                              l = a,
                              c = new w(this.ctx),
                              h = new k(this.ctx),
                              u = new R(this.ctx),
                              d = new _(this.ctx),
                              f = new S(this.ctx),
                              p = d.getMarkerConfig({
                                  cssClass: "apexcharts-marker",
                                  seriesIndex: l,
                                  dataPointIndex: r,
                                  finishRadius: "bubble" === o.config.chart.type || o.globals.comboCharts && o.config.series[a] && "bubble" === o.config.series[a].type ? n : null
                              });
                          n = p.pSize;
                          var g, x = u.fillPath({
                              seriesNumber: a,
                              dataPointIndex: r,
                              color: p.pointFillColor,
                              patternUnits: "objectBoundingBox",
                              value: o.globals.series[a][s]
                          });
                          if ("circle" === p.shape ? g = f.drawCircle(i) : "square" !== p.shape && "rect" !== p.shape || (g = f.drawRect(0, 0, p.width - p.pointStrokeWidth / 2, p.height - p.pointStrokeWidth / 2, p.pRadius)), o.config.series[l].data[r] && o.config.series[l].data[r].fillColor && (x = o.config.series[l].data[r].fillColor), g.attr({
                                  x: e - p.width / 2 - p.pointStrokeWidth / 2,
                                  y: t - p.height / 2 - p.pointStrokeWidth / 2,
                                  cx: e,
                                  cy: t,
                                  fill: x,
                                  "fill-opacity": p.pointFillOpacity,
                                  stroke: p.pointStrokeColor,
                                  r: n,
                                  "stroke-width": p.pointStrokeWidth,
                                  "stroke-dasharray": p.pointStrokeDashArray,
                                  "stroke-opacity": p.pointStrokeOpacity
                              }), o.config.chart.dropShadow.enabled) {
                              var v = o.config.chart.dropShadow;
                              h.dropShadow(g, v, a)
                          }
                          if (!this.initialAnim || o.globals.dataChanged || o.globals.resized) o.globals.animationEnded = !0;
                          else {
                              var m = o.config.chart.animations.speed;
                              c.animateMarker(g, 0, "circle" === p.shape ? n : {
                                  width: p.width,
                                  height: p.height
                              }, m, o.globals.easing, (function() {
                                  window.setTimeout((function() {
                                      c.animationCompleted(g)
                                  }), 100)
                              }))
                          }
                          if (o.globals.dataChanged && "circle" === p.shape)
                              if (this.dynamicAnim) {
                                  var b, y, A, C, T = o.config.chart.animations.dynamicAnimation.speed;
                                  null != (C = o.globals.previousPaths[a] && o.globals.previousPaths[a][s]) && (b = C.x, y = C.y, A = void 0 !== C.r ? C.r : n);
                                  for (var E = 0; E < o.globals.collapsedSeries.length; E++) o.globals.collapsedSeries[E].index === a && (T = 1, n = 0);
                                  0 === e && 0 === t && (n = 0), c.animateCircle(g, {
                                      cx: b,
                                      cy: y,
                                      r: A
                                  }, {
                                      cx: e,
                                      cy: t,
                                      r: n
                                  }, T, o.globals.easing)
                              } else g.attr({
                                  r: n
                              });
                          return g.attr({
                              rel: r,
                              j: r,
                              index: a,
                              "default-marker-size": n
                          }), h.setSelectionFilter(g, a, r), d.addEvents(g), g.node.classList.add("apexcharts-marker"), g
                      }
                  }, {
                      key: "centerTextInBubble",
                      value: function(e) {
                          var t = this.w;
                          return {
                              y: e += parseInt(t.config.dataLabels.style.fontSize, 10) / 4
                          }
                      }
                  }]), e
              }(),
              F = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "dataLabelsCorrection",
                      value: function(e, t, i, n, a, r, s) {
                          var o = this.w,
                              l = !1,
                              c = new S(this.ctx).getTextRects(i, s),
                              h = c.width,
                              u = c.height;
                          t < 0 && (t = 0), t > o.globals.gridHeight + u && (t = o.globals.gridHeight + u / 2), void 0 === o.globals.dataLabelsRects[n] && (o.globals.dataLabelsRects[n] = []), o.globals.dataLabelsRects[n].push({
                              x: e,
                              y: t,
                              width: h,
                              height: u
                          });
                          var d = o.globals.dataLabelsRects[n].length - 2,
                              f = void 0 !== o.globals.lastDrawnDataLabelsIndexes[n] ? o.globals.lastDrawnDataLabelsIndexes[n][o.globals.lastDrawnDataLabelsIndexes[n].length - 1] : 0;
                          if (void 0 !== o.globals.dataLabelsRects[n][d]) {
                              var p = o.globals.dataLabelsRects[n][f];
                              (e > p.x + p.width + 2 || t > p.y + p.height + 2 || e + h < p.x) && (l = !0)
                          }
                          return (0 === a || r) && (l = !0), {
                              x: e,
                              y: t,
                              textRects: c,
                              drawnextLabel: l
                          }
                      }
                  }, {
                      key: "drawDataLabel",
                      value: function(e, t, i) {
                          var n = this,
                              a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2,
                              r = this.w,
                              s = new S(this.ctx),
                              o = r.config.dataLabels,
                              l = 0,
                              c = 0,
                              h = i,
                              u = null;
                          if (!o.enabled || !Array.isArray(e.x)) return u;
                          u = s.group({
                              class: "apexcharts-data-labels"
                          });
                          for (var d = 0; d < e.x.length; d++)
                              if (l = e.x[d] + o.offsetX, c = e.y[d] + o.offsetY + a, !isNaN(l)) {
                                  1 === i && 0 === d && (h = 0), 1 === i && 1 === d && (h = 1);
                                  var f = r.globals.series[t][h],
                                      p = "",
                                      g = function(e) {
                                          return r.config.dataLabels.formatter(e, {
                                              ctx: n.ctx,
                                              seriesIndex: t,
                                              dataPointIndex: h,
                                              w: r
                                          })
                                      };
                                  if ("bubble" === r.config.chart.type) {
                                      p = g(f = r.globals.seriesZ[t][h]), c = e.y[d];
                                      var x = new O(this.ctx),
                                          v = x.centerTextInBubble(c, t, h);
                                      c = v.y
                                  } else void 0 !== f && (p = g(f));
                                  this.plotDataLabelsText({
                                      x: l,
                                      y: c,
                                      text: p,
                                      i: t,
                                      j: h,
                                      parent: u,
                                      offsetCorrection: !0,
                                      dataLabelsConfig: r.config.dataLabels
                                  })
                              } return u
                      }
                  }, {
                      key: "plotDataLabelsText",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = e.x,
                              a = e.y,
                              r = e.i,
                              s = e.j,
                              o = e.text,
                              l = e.textAnchor,
                              c = e.fontSize,
                              h = e.parent,
                              u = e.dataLabelsConfig,
                              d = e.color,
                              f = e.alwaysDrawDataLabel,
                              p = e.offsetCorrection;
                          if (!(Array.isArray(t.config.dataLabels.enabledOnSeries) && t.config.dataLabels.enabledOnSeries.indexOf(r) < 0)) {
                              var g = {
                                  x: n,
                                  y: a,
                                  drawnextLabel: !0,
                                  textRects: null
                              };
                              p && (g = this.dataLabelsCorrection(n, a, o, r, s, f, parseInt(u.style.fontSize, 10))), t.globals.zoomed || (n = g.x, a = g.y), g.textRects && (n < -10 - g.textRects.width || n > t.globals.gridWidth + g.textRects.width + 10) && (o = "");
                              var x = t.globals.dataLabels.style.colors[r];
                              (("bar" === t.config.chart.type || "rangeBar" === t.config.chart.type) && t.config.plotOptions.bar.distributed || t.config.dataLabels.distributed) && (x = t.globals.dataLabels.style.colors[s]), "function" == typeof x && (x = x({
                                  series: t.globals.series,
                                  seriesIndex: r,
                                  dataPointIndex: s,
                                  w: t
                              })), d && (x = d);
                              var v = u.offsetX,
                                  m = u.offsetY;
                              if ("bar" !== t.config.chart.type && "rangeBar" !== t.config.chart.type || (v = 0, m = 0), g.drawnextLabel) {
                                  var b = i.drawText({
                                      width: 100,
                                      height: parseInt(u.style.fontSize, 10),
                                      x: n + v,
                                      y: a + m,
                                      foreColor: x,
                                      textAnchor: l || u.textAnchor,
                                      text: o,
                                      fontSize: c || u.style.fontSize,
                                      fontFamily: u.style.fontFamily,
                                      fontWeight: u.style.fontWeight || "normal"
                                  });
                                  if (b.attr({
                                          class: "apexcharts-datalabel",
                                          cx: n,
                                          cy: a
                                      }), u.dropShadow.enabled) {
                                      var y = u.dropShadow;
                                      new k(this.ctx).dropShadow(b, y)
                                  }
                                  h.add(b), void 0 === t.globals.lastDrawnDataLabelsIndexes[r] && (t.globals.lastDrawnDataLabelsIndexes[r] = []), t.globals.lastDrawnDataLabelsIndexes[r].push(s)
                              }
                          }
                      }
                  }, {
                      key: "addBackgroundToDataLabel",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.config.dataLabels.background,
                              a = n.padding,
                              r = n.padding / 2,
                              s = t.width,
                              o = t.height,
                              l = new S(this.ctx).drawRect(t.x - a, t.y - r / 2, s + 2 * a, o + r, n.borderRadius, "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background, n.opacity, n.borderWidth, n.borderColor);
                          return n.dropShadow.enabled && new k(this.ctx).dropShadow(l, n.dropShadow), l
                      }
                  }, {
                      key: "dataLabelsBackground",
                      value: function() {
                          var e = this.w;
                          if ("bubble" !== e.config.chart.type)
                              for (var t = e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i = 0; i < t.length; i++) {
                                  var n = t[i],
                                      a = n.getBBox(),
                                      r = null;
                                  if (a.width && a.height && (r = this.addBackgroundToDataLabel(n, a)), r) {
                                      n.parentNode.insertBefore(r.node, n);
                                      var s = n.getAttribute("fill");
                                      !e.config.chart.animations.enabled || e.globals.resized || e.globals.dataChanged ? r.attr({
                                          fill: s
                                      }) : r.animate().attr({
                                          fill: s
                                      }), n.setAttribute("fill", e.config.dataLabels.background.foreColor)
                                  }
                              }
                      }
                  }, {
                      key: "bringForward",
                      value: function() {
                          for (var e = this.w, t = e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i = e.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), n = 0; n < t.length; n++) i && i.insertBefore(t[n], i.nextSibling)
                      }
                  }]), e
              }(),
              N = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.barCtx = t
                  }
                  return c(e, [{
                      key: "handleBarDataLabels",
                      value: function(e) {
                          var t = e.x,
                              i = e.y,
                              n = e.y1,
                              a = e.y2,
                              r = e.i,
                              s = e.j,
                              o = e.realIndex,
                              l = e.series,
                              c = e.barHeight,
                              h = e.barWidth,
                              u = e.barYPosition,
                              d = e.visibleSeries,
                              f = e.renderedPath,
                              p = this.w,
                              g = new S(this.barCtx.ctx),
                              x = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[o] : this.barCtx.strokeWidth,
                              v = t + parseFloat(h * d),
                              m = i + parseFloat(c * d);
                          p.globals.isXNumeric && !p.globals.isBarHorizontal && (v = t + parseFloat(h * (d + 1)), m = i + parseFloat(c * (d + 1)) - x);
                          var b = t,
                              y = i,
                              w = {},
                              k = p.config.dataLabels,
                              A = this.barCtx.barOptions.dataLabels;
                          void 0 !== u && this.barCtx.isRangeBar && (m = u, y = u);
                          var C = k.offsetX,
                              T = k.offsetY,
                              E = {
                                  width: 0,
                                  height: 0
                              };
                          if (p.config.dataLabels.enabled) {
                              var L = this.barCtx.series[r][s];
                              E = g.getTextRects(p.globals.yLabelFormatters[0](L), parseFloat(k.style.fontSize))
                          }
                          var P = {
                              x: t,
                              y: i,
                              i: r,
                              j: s,
                              renderedPath: f,
                              bcx: v,
                              bcy: m,
                              barHeight: c,
                              barWidth: h,
                              textRects: E,
                              strokeWidth: x,
                              dataLabelsX: b,
                              dataLabelsY: y,
                              barDataLabelsConfig: A,
                              offX: C,
                              offY: T
                          };
                          return w = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(P) : this.calculateColumnsDataLabelsPosition(P), f.attr({
                              cy: w.bcy,
                              cx: w.bcx,
                              j: s,
                              val: l[r][s],
                              barHeight: c,
                              barWidth: h
                          }), this.drawCalculatedDataLabels({
                              x: w.dataLabelsX,
                              y: w.dataLabelsY,
                              val: this.barCtx.isRangeBar ? [n, a] : l[r][s],
                              i: o,
                              j: s,
                              barWidth: h,
                              barHeight: c,
                              textRects: E,
                              dataLabelsConfig: k
                          })
                      }
                  }, {
                      key: "calculateColumnsDataLabelsPosition",
                      value: function(e) {
                          var t, i = this.w,
                              n = e.i,
                              a = e.j,
                              r = e.y,
                              s = e.bcx,
                              o = e.barWidth,
                              l = e.barHeight,
                              c = e.textRects,
                              h = e.dataLabelsY,
                              u = e.barDataLabelsConfig,
                              d = e.strokeWidth,
                              f = e.offX,
                              p = e.offY;
                          l = Math.abs(l);
                          var g = "vertical" === i.config.plotOptions.bar.dataLabels.orientation;
                          s -= d / 2;
                          var x = i.globals.gridWidth / i.globals.dataPoints;
                          t = i.globals.isXNumeric ? s - o / 2 + f : s - x + o / 2 + f, g && (t = t + c.height / 2 - d / 2 - 2);
                          var v = this.barCtx.series[n][a] < 0,
                              m = r;
                          switch (this.barCtx.isReversed && (m = r - l + (v ? 2 * l : 0), r -= l), u.position) {
                              case "center":
                                  h = g ? v ? m + l / 2 + p : m + l / 2 - p : v ? m - l / 2 + c.height / 2 + p : m + l / 2 + c.height / 2 - p;
                                  break;
                              case "bottom":
                                  h = g ? v ? m + l + p : m + l - p : v ? m - l + c.height + d + p : m + l - c.height / 2 + d - p;
                                  break;
                              case "top":
                                  h = g ? v ? m + p : m - p : v ? m - c.height / 2 - p : m + c.height + p
                          }
                          return i.config.chart.stacked || (h < 0 ? h = 0 + d : h + c.height / 3 > i.globals.gridHeight && (h = i.globals.gridHeight - d)), {
                              bcx: s,
                              bcy: r,
                              dataLabelsX: t,
                              dataLabelsY: h
                          }
                      }
                  }, {
                      key: "calculateBarsDataLabelsPosition",
                      value: function(e) {
                          var t = this.w,
                              i = e.x,
                              n = e.i,
                              a = e.j,
                              r = e.bcy,
                              s = e.barHeight,
                              o = e.barWidth,
                              l = e.textRects,
                              c = e.dataLabelsX,
                              h = e.strokeWidth,
                              u = e.barDataLabelsConfig,
                              d = e.offX,
                              f = e.offY,
                              p = t.globals.gridHeight / t.globals.dataPoints;
                          o = Math.abs(o);
                          var g = r - (this.barCtx.isRangeBar ? 0 : p) + s / 2 + l.height / 2 + f - 3,
                              x = this.barCtx.series[n][a] < 0,
                              v = i;
                          switch (this.barCtx.isReversed && (v = i + o - (x ? 2 * o : 0), i = t.globals.gridWidth - o), u.position) {
                              case "center":
                                  c = x ? v + o / 2 - d : Math.max(l.width / 2, v - o / 2) + d;
                                  break;
                              case "bottom":
                                  c = x ? v + o - h - Math.round(l.width / 2) - d : v - o + h + Math.round(l.width / 2) + d;
                                  break;
                              case "top":
                                  c = x ? v - h + Math.round(l.width / 2) - d : v - h - Math.round(l.width / 2) + d
                          }
                          return t.config.chart.stacked || (c < 0 ? c = c + l.width + h : c + l.width / 2 > t.globals.gridWidth && (c = t.globals.gridWidth - l.width - h)), {
                              bcx: i,
                              bcy: r,
                              dataLabelsX: c,
                              dataLabelsY: g
                          }
                      }
                  }, {
                      key: "drawCalculatedDataLabels",
                      value: function(e) {
                          var t = e.x,
                              i = e.y,
                              n = e.val,
                              a = e.i,
                              s = e.j,
                              o = e.textRects,
                              l = e.barHeight,
                              c = e.barWidth,
                              h = e.dataLabelsConfig,
                              u = this.w,
                              d = "rotate(0)";
                          "vertical" === u.config.plotOptions.bar.dataLabels.orientation && (d = "rotate(-90, ".concat(t, ", ").concat(i, ")"));
                          var f = new F(this.barCtx.ctx),
                              p = new S(this.barCtx.ctx),
                              g = h.formatter,
                              x = null,
                              v = u.globals.collapsedSeriesIndices.indexOf(a) > -1;
                          if (h.enabled && !v) {
                              x = p.group({
                                  class: "apexcharts-data-labels",
                                  transform: d
                              });
                              var m = "";
                              void 0 !== n && (m = g(n, {
                                  seriesIndex: a,
                                  dataPointIndex: s,
                                  w: u
                              }));
                              var b = u.globals.series[a][s] < 0,
                                  y = u.config.plotOptions.bar.dataLabels.position;
                              "vertical" === u.config.plotOptions.bar.dataLabels.orientation && ("top" === y && (h.textAnchor = b ? "end" : "start"), "center" === y && (h.textAnchor = "middle"), "bottom" === y && (h.textAnchor = b ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && c < p.getTextRects(m, parseFloat(h.style.fontSize)).width && (m = ""), u.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? o.width / 1.6 > Math.abs(c) && (m = "") : o.height / 1.6 > Math.abs(l) && (m = ""));
                              var w = r({}, h);
                              this.barCtx.isHorizontal && n < 0 && ("start" === h.textAnchor ? w.textAnchor = "end" : "end" === h.textAnchor && (w.textAnchor = "start")), f.plotDataLabelsText({
                                  x: t,
                                  y: i,
                                  text: m,
                                  i: a,
                                  j: s,
                                  parent: x,
                                  dataLabelsConfig: w,
                                  alwaysDrawDataLabel: !0,
                                  offsetCorrection: !0
                              })
                          }
                          return x
                      }
                  }]), e
              }(),
              z = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.legendInactiveClass = "legend-mouseover-inactive"
                  }
                  return c(e, [{
                      key: "getAllSeriesEls",
                      value: function() {
                          return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")
                      }
                  }, {
                      key: "getSeriesByName",
                      value: function(e) {
                          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(y.escapeString(e), "']"))
                      }
                  }, {
                      key: "isSeriesHidden",
                      value: function(e) {
                          var t = this.getSeriesByName(e),
                              i = parseInt(t.getAttribute("data:realIndex"), 10);
                          return {
                              isHidden: t.classList.contains("apexcharts-series-collapsed"),
                              realIndex: i
                          }
                      }
                  }, {
                      key: "addCollapsedClassToSeries",
                      value: function(e, t) {
                          var i = this.w;

                          function n(i) {
                              for (var n = 0; n < i.length; n++) i[n].index === t && e.node.classList.add("apexcharts-series-collapsed")
                          }
                          n(i.globals.collapsedSeries), n(i.globals.ancillaryCollapsedSeries)
                      }
                  }, {
                      key: "toggleSeries",
                      value: function(e) {
                          var t = this.isSeriesHidden(e);
                          return this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex, t.isHidden), t.isHidden
                      }
                  }, {
                      key: "showSeries",
                      value: function(e) {
                          var t = this.isSeriesHidden(e);
                          t.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex, !0)
                      }
                  }, {
                      key: "hideSeries",
                      value: function(e) {
                          var t = this.isSeriesHidden(e);
                          t.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex, !1)
                      }
                  }, {
                      key: "resetSeries",
                      value: function() {
                          var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                              t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              n = this.w,
                              a = y.clone(n.globals.initialSeries);
                          n.globals.previousPaths = [], i ? (n.globals.collapsedSeries = [], n.globals.ancillaryCollapsedSeries = [], n.globals.collapsedSeriesIndices = [], n.globals.ancillaryCollapsedSeriesIndices = []) : a = this.emptyCollapsedSeries(a), n.config.series = a, e && (t && (n.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(a, n.config.chart.animations.dynamicAnimation.enabled))
                      }
                  }, {
                      key: "emptyCollapsedSeries",
                      value: function(e) {
                          for (var t = this.w, i = 0; i < e.length; i++) t.globals.collapsedSeriesIndices.indexOf(i) > -1 && (e[i].data = []);
                          return e
                      }
                  }, {
                      key: "toggleSeriesOnHover",
                      value: function(e, t) {
                          var i = this.w;
                          t || (t = e.target);
                          var n = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
                          if ("mousemove" === e.type) {
                              var a = parseInt(t.getAttribute("rel"), 10) - 1,
                                  r = null,
                                  s = null;
                              i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? (r = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a, "']")), s = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(a, "']"))) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a + 1, "']")) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a + 1, "'] path"));
                              for (var o = 0; o < n.length; o++) n[o].classList.add(this.legendInactiveClass);
                              null !== r && (i.globals.axisCharts || r.parentNode.classList.remove(this.legendInactiveClass), r.classList.remove(this.legendInactiveClass), null !== s && s.classList.remove(this.legendInactiveClass))
                          } else if ("mouseout" === e.type)
                              for (var l = 0; l < n.length; l++) n[l].classList.remove(this.legendInactiveClass)
                      }
                  }, {
                      key: "highlightRangeInSeries",
                      value: function(e, t) {
                          var i = this,
                              n = this.w,
                              a = n.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
                              r = function(e) {
                                  for (var t = 0; t < a.length; t++) a[t].classList[e](i.legendInactiveClass)
                              };
                          if ("mousemove" === e.type) {
                              var s = parseInt(t.getAttribute("rel"), 10) - 1;
                              r("add"),
                                  function(e) {
                                      for (var t = 0; t < a.length; t++) {
                                          var n = parseInt(a[t].getAttribute("val"), 10);
                                          n >= e.from && n <= e.to && a[t].classList.remove(i.legendInactiveClass)
                                      }
                                  }(n.config.plotOptions.heatmap.colorScale.ranges[s])
                          } else "mouseout" === e.type && r("remove")
                      }
                  }, {
                      key: "getActiveConfigSeriesIndex",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "asc",
                              i = this.w,
                              n = 0;
                          if (i.config.series.length > 1)
                              for (var a = i.config.series.map((function(t, n) {
                                      var a = !1;
                                      return e && (a = "bar" === i.config.series[n].type || "column" === i.config.series[n].type), t.data && t.data.length > 0 && !a ? n : -1
                                  })), r = "asc" === t ? 0 : a.length - 1;
                                  "asc" === t ? r < a.length : r >= 0;
                                  "asc" === t ? r++ : r--)
                                  if (-1 !== a[r]) {
                                      n = a[r];
                                      break
                                  } return n
                      }
                  }, {
                      key: "getPreviousPaths",
                      value: function() {
                          var e = this.w;

                          function t(t, i, n) {
                              for (var a = t[i].childNodes, r = {
                                      type: n,
                                      paths: [],
                                      realIndex: t[i].getAttribute("data:realIndex")
                                  }, s = 0; s < a.length; s++)
                                  if (a[s].hasAttribute("pathTo")) {
                                      var o = a[s].getAttribute("pathTo");
                                      r.paths.push({
                                          d: o
                                      })
                                  } e.globals.previousPaths.push(r)
                          }
                          e.globals.previousPaths = [], ["line", "area", "bar", "rangebar", "candlestick", "radar"].forEach((function(i) {
                              for (var n, a = (n = i, e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n, "-series .apexcharts-series"))), r = 0; r < a.length; r++) t(a, r, i)
                          })), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
                          var i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type, " .apexcharts-series"));
                          if (i.length > 0)
                              for (var n = function(t) {
                                      for (var i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(t, "'] rect")), n = [], a = function(e) {
                                              var t = function(t) {
                                                      return i[e].getAttribute(t)
                                                  },
                                                  a = {
                                                      x: parseFloat(t("x")),
                                                      y: parseFloat(t("y")),
                                                      width: parseFloat(t("width")),
                                                      height: parseFloat(t("height"))
                                                  };
                                              n.push({
                                                  rect: a,
                                                  color: i[e].getAttribute("color")
                                              })
                                          }, r = 0; r < i.length; r++) a(r);
                                      e.globals.previousPaths.push(n)
                                  }, a = 0; a < i.length; a++) n(a);
                          e.globals.axisCharts || (e.globals.previousPaths = e.globals.series)
                      }
                  }, {
                      key: "handlePrevBubbleScatterPaths",
                      value: function(e) {
                          var t = this.w,
                              i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e, "-series .apexcharts-series"));
                          if (i.length > 0)
                              for (var n = 0; n < i.length; n++) {
                                  for (var a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e, "-series .apexcharts-series[data\\:realIndex='").concat(n, "'] circle")), r = [], s = 0; s < a.length; s++) r.push({
                                      x: a[s].getAttribute("cx"),
                                      y: a[s].getAttribute("cy"),
                                      r: a[s].getAttribute("r")
                                  });
                                  t.globals.previousPaths.push(r)
                              }
                      }
                  }, {
                      key: "clearPreviousPaths",
                      value: function() {
                          var e = this.w;
                          e.globals.previousPaths = [], e.globals.allSeriesCollapsed = !1
                      }
                  }, {
                      key: "handleNoData",
                      value: function() {
                          var e = this.w,
                              t = e.config.noData,
                              i = new S(this.ctx),
                              n = e.globals.svgWidth / 2,
                              a = e.globals.svgHeight / 2,
                              r = "middle";
                          if (e.globals.noData = !0, e.globals.animationEnded = !0, "left" === t.align ? (n = 10, r = "start") : "right" === t.align && (n = e.globals.svgWidth - 10, r = "end"), "top" === t.verticalAlign ? a = 50 : "bottom" === t.verticalAlign && (a = e.globals.svgHeight - 50), n += t.offsetX, a = a + parseInt(t.style.fontSize, 10) + 2 + t.offsetY, void 0 !== t.text && "" !== t.text) {
                              var s = i.drawText({
                                  x: n,
                                  y: a,
                                  text: t.text,
                                  textAnchor: r,
                                  fontSize: t.style.fontSize,
                                  fontFamily: t.style.fontFamily,
                                  foreColor: t.style.color,
                                  opacity: 1,
                                  class: "apexcharts-text-nodata"
                              });
                              e.globals.dom.Paper.add(s)
                          }
                      }
                  }, {
                      key: "setNullSeriesToZeroValues",
                      value: function(e) {
                          for (var t = this.w, i = 0; i < e.length; i++)
                              if (0 === e[i].length)
                                  for (var n = 0; n < e[t.globals.maxValsInArrayIndex].length; n++) e[i].push(0);
                          return e
                      }
                  }, {
                      key: "hasAllSeriesEqualX",
                      value: function() {
                          for (var e = !0, t = this.w, i = this.filteredSeriesX(), n = 0; n < i.length - 1; n++)
                              if (i[n][0] !== i[n + 1][0]) {
                                  e = !1;
                                  break
                              } return t.globals.allSeriesHasEqualX = e, e
                      }
                  }, {
                      key: "filteredSeriesX",
                      value: function() {
                          var e = this.w.globals.seriesX.map((function(e) {
                              return e.length > 0 ? e : []
                          }));
                          return e
                      }
                  }]), e
              }(),
              D = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.barCtx = t
                  }
                  return c(e, [{
                      key: "initVariables",
                      value: function(e) {
                          var t = this.w;
                          this.barCtx.series = e, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
                          for (var i = 0; i < e.length; i++)
                              if (e[i].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += e[i].length), t.globals.isXNumeric)
                                  for (var n = 0; n < e[i].length; n++) t.globals.seriesX[i][n] > t.globals.minX && t.globals.seriesX[i][n] < t.globals.maxX && this.barCtx.visibleItems++;
                              else this.barCtx.visibleItems = t.globals.dataPoints;
                          0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], this.barCtx.radiusOnSeriesNumber = e.length - 1, t.globals.comboCharts || this.checkZeroSeries({
                              series: e
                          })
                      }
                  }, {
                      key: "initialPositions",
                      value: function() {
                          var e, t, i, n, a, r, s, o, l = this.w,
                              c = l.globals.dataPoints;
                          this.barCtx.isRangeBar && (c = l.globals.labels.length);
                          var h = this.barCtx.seriesLen;
                          if (l.config.plotOptions.bar.rangeBarGroupRows && (h = 1), this.barCtx.isHorizontal) a = (i = l.globals.gridHeight / c) / h, l.globals.isXNumeric && (a = (i = l.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), a = a * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, o = this.barCtx.baseLineInvertedY + l.globals.padHorizontal + (this.barCtx.isReversed ? l.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), t = (i - a * this.barCtx.seriesLen) / 2;
                          else {
                              if (n = l.globals.gridWidth / this.barCtx.visibleItems, l.config.xaxis.convertedCatToNumeric && (n = l.globals.gridWidth / l.globals.dataPoints), r = n / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l.globals.isXNumeric) {
                                  var u = this.barCtx.xRatio;
                                  l.config.xaxis.convertedCatToNumeric && (u = this.barCtx.initialXRatio), l.globals.minXDiff && .5 !== l.globals.minXDiff && l.globals.minXDiff / u > 0 && (n = l.globals.minXDiff / u), (r = n / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r = 1)
                              }
                              s = l.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), e = l.globals.padHorizontal + (n - r * this.barCtx.seriesLen) / 2
                          }
                          return {
                              x: e,
                              y: t,
                              yDivision: i,
                              xDivision: n,
                              barHeight: a,
                              barWidth: r,
                              zeroH: s,
                              zeroW: o
                          }
                      }
                  }, {
                      key: "getPathFillColor",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = new R(this.barCtx.ctx),
                              s = null,
                              o = this.barCtx.barOptions.distributed ? i : t;
                          return this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map((function(n) {
                              e[t][i] >= n.from && e[t][i] <= n.to && (s = n.color)
                          })), a.config.series[t].data[i] && a.config.series[t].data[i].fillColor && (s = a.config.series[t].data[i].fillColor), r.fillPath({
                              seriesNumber: this.barCtx.barOptions.distributed ? o : n,
                              dataPointIndex: i,
                              color: s,
                              value: e[t][i]
                          })
                      }
                  }, {
                      key: "getStrokeWidth",
                      value: function(e, t, i) {
                          var n = 0,
                              a = this.w;
                          return void 0 === this.barCtx.series[e][t] || null === this.barCtx.series[e][t] ? this.barCtx.isNullValue = !0 : this.barCtx.isNullValue = !1, a.config.stroke.show && (this.barCtx.isNullValue || (n = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i] : this.barCtx.strokeWidth)), n
                      }
                  }, {
                      key: "barBackground",
                      value: function(e) {
                          var t = e.j,
                              i = e.i,
                              n = e.x1,
                              a = e.x2,
                              r = e.y1,
                              s = e.y2,
                              o = e.elSeries,
                              l = this.w,
                              c = new S(this.barCtx.ctx),
                              h = new z(this.barCtx.ctx).getActiveConfigSeriesIndex();
                          if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && h === i) {
                              t >= this.barCtx.barOptions.colors.backgroundBarColors.length && (t %= this.barCtx.barOptions.colors.backgroundBarColors.length);
                              var u = this.barCtx.barOptions.colors.backgroundBarColors[t],
                                  d = c.drawRect(void 0 !== n ? n : 0, void 0 !== r ? r : 0, void 0 !== a ? a : l.globals.gridWidth, void 0 !== s ? s : l.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, u, this.barCtx.barOptions.colors.backgroundBarOpacity);
                              o.add(d), d.node.classList.add("apexcharts-backgroundBar")
                          }
                      }
                  }, {
                      key: "getColumnPaths",
                      value: function(e) {
                          var t = e.barWidth,
                              i = e.barXPosition,
                              n = e.yRatio,
                              a = e.y1,
                              r = e.y2,
                              s = e.strokeWidth,
                              o = e.series,
                              l = e.realIndex,
                              c = e.i,
                              h = e.j,
                              u = e.w,
                              d = new S(this.barCtx.ctx);
                          (s = Array.isArray(s) ? s[l] : s) || (s = 0);
                          var f = {
                                  barWidth: t,
                                  strokeWidth: s,
                                  yRatio: n,
                                  barXPosition: i,
                                  y1: a,
                                  y2: r
                              },
                              p = this.getRoundedBars(u, f, o, c, h),
                              g = i,
                              x = i + t,
                              v = d.move(g, a),
                              m = d.move(g, a),
                              b = d.line(x - s, a);
                          return u.globals.previousPaths.length > 0 && (m = this.barCtx.getPreviousPath(l, h, !1)), v = v + d.line(g, p.y2) + p.pathWithRadius + d.line(x - s, p.y2) + b + b + "z", m = m + d.line(g, a) + b + b + b + b + b + d.line(g, a), u.config.chart.stacked && (this.barCtx.yArrj.push(p.y2), this.barCtx.yArrjF.push(Math.abs(a - p.y2)), this.barCtx.yArrjVal.push(this.barCtx.series[c][h])), {
                              pathTo: v,
                              pathFrom: m
                          }
                      }
                  }, {
                      key: "getBarpaths",
                      value: function(e) {
                          var t = e.barYPosition,
                              i = e.barHeight,
                              n = e.x1,
                              a = e.x2,
                              r = e.strokeWidth,
                              s = e.series,
                              o = e.realIndex,
                              l = e.i,
                              c = e.j,
                              h = e.w,
                              u = new S(this.barCtx.ctx);
                          (r = Array.isArray(r) ? r[o] : r) || (r = 0);
                          var d = {
                                  barHeight: i,
                                  strokeWidth: r,
                                  barYPosition: t,
                                  x2: a,
                                  x1: n
                              },
                              f = this.getRoundedBars(h, d, s, l, c),
                              p = u.move(n, t),
                              g = u.move(n, t);
                          h.globals.previousPaths.length > 0 && (g = this.barCtx.getPreviousPath(o, c, !1));
                          var x = t,
                              v = t + i,
                              m = u.line(n, v - r);
                          return p = p + u.line(f.x2, x) + f.pathWithRadius + u.line(f.x2, v - r) + m + m + "z", g = g + u.line(n, x) + m + m + m + m + m + u.line(n, x), h.config.chart.stacked && (this.barCtx.xArrj.push(f.x2), this.barCtx.xArrjF.push(Math.abs(n - f.x2)), this.barCtx.xArrjVal.push(this.barCtx.series[l][c])), {
                              pathTo: p,
                              pathFrom: g
                          }
                      }
                  }, {
                      key: "getRoundedBars",
                      value: function(e, t, i, n, a) {
                          var r = new S(this.barCtx.ctx),
                              s = 0,
                              o = e.config.plotOptions.bar.borderRadius,
                              l = Array.isArray(o);
                          if (s = l ? o[n > o.length - 1 ? o.length - 1 : n] : o, e.config.chart.stacked && i.length > 1 && n !== this.barCtx.radiusOnSeriesNumber && !l && (s = 0), this.barCtx.isHorizontal) {
                              var c = "",
                                  h = t.x2;
                              if (Math.abs(t.x1 - t.x2) < s && (s = Math.abs(t.x1 - t.x2)), void 0 !== i[n][a] || null !== i[n][a]) {
                                  var u = this.barCtx.isReversed ? i[n][a] > 0 : i[n][a] < 0;
                                  u && (s *= -1), h -= s, c = r.quadraticCurve(h + s, t.barYPosition, h + s, t.barYPosition + (u ? -1 * s : s)) + r.line(h + s, t.barYPosition + t.barHeight - t.strokeWidth - (u ? -1 * s : s)) + r.quadraticCurve(h + s, t.barYPosition + t.barHeight - t.strokeWidth, h, t.barYPosition + t.barHeight - t.strokeWidth)
                              }
                              return {
                                  pathWithRadius: c,
                                  x2: h
                              }
                          }
                          var d = "",
                              f = t.y2;
                          if (Math.abs(t.y1 - t.y2) < s && (s = Math.abs(t.y1 - t.y2)), void 0 !== i[n][a] || null !== i[n][a]) {
                              var p = i[n][a] < 0;
                              p && (s *= -1), f += s, d = r.quadraticCurve(t.barXPosition, f - s, t.barXPosition + (p ? -1 * s : s), f - s) + r.line(t.barXPosition + t.barWidth - t.strokeWidth - (p ? -1 * s : s), f - s) + r.quadraticCurve(t.barXPosition + t.barWidth - t.strokeWidth, f - s, t.barXPosition + t.barWidth - t.strokeWidth, f)
                          }
                          return {
                              pathWithRadius: d,
                              y2: f
                          }
                      }
                  }, {
                      key: "checkZeroSeries",
                      value: function(e) {
                          for (var t = e.series, i = this.w, n = 0; n < t.length; n++) {
                              for (var a = 0, r = 0; r < t[i.globals.maxValsInArrayIndex].length; r++) a += t[n][r];
                              0 === a && this.barCtx.zeroSerieses.push(n)
                          }
                          for (var s = t.length - 1; s >= 0; s--) this.barCtx.zeroSerieses.indexOf(s) > -1 && s === this.radiusOnSeriesNumber && (this.barCtx.radiusOnSeriesNumber -= 1);
                          for (var o = t.length - 1; o >= 0; o--) i.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1 && (this.barCtx.radiusOnSeriesNumber -= 1)
                      }
                  }, {
                      key: "getXForValue",
                      value: function(e, t) {
                          var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              n = i ? t : null;
                          return null != e && (n = t + e / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? e / this.barCtx.invertedYRatio : 0)), n
                      }
                  }, {
                      key: "getYForValue",
                      value: function(e, t) {
                          var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              n = i ? t : null;
                          return null != e && (n = t - e / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? e / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), n
                      }
                  }, {
                      key: "getGoalValues",
                      value: function(e, t, i, n, a) {
                          var r = this,
                              s = this.w,
                              o = [];
                          return s.globals.seriesGoals[n] && s.globals.seriesGoals[n][a] && Array.isArray(s.globals.seriesGoals[n][a]) && s.globals.seriesGoals[n][a].forEach((function(n) {
                              var a;
                              o.push((h(a = {}, e, "x" === e ? r.getXForValue(n.value, t, !1) : r.getYForValue(n.value, i, !1)), h(a, "attrs", n), a))
                          })), o
                      }
                  }, {
                      key: "drawGoalLine",
                      value: function(e) {
                          var t = e.barXPosition,
                              i = e.barYPosition,
                              n = e.goalX,
                              a = e.goalY,
                              r = e.barWidth,
                              s = e.barHeight,
                              o = new S(this.barCtx.ctx),
                              l = o.group({
                                  className: "apexcharts-bar-goals-groups"
                              }),
                              c = null;
                          return this.barCtx.isHorizontal ? Array.isArray(n) && n.forEach((function(e) {
                              var t = void 0 !== e.attrs.strokeHeight ? e.attrs.strokeHeight : s / 2,
                                  n = i + t + s / 2;
                              c = o.drawLine(e.x, n - 2 * t, e.x, n, e.attrs.strokeColor ? e.attrs.strokeColor : void 0, e.attrs.strokeDashArray, e.attrs.strokeWidth ? e.attrs.strokeWidth : 2, e.attrs.strokeLineCap), l.add(c)
                          })) : Array.isArray(a) && a.forEach((function(e) {
                              var i = void 0 !== e.attrs.strokeWidth ? e.attrs.strokeWidth : r / 2,
                                  n = t + i + r / 2;
                              c = o.drawLine(n - 2 * i, e.y, n, e.y, e.attrs.strokeColor ? e.attrs.strokeColor : void 0, e.attrs.strokeDashArray, e.attrs.strokeHeight ? e.attrs.strokeHeight : 2, e.attrs.strokeLineCap), l.add(c)
                          })), l
                      }
                  }]), e
              }(),
              H = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var n = this.w;
                      this.barOptions = n.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = n.config.stroke.width, this.isNullValue = !1, this.isRangeBar = n.globals.seriesRangeBar.length && this.isHorizontal, this.xyRatios = i, null !== this.xyRatios && (this.xRatio = i.xRatio, this.initialXRatio = i.initialXRatio, this.yRatio = i.yRatio, this.invertedXRatio = i.invertedXRatio, this.invertedYRatio = i.invertedYRatio, this.baseLineY = i.baseLineY, this.baseLineInvertedY = i.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.barHelpers = new D(this)
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e, t) {
                          var i = this.w,
                              n = new S(this.ctx),
                              a = new T(this.ctx, i);
                          e = a.getLogSeries(e), this.series = e, this.yRatio = a.getLogYRatios(this.yRatio), this.barHelpers.initVariables(e);
                          var s = n.group({
                              class: "apexcharts-bar-series apexcharts-plot-series"
                          });
                          i.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");
                          for (var o = 0, l = 0; o < e.length; o++, l++) {
                              var c, h, u, d, f = void 0,
                                  p = void 0,
                                  g = [],
                                  x = [],
                                  v = i.globals.comboCharts ? t[o] : o,
                                  m = n.group({
                                      class: "apexcharts-series",
                                      rel: o + 1,
                                      seriesName: y.escapeString(i.globals.seriesNames[v]),
                                      "data:realIndex": v
                                  });
                              this.ctx.series.addCollapsedClassToSeries(m, v), e[o].length > 0 && (this.visibleI = this.visibleI + 1);
                              var b = 0,
                                  w = 0;
                              this.yRatio.length > 1 && (this.yaxisIndex = v), this.isReversed = i.config.yaxis[this.yaxisIndex] && i.config.yaxis[this.yaxisIndex].reversed;
                              var k = this.barHelpers.initialPositions();
                              p = k.y, b = k.barHeight, h = k.yDivision, d = k.zeroW, f = k.x, w = k.barWidth, c = k.xDivision, u = k.zeroH, this.horizontal || x.push(f + w / 2);
                              for (var A = n.group({
                                      class: "apexcharts-datalabels",
                                      "data:realIndex": v
                                  }), C = n.group({
                                      class: "apexcharts-bar-goals-markers",
                                      style: "pointer-events: none"
                                  }), E = 0; E < i.globals.dataPoints; E++) {
                                  var L = this.barHelpers.getStrokeWidth(o, E, v),
                                      P = null,
                                      M = {
                                          indexes: {
                                              i: o,
                                              j: E,
                                              realIndex: v,
                                              bc: l
                                          },
                                          x: f,
                                          y: p,
                                          strokeWidth: L,
                                          elSeries: m
                                      };
                                  this.isHorizontal ? (P = this.drawBarPaths(r(r({}, M), {}, {
                                      barHeight: b,
                                      zeroW: d,
                                      yDivision: h
                                  })), w = this.series[o][E] / this.invertedYRatio) : (P = this.drawColumnPaths(r(r({}, M), {}, {
                                      xDivision: c,
                                      barWidth: w,
                                      zeroH: u
                                  })), b = this.series[o][E] / this.yRatio[this.yaxisIndex]);
                                  var I = this.barHelpers.drawGoalLine({
                                      barXPosition: P.barXPosition,
                                      barYPosition: P.barYPosition,
                                      goalX: P.goalX,
                                      goalY: P.goalY,
                                      barHeight: b,
                                      barWidth: w
                                  });
                                  I && C.add(I), p = P.y, f = P.x, E > 0 && x.push(f + w / 2), g.push(p);
                                  var R = this.barHelpers.getPathFillColor(e, o, E, v);
                                  this.renderSeries({
                                      realIndex: v,
                                      pathFill: R,
                                      j: E,
                                      i: o,
                                      pathFrom: P.pathFrom,
                                      pathTo: P.pathTo,
                                      strokeWidth: L,
                                      elSeries: m,
                                      x: f,
                                      y: p,
                                      series: e,
                                      barHeight: b,
                                      barWidth: w,
                                      elDataLabelsWrap: A,
                                      elGoalsMarkers: C,
                                      visibleSeries: this.visibleI,
                                      type: "bar"
                                  })
                              }
                              i.globals.seriesXvalues[v] = x, i.globals.seriesYvalues[v] = g, s.add(m)
                          }
                          return s
                      }
                  }, {
                      key: "renderSeries",
                      value: function(e) {
                          var t = e.realIndex,
                              i = e.pathFill,
                              n = e.lineFill,
                              a = e.j,
                              r = e.i,
                              s = e.pathFrom,
                              o = e.pathTo,
                              l = e.strokeWidth,
                              c = e.elSeries,
                              h = e.x,
                              u = e.y,
                              d = e.y1,
                              f = e.y2,
                              p = e.series,
                              g = e.barHeight,
                              x = e.barWidth,
                              v = e.barYPosition,
                              m = e.elDataLabelsWrap,
                              b = e.elGoalsMarkers,
                              y = e.visibleSeries,
                              w = e.type,
                              A = this.w,
                              C = new S(this.ctx);
                          n || (n = this.barOptions.distributed ? A.globals.stroke.colors[a] : A.globals.stroke.colors[t]), A.config.series[r].data[a] && A.config.series[r].data[a].strokeColor && (n = A.config.series[r].data[a].strokeColor), this.isNullValue && (i = "none");
                          var T = a / A.config.chart.animations.animateGradually.delay * (A.config.chart.animations.speed / A.globals.dataPoints) / 2.4,
                              E = C.renderPaths({
                                  i: r,
                                  j: a,
                                  realIndex: t,
                                  pathFrom: s,
                                  pathTo: o,
                                  stroke: n,
                                  strokeWidth: l,
                                  strokeLineCap: A.config.stroke.lineCap,
                                  fill: i,
                                  animationDelay: T,
                                  initialSpeed: A.config.chart.animations.speed,
                                  dataChangeSpeed: A.config.chart.animations.dynamicAnimation.speed,
                                  className: "apexcharts-".concat(w, "-area")
                              });
                          E.attr("clip-path", "url(#gridRectMask".concat(A.globals.cuid, ")"));
                          var L = A.config.forecastDataPoints;
                          L.count > 0 && a >= A.globals.dataPoints - L.count && (E.node.setAttribute("stroke-dasharray", L.dashArray), E.node.setAttribute("stroke-width", L.strokeWidth), E.node.setAttribute("fill-opacity", L.fillOpacity)), void 0 !== d && void 0 !== f && (E.attr("data-range-y1", d), E.attr("data-range-y2", f)), new k(this.ctx).setSelectionFilter(E, t, a), c.add(E);
                          var P = new N(this).handleBarDataLabels({
                              x: h,
                              y: u,
                              y1: d,
                              y2: f,
                              i: r,
                              j: a,
                              series: p,
                              realIndex: t,
                              barHeight: g,
                              barWidth: x,
                              barYPosition: v,
                              renderedPath: E,
                              visibleSeries: y
                          });
                          return null !== P && m.add(P), c.add(m), b && c.add(b), c
                      }
                  }, {
                      key: "drawBarPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.barHeight,
                              n = e.strokeWidth,
                              a = e.zeroW,
                              r = e.x,
                              s = e.y,
                              o = e.yDivision,
                              l = e.elSeries,
                              c = this.w,
                              h = t.i,
                              u = t.j;
                          c.globals.isXNumeric && (s = (c.globals.seriesX[h][u] - c.globals.minX) / this.invertedXRatio - i);
                          var d = s + i * this.visibleI;
                          r = this.barHelpers.getXForValue(this.series[h][u], a);
                          var f = this.barHelpers.getBarpaths({
                              barYPosition: d,
                              barHeight: i,
                              x1: a,
                              x2: r,
                              strokeWidth: n,
                              series: this.series,
                              realIndex: t.realIndex,
                              i: h,
                              j: u,
                              w: c
                          });
                          return c.globals.isXNumeric || (s += o), this.barHelpers.barBackground({
                              j: u,
                              i: h,
                              y1: d - i * this.visibleI,
                              y2: i * this.seriesLen,
                              elSeries: l
                          }), {
                              pathTo: f.pathTo,
                              pathFrom: f.pathFrom,
                              x: r,
                              y: s,
                              goalX: this.barHelpers.getGoalValues("x", a, null, h, u),
                              barYPosition: d
                          }
                      }
                  }, {
                      key: "drawColumnPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.x,
                              n = e.y,
                              a = e.xDivision,
                              r = e.barWidth,
                              s = e.zeroH,
                              o = e.strokeWidth,
                              l = e.elSeries,
                              c = this.w,
                              h = t.realIndex,
                              u = t.i,
                              d = t.j,
                              f = t.bc;
                          if (c.globals.isXNumeric) {
                              var p = h;
                              c.globals.seriesX[h].length || (p = c.globals.maxValsInArrayIndex), i = (c.globals.seriesX[p][d] - c.globals.minX) / this.xRatio - r * this.seriesLen / 2
                          }
                          var g = i + r * this.visibleI;
                          n = this.barHelpers.getYForValue(this.series[u][d], s);
                          var x = this.barHelpers.getColumnPaths({
                              barXPosition: g,
                              barWidth: r,
                              y1: s,
                              y2: n,
                              strokeWidth: o,
                              series: this.series,
                              realIndex: t.realIndex,
                              i: u,
                              j: d,
                              w: c
                          });
                          return c.globals.isXNumeric || (i += a), this.barHelpers.barBackground({
                              bc: f,
                              j: d,
                              i: u,
                              x1: g - o / 2 - r * this.visibleI,
                              x2: r * this.seriesLen + o / 2,
                              elSeries: l
                          }), {
                              pathTo: x.pathTo,
                              pathFrom: x.pathFrom,
                              x: i,
                              y: n,
                              goalY: this.barHelpers.getGoalValues("y", null, s, u, d),
                              barXPosition: g
                          }
                      }
                  }, {
                      key: "getPreviousPath",
                      value: function(e, t) {
                          for (var i, n = this.w, a = 0; a < n.globals.previousPaths.length; a++) {
                              var r = n.globals.previousPaths[a];
                              r.paths && r.paths.length > 0 && parseInt(r.realIndex, 10) === parseInt(e, 10) && void 0 !== n.globals.previousPaths[a].paths[t] && (i = n.globals.previousPaths[a].paths[t].d)
                          }
                          return i
                      }
                  }]), e
              }(),
              X = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
                  }
                  return c(e, [{
                      key: "isValidDate",
                      value: function(e) {
                          return !isNaN(this.parseDate(e))
                      }
                  }, {
                      key: "getTimeStamp",
                      value: function(e) {
                          return Date.parse(e) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(e).toISOString().substr(0, 25)).getTime() : new Date(e).getTime() : e
                      }
                  }, {
                      key: "getDate",
                      value: function(e) {
                          return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(e).toUTCString()) : new Date(e)
                      }
                  }, {
                      key: "parseDate",
                      value: function(e) {
                          var t = Date.parse(e);
                          if (!isNaN(t)) return this.getTimeStamp(e);
                          var i = Date.parse(e.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
                          return this.getTimeStamp(i)
                      }
                  }, {
                      key: "parseDateWithTimezone",
                      value: function(e) {
                          return Date.parse(e.replace(/-/g, "/").replace(/[a-z]+/gi, " "))
                      }
                  }, {
                      key: "formatDate",
                      value: function(e, t) {
                          var i = this.w.globals.locale,
                              n = this.w.config.xaxis.labels.datetimeUTC,
                              a = ["\0"].concat(v(i.months)),
                              r = [""].concat(v(i.shortMonths)),
                              s = [""].concat(v(i.days)),
                              o = [""].concat(v(i.shortDays));

                          function l(e, t) {
                              var i = e + "";
                              for (t = t || 2; i.length < t;) i = "0" + i;
                              return i
                          }
                          var c = n ? e.getUTCFullYear() : e.getFullYear();
                          t = (t = (t = t.replace(/(^|[^\\])yyyy+/g, "$1" + c)).replace(/(^|[^\\])yy/g, "$1" + c.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + c);
                          var h = (n ? e.getUTCMonth() : e.getMonth()) + 1;
                          t = (t = (t = (t = t.replace(/(^|[^\\])MMMM+/g, "$1" + a[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + l(h))).replace(/(^|[^\\])M/g, "$1" + h);
                          var u = n ? e.getUTCDate() : e.getDate();
                          t = (t = (t = (t = t.replace(/(^|[^\\])dddd+/g, "$1" + s[0])).replace(/(^|[^\\])ddd/g, "$1" + o[0])).replace(/(^|[^\\])dd/g, "$1" + l(u))).replace(/(^|[^\\])d/g, "$1" + u);
                          var d = n ? e.getUTCHours() : e.getHours(),
                              f = d > 12 ? d - 12 : 0 === d ? 12 : d;
                          t = (t = (t = (t = t.replace(/(^|[^\\])HH+/g, "$1" + l(d))).replace(/(^|[^\\])H/g, "$1" + d)).replace(/(^|[^\\])hh+/g, "$1" + l(f))).replace(/(^|[^\\])h/g, "$1" + f);
                          var p = n ? e.getUTCMinutes() : e.getMinutes();
                          t = (t = t.replace(/(^|[^\\])mm+/g, "$1" + l(p))).replace(/(^|[^\\])m/g, "$1" + p);
                          var g = n ? e.getUTCSeconds() : e.getSeconds();
                          t = (t = t.replace(/(^|[^\\])ss+/g, "$1" + l(g))).replace(/(^|[^\\])s/g, "$1" + g);
                          var x = n ? e.getUTCMilliseconds() : e.getMilliseconds();
                          t = t.replace(/(^|[^\\])fff+/g, "$1" + l(x, 3)), x = Math.round(x / 10), t = t.replace(/(^|[^\\])ff/g, "$1" + l(x)), x = Math.round(x / 10);
                          var m = d < 12 ? "AM" : "PM";
                          t = (t = (t = t.replace(/(^|[^\\])f/g, "$1" + x)).replace(/(^|[^\\])TT+/g, "$1" + m)).replace(/(^|[^\\])T/g, "$1" + m.charAt(0));
                          var b = m.toLowerCase();
                          t = (t = t.replace(/(^|[^\\])tt+/g, "$1" + b)).replace(/(^|[^\\])t/g, "$1" + b.charAt(0));
                          var y = -e.getTimezoneOffset(),
                              w = n || !y ? "Z" : y > 0 ? "+" : "-";
                          if (!n) {
                              var k = (y = Math.abs(y)) % 60;
                              w += l(Math.floor(y / 60)) + ":" + l(k)
                          }
                          t = t.replace(/(^|[^\\])K/g, "$1" + w);
                          var S = (n ? e.getUTCDay() : e.getDay()) + 1;
                          return (t = (t = (t = (t = t.replace(new RegExp(s[0], "g"), s[S])).replace(new RegExp(o[0], "g"), o[S])).replace(new RegExp(a[0], "g"), a[h])).replace(new RegExp(r[0], "g"), r[h])).replace(/\\(.)/g, "$1")
                      }
                  }, {
                      key: "getTimeUnitsfromTimestamp",
                      value: function(e, t, i) {
                          var n = this.w;
                          void 0 !== n.config.xaxis.min && (e = n.config.xaxis.min), void 0 !== n.config.xaxis.max && (t = n.config.xaxis.max);
                          var a = this.getDate(e),
                              r = this.getDate(t),
                              s = this.formatDate(a, "yyyy MM dd HH mm ss fff").split(" "),
                              o = this.formatDate(r, "yyyy MM dd HH mm ss fff").split(" ");
                          return {
                              minMillisecond: parseInt(s[6], 10),
                              maxMillisecond: parseInt(o[6], 10),
                              minSecond: parseInt(s[5], 10),
                              maxSecond: parseInt(o[5], 10),
                              minMinute: parseInt(s[4], 10),
                              maxMinute: parseInt(o[4], 10),
                              minHour: parseInt(s[3], 10),
                              maxHour: parseInt(o[3], 10),
                              minDate: parseInt(s[2], 10),
                              maxDate: parseInt(o[2], 10),
                              minMonth: parseInt(s[1], 10) - 1,
                              maxMonth: parseInt(o[1], 10) - 1,
                              minYear: parseInt(s[0], 10),
                              maxYear: parseInt(o[0], 10)
                          }
                      }
                  }, {
                      key: "isLeapYear",
                      value: function(e) {
                          return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
                      }
                  }, {
                      key: "calculcateLastDaysOfMonth",
                      value: function(e, t, i) {
                          return this.determineDaysOfMonths(e, t) - i
                      }
                  }, {
                      key: "determineDaysOfYear",
                      value: function(e) {
                          var t = 365;
                          return this.isLeapYear(e) && (t = 366), t
                      }
                  }, {
                      key: "determineRemainingDaysOfYear",
                      value: function(e, t, i) {
                          var n = this.daysCntOfYear[t] + i;
                          return t > 1 && this.isLeapYear() && n++, n
                      }
                  }, {
                      key: "determineDaysOfMonths",
                      value: function(e, t) {
                          var i = 30;
                          switch (e = y.monthMod(e), !0) {
                              case this.months30.indexOf(e) > -1:
                                  2 === e && (i = this.isLeapYear(t) ? 29 : 28);
                                  break;
                              case this.months31.indexOf(e) > -1:
                              default:
                                  i = 31
                          }
                          return i
                      }
                  }]), e
              }(),
              Y = function(e) {
                  u(i, H);
                  var t = g(i);

                  function i() {
                      return o(this, i), t.apply(this, arguments)
                  }
                  return c(i, [{
                      key: "draw",
                      value: function(e, t) {
                          var i = this.w,
                              n = new S(this.ctx);
                          this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = e, this.seriesRangeStart = i.globals.seriesRangeStart, this.seriesRangeEnd = i.globals.seriesRangeEnd, this.barHelpers.initVariables(e);
                          for (var a = n.group({
                                  class: "apexcharts-rangebar-series apexcharts-plot-series"
                              }), s = 0; s < e.length; s++) {
                              var o, l, c, h = void 0,
                                  u = void 0,
                                  d = void 0,
                                  f = i.globals.comboCharts ? t[s] : s,
                                  p = n.group({
                                      class: "apexcharts-series",
                                      seriesName: y.escapeString(i.globals.seriesNames[f]),
                                      rel: s + 1,
                                      "data:realIndex": f
                                  });
                              this.ctx.series.addCollapsedClassToSeries(p, f), e[s].length > 0 && (this.visibleI = this.visibleI + 1);
                              var g = 0,
                                  x = 0;
                              this.yRatio.length > 1 && (this.yaxisIndex = f);
                              var v = this.barHelpers.initialPositions();
                              u = v.y, c = v.zeroW, h = v.x, x = v.barWidth, o = v.xDivision, l = v.zeroH;
                              for (var m = n.group({
                                      class: "apexcharts-datalabels",
                                      "data:realIndex": f
                                  }), b = n.group({
                                      class: "apexcharts-rangebar-goals-markers",
                                      style: "pointer-events: none"
                                  }), w = 0; w < i.globals.dataPoints; w++) {
                                  var k = this.barHelpers.getStrokeWidth(s, w, f),
                                      A = this.seriesRangeStart[s][w],
                                      C = this.seriesRangeEnd[s][w],
                                      T = null,
                                      E = null,
                                      L = {
                                          x: h,
                                          y: u,
                                          strokeWidth: k,
                                          elSeries: p
                                      };
                                  if (d = v.yDivision, g = v.barHeight, this.isHorizontal) {
                                      E = u + g * this.visibleI;
                                      var P = this.seriesLen;
                                      i.config.plotOptions.bar.rangeBarGroupRows && (P = 1);
                                      var M = (d - g * P) / 2;
                                      if (void 0 === i.config.series[s].data[w]) break;
                                      if (i.config.series[s].data[w].x) {
                                          var I = this.detectOverlappingBars({
                                              i: s,
                                              j: w,
                                              barYPosition: E,
                                              srty: M,
                                              barHeight: g,
                                              yDivision: d,
                                              initPositions: v
                                          });
                                          g = I.barHeight, E = I.barYPosition
                                      }
                                      x = (T = this.drawRangeBarPaths(r({
                                          indexes: {
                                              i: s,
                                              j: w,
                                              realIndex: f
                                          },
                                          barHeight: g,
                                          barYPosition: E,
                                          zeroW: c,
                                          yDivision: d,
                                          y1: A,
                                          y2: C
                                      }, L))).barWidth
                                  } else g = (T = this.drawRangeColumnPaths(r({
                                      indexes: {
                                          i: s,
                                          j: w,
                                          realIndex: f
                                      },
                                      zeroH: l,
                                      barWidth: x,
                                      xDivision: o
                                  }, L))).barHeight;
                                  var R = this.barHelpers.drawGoalLine({
                                      barXPosition: T.barXPosition,
                                      barYPosition: E,
                                      goalX: T.goalX,
                                      goalY: T.goalY,
                                      barHeight: g,
                                      barWidth: x
                                  });
                                  R && b.add(R), u = T.y, h = T.x;
                                  var _ = this.barHelpers.getPathFillColor(e, s, w, f),
                                      O = i.globals.stroke.colors[f];
                                  this.renderSeries({
                                      realIndex: f,
                                      pathFill: _,
                                      lineFill: O,
                                      j: w,
                                      i: s,
                                      x: h,
                                      y: u,
                                      y1: A,
                                      y2: C,
                                      pathFrom: T.pathFrom,
                                      pathTo: T.pathTo,
                                      strokeWidth: k,
                                      elSeries: p,
                                      series: e,
                                      barHeight: g,
                                      barYPosition: E,
                                      barWidth: x,
                                      elDataLabelsWrap: m,
                                      elGoalsMarkers: b,
                                      visibleSeries: this.visibleI,
                                      type: "rangebar"
                                  })
                              }
                              a.add(p)
                          }
                          return a
                      }
                  }, {
                      key: "detectOverlappingBars",
                      value: function(e) {
                          var t = e.i,
                              i = e.j,
                              n = e.barYPosition,
                              a = e.srty,
                              r = e.barHeight,
                              s = e.yDivision,
                              o = e.initPositions,
                              l = this.w,
                              c = [],
                              h = l.config.series[t].data[i].rangeName,
                              u = l.config.series[t].data[i].x,
                              d = l.globals.labels.indexOf(u),
                              f = l.globals.seriesRangeBar[t].findIndex((function(e) {
                                  return e.x === u && e.overlaps.length > 0
                              }));
                          return n = l.config.plotOptions.bar.rangeBarGroupRows ? a + s * d : a + r * this.visibleI + s * d, f > -1 && !l.config.plotOptions.bar.rangeBarOverlap && (c = l.globals.seriesRangeBar[t][f].overlaps).indexOf(h) > -1 && (n = (r = o.barHeight / c.length) * this.visibleI + s * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + r * (this.visibleI + c.indexOf(h)) + s * d), {
                              barYPosition: n,
                              barHeight: r
                          }
                      }
                  }, {
                      key: "drawRangeColumnPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.x;
                          e.strokeWidth;
                          var n = e.xDivision,
                              a = e.barWidth,
                              r = e.zeroH,
                              s = this.w,
                              o = t.i,
                              l = t.j,
                              c = this.yRatio[this.yaxisIndex],
                              h = t.realIndex,
                              u = this.getRangeValue(h, l),
                              d = Math.min(u.start, u.end),
                              f = Math.max(u.start, u.end);
                          s.globals.isXNumeric && (i = (s.globals.seriesX[o][l] - s.globals.minX) / this.xRatio - a / 2);
                          var p = i + a * this.visibleI;
                          void 0 === this.series[o][l] || null === this.series[o][l] ? d = r : (d = r - d / c, f = r - f / c);
                          var g = Math.abs(f - d),
                              x = this.barHelpers.getColumnPaths({
                                  barXPosition: p,
                                  barWidth: a,
                                  y1: d,
                                  y2: f,
                                  strokeWidth: this.strokeWidth,
                                  series: this.seriesRangeEnd,
                                  realIndex: t.realIndex,
                                  i: h,
                                  j: l,
                                  w: s
                              });
                          return s.globals.isXNumeric || (i += n), {
                              pathTo: x.pathTo,
                              pathFrom: x.pathFrom,
                              barHeight: g,
                              x: i,
                              y: f,
                              goalY: this.barHelpers.getGoalValues("y", null, r, o, l),
                              barXPosition: p
                          }
                      }
                  }, {
                      key: "drawRangeBarPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.y,
                              n = e.y1,
                              a = e.y2,
                              r = e.yDivision,
                              s = e.barHeight,
                              o = e.barYPosition,
                              l = e.zeroW,
                              c = this.w,
                              h = l + n / this.invertedYRatio,
                              u = l + a / this.invertedYRatio,
                              d = Math.abs(u - h),
                              f = this.barHelpers.getBarpaths({
                                  barYPosition: o,
                                  barHeight: s,
                                  x1: h,
                                  x2: u,
                                  strokeWidth: this.strokeWidth,
                                  series: this.seriesRangeEnd,
                                  i: t.realIndex,
                                  realIndex: t.realIndex,
                                  j: t.j,
                                  w: c
                              });
                          return c.globals.isXNumeric || (i += r), {
                              pathTo: f.pathTo,
                              pathFrom: f.pathFrom,
                              barWidth: d,
                              x: u,
                              goalX: this.barHelpers.getGoalValues("x", l, null, t.realIndex, t.j),
                              y: i
                          }
                      }
                  }, {
                      key: "getRangeValue",
                      value: function(e, t) {
                          var i = this.w;
                          return {
                              start: i.globals.seriesRangeStart[e][t],
                              end: i.globals.seriesRangeEnd[e][t]
                          }
                      }
                  }, {
                      key: "getTooltipValues",
                      value: function(e) {
                          var t = e.ctx,
                              i = e.seriesIndex,
                              n = e.dataPointIndex,
                              a = e.y1,
                              r = e.y2,
                              s = e.w,
                              o = s.globals.seriesRangeStart[i][n],
                              l = s.globals.seriesRangeEnd[i][n],
                              c = s.globals.labels[n],
                              h = s.config.series[i].name ? s.config.series[i].name : "",
                              u = s.config.tooltip.y.formatter,
                              d = s.config.tooltip.y.title.formatter,
                              f = {
                                  w: s,
                                  seriesIndex: i,
                                  dataPointIndex: n,
                                  start: o,
                                  end: l
                              };
                          "function" == typeof d && (h = d(h, f)), Number.isFinite(a) && Number.isFinite(r) && (o = a, l = r, s.config.series[i].data[n].x && (c = s.config.series[i].data[n].x + ":"), "function" == typeof u && (c = u(c, f)));
                          var p = "",
                              g = "",
                              x = s.globals.colors[i];
                          if (void 0 === s.config.tooltip.x.formatter)
                              if ("datetime" === s.config.xaxis.type) {
                                  var v = new X(t);
                                  p = v.formatDate(v.getDate(o), s.config.tooltip.x.format), g = v.formatDate(v.getDate(l), s.config.tooltip.x.format)
                              } else p = o, g = l;
                          else p = s.config.tooltip.x.formatter(o), g = s.config.tooltip.x.formatter(l);
                          return {
                              start: o,
                              end: l,
                              startVal: p,
                              endVal: g,
                              ylabel: c,
                              color: x,
                              seriesName: h
                          }
                      }
                  }, {
                      key: "buildCustomTooltipHTML",
                      value: function(e) {
                          var t = e.color,
                              i = e.seriesName;
                          return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + t + '">' + (i || "") + '</span></div><div> <span class="category">' + e.ylabel + ' </span> <span class="value start-value">' + e.start + '</span> <span class="separator">-</span> <span class="value end-value">' + e.end + "</span></div></div>"
                      }
                  }]), i
              }(),
              B = function() {
                  function e(t) {
                      o(this, e), this.opts = t
                  }
                  return c(e, [{
                      key: "line",
                      value: function() {
                          return {
                              chart: {
                                  animations: {
                                      easing: "swing"
                                  }
                              },
                              dataLabels: {
                                  enabled: !1
                              },
                              stroke: {
                                  width: 5,
                                  curve: "straight"
                              },
                              markers: {
                                  size: 0,
                                  hover: {
                                      sizeOffset: 6
                                  }
                              },
                              xaxis: {
                                  crosshairs: {
                                      width: 1
                                  }
                              }
                          }
                      }
                  }, {
                      key: "sparkline",
                      value: function(e) {
                          return this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0, y.extend(e, {
                              grid: {
                                  show: !1,
                                  padding: {
                                      left: 0,
                                      right: 0,
                                      top: 0,
                                      bottom: 0
                                  }
                              },
                              legend: {
                                  show: !1
                              },
                              xaxis: {
                                  labels: {
                                      show: !1
                                  },
                                  tooltip: {
                                      enabled: !1
                                  },
                                  axisBorder: {
                                      show: !1
                                  },
                                  axisTicks: {
                                      show: !1
                                  }
                              },
                              chart: {
                                  toolbar: {
                                      show: !1
                                  },
                                  zoom: {
                                      enabled: !1
                                  }
                              },
                              dataLabels: {
                                  enabled: !1
                              }
                          })
                      }
                  }, {
                      key: "bar",
                      value: function() {
                          return {
                              chart: {
                                  stacked: !1,
                                  animations: {
                                      easing: "swing"
                                  }
                              },
                              plotOptions: {
                                  bar: {
                                      dataLabels: {
                                          position: "center"
                                      }
                                  }
                              },
                              dataLabels: {
                                  style: {
                                      colors: ["#fff"]
                                  },
                                  background: {
                                      enabled: !1
                                  }
                              },
                              stroke: {
                                  width: 0,
                                  lineCap: "round"
                              },
                              fill: {
                                  opacity: .85
                              },
                              legend: {
                                  markers: {
                                      shape: "square",
                                      radius: 2,
                                      size: 8
                                  }
                              },
                              tooltip: {
                                  shared: !1,
                                  intersect: !0
                              },
                              xaxis: {
                                  tooltip: {
                                      enabled: !1
                                  },
                                  tickPlacement: "between",
                                  crosshairs: {
                                      width: "barWidth",
                                      position: "back",
                                      fill: {
                                          type: "gradient"
                                      },
                                      dropShadow: {
                                          enabled: !1
                                      },
                                      stroke: {
                                          width: 0
                                      }
                                  }
                              }
                          }
                      }
                  }, {
                      key: "candlestick",
                      value: function() {
                          var e = this;
                          return {
                              stroke: {
                                  width: 1,
                                  colors: ["#333"]
                              },
                              fill: {
                                  opacity: 1
                              },
                              dataLabels: {
                                  enabled: !1
                              },
                              tooltip: {
                                  shared: !0,
                                  custom: function(t) {
                                      var i = t.seriesIndex,
                                          n = t.dataPointIndex,
                                          a = t.w;
                                      return e._getBoxTooltip(a, i, n, ["Open", "High", "", "Low", "Close"], "candlestick")
                                  }
                              },
                              states: {
                                  active: {
                                      filter: {
                                          type: "none"
                                      }
                                  }
                              },
                              xaxis: {
                                  crosshairs: {
                                      width: 1
                                  }
                              }
                          }
                      }
                  }, {
                      key: "boxPlot",
                      value: function() {
                          var e = this;
                          return {
                              chart: {
                                  animations: {
                                      dynamicAnimation: {
                                          enabled: !1
                                      }
                                  }
                              },
                              stroke: {
                                  width: 1,
                                  colors: ["#24292e"]
                              },
                              dataLabels: {
                                  enabled: !1
                              },
                              tooltip: {
                                  shared: !0,
                                  custom: function(t) {
                                      var i = t.seriesIndex,
                                          n = t.dataPointIndex,
                                          a = t.w;
                                      return e._getBoxTooltip(a, i, n, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot")
                                  }
                              },
                              markers: {
                                  size: 5,
                                  strokeWidth: 1,
                                  strokeColors: "#111"
                              },
                              xaxis: {
                                  crosshairs: {
                                      width: 1
                                  }
                              }
                          }
                      }
                  }, {
                      key: "rangeBar",
                      value: function() {
                          return {
                              stroke: {
                                  width: 0,
                                  lineCap: "square"
                              },
                              plotOptions: {
                                  bar: {
                                      borderRadius: 0,
                                      dataLabels: {
                                          position: "center"
                                      }
                                  }
                              },
                              dataLabels: {
                                  enabled: !1,
                                  formatter: function(e, t) {
                                      t.ctx;
                                      var i = t.seriesIndex,
                                          n = t.dataPointIndex,
                                          a = t.w,
                                          r = a.globals.seriesRangeStart[i][n];
                                      return a.globals.seriesRangeEnd[i][n] - r
                                  },
                                  background: {
                                      enabled: !1
                                  },
                                  style: {
                                      colors: ["#fff"]
                                  }
                              },
                              tooltip: {
                                  shared: !1,
                                  followCursor: !0,
                                  custom: function(e) {
                                      return e.w.config.plotOptions && e.w.config.plotOptions.bar && e.w.config.plotOptions.bar.horizontal ? function(e) {
                                          var t = new Y(e.ctx, null),
                                              i = t.getTooltipValues(e),
                                              n = i.color,
                                              a = i.seriesName,
                                              r = i.ylabel,
                                              s = i.startVal,
                                              o = i.endVal;
                                          return t.buildCustomTooltipHTML({
                                              color: n,
                                              seriesName: a,
                                              ylabel: r,
                                              start: s,
                                              end: o
                                          })
                                      }(e) : function(e) {
                                          var t = new Y(e.ctx, null),
                                              i = t.getTooltipValues(e),
                                              n = i.color,
                                              a = i.seriesName,
                                              r = i.ylabel,
                                              s = i.start,
                                              o = i.end;
                                          return t.buildCustomTooltipHTML({
                                              color: n,
                                              seriesName: a,
                                              ylabel: r,
                                              start: s,
                                              end: o
                                          })
                                      }(e)
                                  }
                              },
                              xaxis: {
                                  tickPlacement: "between",
                                  tooltip: {
                                      enabled: !1
                                  },
                                  crosshairs: {
                                      stroke: {
                                          width: 0
                                      }
                                  }
                              }
                          }
                      }
                  }, {
                      key: "area",
                      value: function() {
                          return {
                              stroke: {
                                  width: 4
                              },
                              fill: {
                                  type: "gradient",
                                  gradient: {
                                      inverseColors: !1,
                                      shade: "light",
                                      type: "vertical",
                                      opacityFrom: .65,
                                      opacityTo: .5,
                                      stops: [0, 100, 100]
                                  }
                              },
                              markers: {
                                  size: 0,
                                  hover: {
                                      sizeOffset: 6
                                  }
                              },
                              tooltip: {
                                  followCursor: !1
                              }
                          }
                      }
                  }, {
                      key: "brush",
                      value: function(e) {
                          return y.extend(e, {
                              chart: {
                                  toolbar: {
                                      autoSelected: "selection",
                                      show: !1
                                  },
                                  zoom: {
                                      enabled: !1
                                  }
                              },
                              dataLabels: {
                                  enabled: !1
                              },
                              stroke: {
                                  width: 1
                              },
                              tooltip: {
                                  enabled: !1
                              },
                              xaxis: {
                                  tooltip: {
                                      enabled: !1
                                  }
                              }
                          })
                      }
                  }, {
                      key: "stacked100",
                      value: function(e) {
                          e.dataLabels = e.dataLabels || {}, e.dataLabels.formatter = e.dataLabels.formatter || void 0;
                          var t = e.dataLabels.formatter;
                          return e.yaxis.forEach((function(t, i) {
                              e.yaxis[i].min = 0, e.yaxis[i].max = 100
                          })), "bar" === e.chart.type && (e.dataLabels.formatter = t || function(e) {
                              return "number" == typeof e && e ? e.toFixed(0) + "%" : e
                          }), e
                      }
                  }, {
                      key: "convertCatToNumeric",
                      value: function(e) {
                          return e.xaxis.convertedCatToNumeric = !0, e
                      }
                  }, {
                      key: "convertCatToNumericXaxis",
                      value: function(e, t, i) {
                          e.xaxis.type = "numeric", e.xaxis.labels = e.xaxis.labels || {}, e.xaxis.labels.formatter = e.xaxis.labels.formatter || function(e) {
                              return y.isNumber(e) ? Math.floor(e) : e
                          };
                          var n = e.xaxis.labels.formatter,
                              a = e.xaxis.categories && e.xaxis.categories.length ? e.xaxis.categories : e.labels;
                          return i && i.length && (a = i.map((function(e) {
                              return Array.isArray(e) ? e : String(e)
                          }))), a && a.length && (e.xaxis.labels.formatter = function(e) {
                              return y.isNumber(e) ? n(a[Math.floor(e) - 1]) : n(e)
                          }), e.xaxis.categories = [], e.labels = [], e.xaxis.tickAmount = e.xaxis.tickAmount || "dataPoints", e
                      }
                  }, {
                      key: "bubble",
                      value: function() {
                          return {
                              dataLabels: {
                                  style: {
                                      colors: ["#fff"]
                                  }
                              },
                              tooltip: {
                                  shared: !1,
                                  intersect: !0
                              },
                              xaxis: {
                                  crosshairs: {
                                      width: 0
                                  }
                              },
                              fill: {
                                  type: "solid",
                                  gradient: {
                                      shade: "light",
                                      inverse: !0,
                                      shadeIntensity: .55,
                                      opacityFrom: .4,
                                      opacityTo: .8
                                  }
                              }
                          }
                      }
                  }, {
                      key: "scatter",
                      value: function() {
                          return {
                              dataLabels: {
                                  enabled: !1
                              },
                              tooltip: {
                                  shared: !1,
                                  intersect: !0
                              },
                              markers: {
                                  size: 6,
                                  strokeWidth: 1,
                                  hover: {
                                      sizeOffset: 2
                                  }
                              }
                          }
                      }
                  }, {
                      key: "heatmap",
                      value: function() {
                          return {
                              chart: {
                                  stacked: !1
                              },
                              fill: {
                                  opacity: 1
                              },
                              dataLabels: {
                                  style: {
                                      colors: ["#fff"]
                                  }
                              },
                              stroke: {
                                  colors: ["#fff"]
                              },
                              tooltip: {
                                  followCursor: !0,
                                  marker: {
                                      show: !1
                                  },
                                  x: {
                                      show: !1
                                  }
                              },
                              legend: {
                                  position: "top",
                                  markers: {
                                      shape: "square",
                                      size: 10,
                                      offsetY: 2
                                  }
                              },
                              grid: {
                                  padding: {
                                      right: 20
                                  }
                              }
                          }
                      }
                  }, {
                      key: "treemap",
                      value: function() {
                          return {
                              chart: {
                                  zoom: {
                                      enabled: !1
                                  }
                              },
                              dataLabels: {
                                  style: {
                                      fontSize: 14,
                                      fontWeight: 600,
                                      colors: ["#fff"]
                                  }
                              },
                              stroke: {
                                  show: !0,
                                  width: 2,
                                  colors: ["#fff"]
                              },
                              legend: {
                                  show: !1
                              },
                              fill: {
                                  gradient: {
                                      stops: [0, 100]
                                  }
                              },
                              tooltip: {
                                  followCursor: !0,
                                  x: {
                                      show: !1
                                  }
                              },
                              grid: {
                                  padding: {
                                      left: 0,
                                      right: 0
                                  }
                              },
                              xaxis: {
                                  crosshairs: {
                                      show: !1
                                  },
                                  tooltip: {
                                      enabled: !1
                                  }
                              }
                          }
                      }
                  }, {
                      key: "pie",
                      value: function() {
                          return {
                              chart: {
                                  toolbar: {
                                      show: !1
                                  }
                              },
                              plotOptions: {
                                  pie: {
                                      donut: {
                                          labels: {
                                              show: !1
                                          }
                                      }
                                  }
                              },
                              dataLabels: {
                                  formatter: function(e) {
                                      return e.toFixed(1) + "%"
                                  },
                                  style: {
                                      colors: ["#fff"]
                                  },
                                  background: {
                                      enabled: !1
                                  },
                                  dropShadow: {
                                      enabled: !0
                                  }
                              },
                              stroke: {
                                  colors: ["#fff"]
                              },
                              fill: {
                                  opacity: 1,
                                  gradient: {
                                      shade: "light",
                                      stops: [0, 100]
                                  }
                              },
                              tooltip: {
                                  theme: "dark",
                                  fillSeriesColor: !0
                              },
                              legend: {
                                  position: "right"
                              }
                          }
                      }
                  }, {
                      key: "donut",
                      value: function() {
                          return {
                              chart: {
                                  toolbar: {
                                      show: !1
                                  }
                              },
                              dataLabels: {
                                  formatter: function(e) {
                                      return e.toFixed(1) + "%"
                                  },
                                  style: {
                                      colors: ["#fff"]
                                  },
                                  background: {
                                      enabled: !1
                                  },
                                  dropShadow: {
                                      enabled: !0
                                  }
                              },
                              stroke: {
                                  colors: ["#fff"]
                              },
                              fill: {
                                  opacity: 1,
                                  gradient: {
                                      shade: "light",
                                      shadeIntensity: .35,
                                      stops: [80, 100],
                                      opacityFrom: 1,
                                      opacityTo: 1
                                  }
                              },
                              tooltip: {
                                  theme: "dark",
                                  fillSeriesColor: !0
                              },
                              legend: {
                                  position: "right"
                              }
                          }
                      }
                  }, {
                      key: "polarArea",
                      value: function() {
                          return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
                              chart: {
                                  toolbar: {
                                      show: !1
                                  }
                              },
                              dataLabels: {
                                  formatter: function(e) {
                                      return e.toFixed(1) + "%"
                                  },
                                  enabled: !1
                              },
                              stroke: {
                                  show: !0,
                                  width: 2
                              },
                              fill: {
                                  opacity: .7
                              },
                              tooltip: {
                                  theme: "dark",
                                  fillSeriesColor: !0
                              },
                              legend: {
                                  position: "right"
                              }
                          }
                      }
                  }, {
                      key: "radar",
                      value: function() {
                          return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
                              dataLabels: {
                                  enabled: !1,
                                  style: {
                                      fontSize: "11px"
                                  }
                              },
                              stroke: {
                                  width: 2
                              },
                              markers: {
                                  size: 3,
                                  strokeWidth: 1,
                                  strokeOpacity: 1
                              },
                              fill: {
                                  opacity: .2
                              },
                              tooltip: {
                                  shared: !1,
                                  intersect: !0,
                                  followCursor: !0
                              },
                              grid: {
                                  show: !1
                              },
                              xaxis: {
                                  labels: {
                                      formatter: function(e) {
                                          return e
                                      },
                                      style: {
                                          colors: ["#a8a8a8"],
                                          fontSize: "11px"
                                      }
                                  },
                                  tooltip: {
                                      enabled: !1
                                  },
                                  crosshairs: {
                                      show: !1
                                  }
                              }
                          }
                      }
                  }, {
                      key: "radialBar",
                      value: function() {
                          return {
                              chart: {
                                  animations: {
                                      dynamicAnimation: {
                                          enabled: !0,
                                          speed: 800
                                      }
                                  },
                                  toolbar: {
                                      show: !1
                                  }
                              },
                              fill: {
                                  gradient: {
                                      shade: "dark",
                                      shadeIntensity: .4,
                                      inverseColors: !1,
                                      type: "diagonal2",
                                      opacityFrom: 1,
                                      opacityTo: 1,
                                      stops: [70, 98, 100]
                                  }
                              },
                              legend: {
                                  show: !1,
                                  position: "right"
                              },
                              tooltip: {
                                  enabled: !1,
                                  fillSeriesColor: !0
                              }
                          }
                      }
                  }, {
                      key: "_getBoxTooltip",
                      value: function(e, t, i, n, a) {
                          var r = e.globals.seriesCandleO[t][i],
                              s = e.globals.seriesCandleH[t][i],
                              o = e.globals.seriesCandleM[t][i],
                              l = e.globals.seriesCandleL[t][i],
                              c = e.globals.seriesCandleC[t][i];
                          return e.config.series[t].type && e.config.series[t].type !== a ? '<div class="apexcharts-custom-tooltip">\n          '.concat(e.config.series[t].name ? e.config.series[t].name : "series-" + (t + 1), ": <strong>").concat(e.globals.series[t][i], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(e.config.chart.type, '">') + "<div>".concat(n[0], ': <span class="value">') + r + "</span></div>" + "<div>".concat(n[1], ': <span class="value">') + s + "</span></div>" + (o ? "<div>".concat(n[2], ': <span class="value">') + o + "</span></div>" : "") + "<div>".concat(n[3], ': <span class="value">') + l + "</span></div>" + "<div>".concat(n[4], ': <span class="value">') + c + "</span></div></div>"
                      }
                  }]), e
              }(),
              j = function() {
                  function e(t) {
                      o(this, e), this.opts = t
                  }
                  return c(e, [{
                      key: "init",
                      value: function(e) {
                          var t = e.responsiveOverride,
                              i = this.opts,
                              n = new M,
                              a = new B(i);
                          this.chartType = i.chart.type, "histogram" === this.chartType && (i.chart.type = "bar", i = y.extend({
                              plotOptions: {
                                  bar: {
                                      columnWidth: "99.99%"
                                  }
                              }
                          }, i)), i = this.extendYAxis(i), i = this.extendAnnotations(i);
                          var r = n.init(),
                              o = {};
                          if (i && "object" === s(i)) {
                              var l = {};
                              l = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "histogram", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(i.chart.type) ? a[i.chart.type]() : a.line(), i.chart.brush && i.chart.brush.enabled && (l = a.brush(l)), i.chart.stacked && "100%" === i.chart.stackType && (i = a.stacked100(i)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(i), i.xaxis = i.xaxis || window.Apex.xaxis || {}, t || (i.xaxis.convertedCatToNumeric = !1), ((i = this.checkForCatToNumericXAxis(this.chartType, l, i)).chart.sparkline && i.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) && (l = a.sparkline(l)), o = y.extend(r, l)
                          }
                          var c = y.extend(o, window.Apex);
                          return r = y.extend(c, i), this.handleUserInputErrors(r)
                      }
                  }, {
                      key: "checkForCatToNumericXAxis",
                      value: function(e, t, i) {
                          var n = new B(i),
                              a = ("bar" === e || "boxPlot" === e) && i.plotOptions && i.plotOptions.bar && i.plotOptions.bar.horizontal,
                              r = "pie" === e || "polarArea" === e || "donut" === e || "radar" === e || "radialBar" === e || "heatmap" === e,
                              s = "datetime" !== i.xaxis.type && "numeric" !== i.xaxis.type,
                              o = i.xaxis.tickPlacement ? i.xaxis.tickPlacement : t.xaxis && t.xaxis.tickPlacement;
                          return a || r || !s || "between" === o || (i = n.convertCatToNumeric(i)), i
                      }
                  }, {
                      key: "extendYAxis",
                      value: function(e, t) {
                          var i = new M;
                          (void 0 === e.yaxis || !e.yaxis || Array.isArray(e.yaxis) && 0 === e.yaxis.length) && (e.yaxis = {}), e.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (e.yaxis = y.extend(e.yaxis, window.Apex.yaxis)), e.yaxis.constructor !== Array ? e.yaxis = [y.extend(i.yAxis, e.yaxis)] : e.yaxis = y.extendArray(e.yaxis, i.yAxis);
                          var n = !1;
                          e.yaxis.forEach((function(e) {
                              e.logarithmic && (n = !0)
                          }));
                          var a = e.series;
                          return t && !a && (a = t.config.series), n && a.length !== e.yaxis.length && a.length && (e.yaxis = a.map((function(t, n) {
                              if (t.name || (a[n].name = "series-".concat(n + 1)), e.yaxis[n]) return e.yaxis[n].seriesName = a[n].name, e.yaxis[n];
                              var r = y.extend(i.yAxis, e.yaxis[0]);
                              return r.show = !1, r
                          }))), n && a.length > 1 && a.length !== e.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."), e
                      }
                  }, {
                      key: "extendAnnotations",
                      value: function(e) {
                          return void 0 === e.annotations && (e.annotations = {}, e.annotations.yaxis = [], e.annotations.xaxis = [], e.annotations.points = []), e = this.extendYAxisAnnotations(e), e = this.extendXAxisAnnotations(e), this.extendPointAnnotations(e)
                      }
                  }, {
                      key: "extendYAxisAnnotations",
                      value: function(e) {
                          var t = new M;
                          return e.annotations.yaxis = y.extendArray(void 0 !== e.annotations.yaxis ? e.annotations.yaxis : [], t.yAxisAnnotation), e
                      }
                  }, {
                      key: "extendXAxisAnnotations",
                      value: function(e) {
                          var t = new M;
                          return e.annotations.xaxis = y.extendArray(void 0 !== e.annotations.xaxis ? e.annotations.xaxis : [], t.xAxisAnnotation), e
                      }
                  }, {
                      key: "extendPointAnnotations",
                      value: function(e) {
                          var t = new M;
                          return e.annotations.points = y.extendArray(void 0 !== e.annotations.points ? e.annotations.points : [], t.pointAnnotation), e
                      }
                  }, {
                      key: "checkForDarkTheme",
                      value: function(e) {
                          e.theme && "dark" === e.theme.mode && (e.tooltip || (e.tooltip = {}), "light" !== e.tooltip.theme && (e.tooltip.theme = "dark"), e.chart.foreColor || (e.chart.foreColor = "#f6f7f8"), e.chart.background || (e.chart.background = "#424242"), e.theme.palette || (e.theme.palette = "palette4"))
                      }
                  }, {
                      key: "handleUserInputErrors",
                      value: function(e) {
                          var t = e;
                          if (t.tooltip.shared && t.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
                          if ("bar" === t.chart.type && t.plotOptions.bar.horizontal) {
                              if (t.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
                              t.yaxis[0].reversed && (t.yaxis[0].opposite = !0), t.xaxis.tooltip.enabled = !1, t.yaxis[0].tooltip.enabled = !1, t.chart.zoom.enabled = !1
                          }
                          return "bar" !== t.chart.type && "rangeBar" !== t.chart.type || t.tooltip.shared && "barWidth" === t.xaxis.crosshairs.width && t.series.length > 1 && (t.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== t.chart.type && "boxPlot" !== t.chart.type || t.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(t.chart.type, " chart is not supported.")), t.yaxis[0].reversed = !1), t
                      }
                  }]), e
              }(),
              W = function() {
                  function e() {
                      o(this, e)
                  }
                  return c(e, [{
                      key: "initGlobalVars",
                      value: function(e) {
                          e.series = [], e.seriesCandleO = [], e.seriesCandleH = [], e.seriesCandleM = [], e.seriesCandleL = [], e.seriesCandleC = [], e.seriesRangeStart = [], e.seriesRangeEnd = [], e.seriesRangeBar = [], e.seriesPercent = [], e.seriesGoals = [], e.seriesX = [], e.seriesZ = [], e.seriesNames = [], e.seriesTotals = [], e.seriesLog = [], e.seriesColors = [], e.stackedSeriesTotals = [], e.seriesXvalues = [], e.seriesYvalues = [], e.labels = [], e.categoryLabels = [], e.timescaleLabels = [], e.noLabelsProvided = !1, e.resizeTimer = null, e.selectionResizeTimer = null, e.delayedElements = [], e.pointsArray = [], e.dataLabelsRects = [], e.isXNumeric = !1, e.xaxisLabelsCount = 0, e.skipLastTimelinelabel = !1, e.skipFirstTimelinelabel = !1, e.isDataXYZ = !1, e.isMultiLineX = !1, e.isMultipleYAxis = !1, e.maxY = -Number.MAX_VALUE, e.minY = Number.MIN_VALUE, e.minYArr = [], e.maxYArr = [], e.maxX = -Number.MAX_VALUE, e.minX = Number.MAX_VALUE, e.initialMaxX = -Number.MAX_VALUE, e.initialMinX = Number.MAX_VALUE, e.maxDate = 0, e.minDate = Number.MAX_VALUE, e.minZ = Number.MAX_VALUE, e.maxZ = -Number.MAX_VALUE, e.minXDiff = Number.MAX_VALUE, e.yAxisScale = [], e.xAxisScale = null, e.xAxisTicksPositions = [], e.yLabelsCoords = [], e.yTitleCoords = [], e.barPadForNumericAxis = 0, e.padHorizontal = 0, e.xRange = 0, e.yRange = [], e.zRange = 0, e.dataPoints = 0, e.xTickAmount = 0
                      }
                  }, {
                      key: "globalVars",
                      value: function(e) {
                          return {
                              chartID: null,
                              cuid: null,
                              events: {
                                  beforeMount: [],
                                  mounted: [],
                                  updated: [],
                                  clicked: [],
                                  selection: [],
                                  dataPointSelection: [],
                                  zoomed: [],
                                  scrolled: []
                              },
                              colors: [],
                              clientX: null,
                              clientY: null,
                              fill: {
                                  colors: []
                              },
                              stroke: {
                                  colors: []
                              },
                              dataLabels: {
                                  style: {
                                      colors: []
                                  }
                              },
                              radarPolygons: {
                                  fill: {
                                      colors: []
                                  }
                              },
                              markers: {
                                  colors: [],
                                  size: e.markers.size,
                                  largestSize: 0
                              },
                              animationEnded: !1,
                              isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
                              isDirty: !1,
                              isExecCalled: !1,
                              initialConfig: null,
                              initialSeries: [],
                              lastXAxis: [],
                              lastYAxis: [],
                              columnSeries: null,
                              labels: [],
                              timescaleLabels: [],
                              noLabelsProvided: !1,
                              allSeriesCollapsed: !1,
                              collapsedSeries: [],
                              collapsedSeriesIndices: [],
                              ancillaryCollapsedSeries: [],
                              ancillaryCollapsedSeriesIndices: [],
                              risingSeries: [],
                              dataFormatXNumeric: !1,
                              capturedSeriesIndex: -1,
                              capturedDataPointIndex: -1,
                              selectedDataPoints: [],
                              goldenPadding: 35,
                              invalidLogScale: !1,
                              ignoreYAxisIndexes: [],
                              yAxisSameScaleIndices: [],
                              maxValsInArrayIndex: 0,
                              radialSize: 0,
                              selection: void 0,
                              zoomEnabled: "zoom" === e.chart.toolbar.autoSelected && e.chart.toolbar.tools.zoom && e.chart.zoom.enabled,
                              panEnabled: "pan" === e.chart.toolbar.autoSelected && e.chart.toolbar.tools.pan,
                              selectionEnabled: "selection" === e.chart.toolbar.autoSelected && e.chart.toolbar.tools.selection,
                              yaxis: null,
                              mousedown: !1,
                              lastClientPosition: {},
                              visibleXRange: void 0,
                              yValueDecimal: 0,
                              total: 0,
                              SVGNS: "http://www.w3.org/2000/svg",
                              svgWidth: 0,
                              svgHeight: 0,
                              noData: !1,
                              locale: {},
                              dom: {},
                              memory: {
                                  methodsToExec: []
                              },
                              shouldAnimate: !0,
                              skipLastTimelinelabel: !1,
                              skipFirstTimelinelabel: !1,
                              delayedElements: [],
                              axisCharts: !0,
                              isDataXYZ: !1,
                              resized: !1,
                              resizeTimer: null,
                              comboCharts: !1,
                              dataChanged: !1,
                              previousPaths: [],
                              allSeriesHasEqualX: !0,
                              pointsArray: [],
                              dataLabelsRects: [],
                              lastDrawnDataLabelsIndexes: [],
                              hasNullValues: !1,
                              easing: null,
                              zoomed: !1,
                              gridWidth: 0,
                              gridHeight: 0,
                              rotateXLabels: !1,
                              defaultLabels: !1,
                              xLabelFormatter: void 0,
                              yLabelFormatters: [],
                              xaxisTooltipFormatter: void 0,
                              ttKeyFormatter: void 0,
                              ttVal: void 0,
                              ttZFormatter: void 0,
                              LINE_HEIGHT_RATIO: 1.618,
                              xAxisLabelsHeight: 0,
                              xAxisLabelsWidth: 0,
                              yAxisLabelsWidth: 0,
                              scaleX: 1,
                              scaleY: 1,
                              translateX: 0,
                              translateY: 0,
                              translateYAxisX: [],
                              yAxisWidths: [],
                              translateXAxisY: 0,
                              translateXAxisX: 0,
                              tooltip: null
                          }
                      }
                  }, {
                      key: "init",
                      value: function(e) {
                          var t = this.globalVars(e);
                          return this.initGlobalVars(t), t.initialConfig = y.extend({}, e), t.initialSeries = y.clone(e.series), t.lastXAxis = y.clone(t.initialConfig.xaxis), t.lastYAxis = y.clone(t.initialConfig.yaxis), t
                      }
                  }]), e
              }(),
              V = function() {
                  function e(t) {
                      o(this, e), this.opts = t
                  }
                  return c(e, [{
                      key: "init",
                      value: function() {
                          var e = new j(this.opts).init({
                              responsiveOverride: !1
                          });
                          return {
                              config: e,
                              globals: (new W).init(e)
                          }
                      }
                  }]), e
              }(),
              q = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new T(this.ctx)
                  }
                  return c(e, [{
                      key: "isMultiFormat",
                      value: function() {
                          return this.isFormatXY() || this.isFormat2DArray()
                      }
                  }, {
                      key: "isFormatXY",
                      value: function() {
                          var e = this.w.config.series.slice(),
                              t = new z(this.ctx);
                          if (this.activeSeriesIndex = t.getActiveConfigSeriesIndex(), void 0 !== e[this.activeSeriesIndex].data && e[this.activeSeriesIndex].data.length > 0 && null !== e[this.activeSeriesIndex].data[0] && void 0 !== e[this.activeSeriesIndex].data[0].x && null !== e[this.activeSeriesIndex].data[0]) return !0
                      }
                  }, {
                      key: "isFormat2DArray",
                      value: function() {
                          var e = this.w.config.series.slice(),
                              t = new z(this.ctx);
                          if (this.activeSeriesIndex = t.getActiveConfigSeriesIndex(), void 0 !== e[this.activeSeriesIndex].data && e[this.activeSeriesIndex].data.length > 0 && void 0 !== e[this.activeSeriesIndex].data[0] && null !== e[this.activeSeriesIndex].data[0] && e[this.activeSeriesIndex].data[0].constructor === Array) return !0
                      }
                  }, {
                      key: "handleFormat2DArray",
                      value: function(e, t) {
                          for (var i = this.w.config, n = this.w.globals, a = "boxPlot" === i.chart.type || "boxPlot" === i.series[t].type, r = 0; r < e[t].data.length; r++)
                              if (void 0 !== e[t].data[r][1] && (Array.isArray(e[t].data[r][1]) && 4 === e[t].data[r][1].length && !a ? this.twoDSeries.push(y.parseNumber(e[t].data[r][1][3])) : e[t].data[r].length >= 5 ? this.twoDSeries.push(y.parseNumber(e[t].data[r][4])) : this.twoDSeries.push(y.parseNumber(e[t].data[r][1])), n.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
                                  var s = new Date(e[t].data[r][0]);
                                  s = new Date(s).getTime(), this.twoDSeriesX.push(s)
                              } else this.twoDSeriesX.push(e[t].data[r][0]);
                          for (var o = 0; o < e[t].data.length; o++) void 0 !== e[t].data[o][2] && (this.threeDSeries.push(e[t].data[o][2]), n.isDataXYZ = !0)
                      }
                  }, {
                      key: "handleFormatXY",
                      value: function(e, t) {
                          var i = this.w.config,
                              n = this.w.globals,
                              a = new X(this.ctx),
                              r = t;
                          n.collapsedSeriesIndices.indexOf(t) > -1 && (r = this.activeSeriesIndex);
                          for (var s = 0; s < e[t].data.length; s++) void 0 !== e[t].data[s].y && (Array.isArray(e[t].data[s].y) ? this.twoDSeries.push(y.parseNumber(e[t].data[s].y[e[t].data[s].y.length - 1])) : this.twoDSeries.push(y.parseNumber(e[t].data[s].y))), void 0 !== e[t].data[s].goals && Array.isArray(e[t].data[s].goals) ? (void 0 === this.seriesGoals[t] && (this.seriesGoals[t] = []), this.seriesGoals[t].push(e[t].data[s].goals)) : (void 0 === this.seriesGoals[t] && (this.seriesGoals[t] = []), this.seriesGoals[t].push(null));
                          for (var o = 0; o < e[r].data.length; o++) {
                              var l = "string" == typeof e[r].data[o].x,
                                  c = Array.isArray(e[r].data[o].x),
                                  h = !c && !!a.isValidDate(e[r].data[o].x.toString());
                              if (l || h)
                                  if (l || i.xaxis.convertedCatToNumeric) {
                                      var u = n.isBarHorizontal && n.isRangeData;
                                      "datetime" !== i.xaxis.type || u ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(e[r].data[o].x)) : this.twoDSeriesX.push(a.parseDate(e[r].data[o].x))
                                  } else "datetime" === i.xaxis.type ? this.twoDSeriesX.push(a.parseDate(e[r].data[o].x.toString())) : (n.dataFormatXNumeric = !0, n.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(e[r].data[o].x)));
                              else c ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(e[r].data[o].x)) : (n.isXNumeric = !0, n.dataFormatXNumeric = !0, this.twoDSeriesX.push(e[r].data[o].x))
                          }
                          if (e[t].data[0] && void 0 !== e[t].data[0].z) {
                              for (var d = 0; d < e[t].data.length; d++) this.threeDSeries.push(e[t].data[d].z);
                              n.isDataXYZ = !0
                          }
                      }
                  }, {
                      key: "handleRangeData",
                      value: function(e, t) {
                          var i = this.w.globals,
                              n = {};
                          return this.isFormat2DArray() ? n = this.handleRangeDataFormat("array", e, t) : this.isFormatXY() && (n = this.handleRangeDataFormat("xy", e, t)), i.seriesRangeStart.push(n.start), i.seriesRangeEnd.push(n.end), i.seriesRangeBar.push(n.rangeUniques), i.seriesRangeBar.forEach((function(e, t) {
                              e && e.forEach((function(e, t) {
                                  e.y.forEach((function(t, i) {
                                      for (var n = 0; n < e.y.length; n++)
                                          if (i !== n) {
                                              var a = t.y1,
                                                  r = t.y2,
                                                  s = e.y[n].y1;
                                              a <= e.y[n].y2 && s <= r && (e.overlaps.indexOf(t.rangeName) < 0 && e.overlaps.push(t.rangeName), e.overlaps.indexOf(e.y[n].rangeName) < 0 && e.overlaps.push(e.y[n].rangeName))
                                          }
                                  }))
                              }))
                          })), n
                      }
                  }, {
                      key: "handleCandleStickBoxData",
                      value: function(e, t) {
                          var i = this.w.globals,
                              n = {};
                          return this.isFormat2DArray() ? n = this.handleCandleStickBoxDataFormat("array", e, t) : this.isFormatXY() && (n = this.handleCandleStickBoxDataFormat("xy", e, t)), i.seriesCandleO[t] = n.o, i.seriesCandleH[t] = n.h, i.seriesCandleM[t] = n.m, i.seriesCandleL[t] = n.l, i.seriesCandleC[t] = n.c, n
                      }
                  }, {
                      key: "handleRangeDataFormat",
                      value: function(e, t, i) {
                          var n = [],
                              a = [],
                              r = t[i].data.filter((function(e, t, i) {
                                  return t === i.findIndex((function(t) {
                                      return t.x === e.x
                                  }))
                              })).map((function(e, t) {
                                  return {
                                      x: e.x,
                                      overlaps: [],
                                      y: []
                                  }
                              })),
                              s = "Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",
                              o = new z(this.ctx).getActiveConfigSeriesIndex();
                          if ("array" === e) {
                              if (2 !== t[o].data[0][1].length) throw new Error(s);
                              for (var l = 0; l < t[i].data.length; l++) n.push(t[i].data[l][1][0]), a.push(t[i].data[l][1][1])
                          } else if ("xy" === e) {
                              if (2 !== t[o].data[0].y.length) throw new Error(s);
                              for (var c = function(e) {
                                      var s = y.randomId(),
                                          o = t[i].data[e].x,
                                          l = {
                                              y1: t[i].data[e].y[0],
                                              y2: t[i].data[e].y[1],
                                              rangeName: s
                                          };
                                      t[i].data[e].rangeName = s;
                                      var c = r.findIndex((function(e) {
                                          return e.x === o
                                      }));
                                      r[c].y.push(l), n.push(l.y1), a.push(l.y2)
                                  }, h = 0; h < t[i].data.length; h++) c(h)
                          }
                          return {
                              start: n,
                              end: a,
                              rangeUniques: r
                          }
                      }
                  }, {
                      key: "handleCandleStickBoxDataFormat",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = "boxPlot" === n.config.chart.type || "boxPlot" === n.config.series[i].type,
                              r = [],
                              s = [],
                              o = [],
                              l = [],
                              c = [];
                          if ("array" === e)
                              if (a && 6 === t[i].data[0].length || !a && 5 === t[i].data[0].length)
                                  for (var h = 0; h < t[i].data.length; h++) r.push(t[i].data[h][1]), s.push(t[i].data[h][2]), a ? (o.push(t[i].data[h][3]), l.push(t[i].data[h][4]), c.push(t[i].data[h][5])) : (l.push(t[i].data[h][3]), c.push(t[i].data[h][4]));
                              else
                                  for (var u = 0; u < t[i].data.length; u++) Array.isArray(t[i].data[u][1]) && (r.push(t[i].data[u][1][0]), s.push(t[i].data[u][1][1]), a ? (o.push(t[i].data[u][1][2]), l.push(t[i].data[u][1][3]), c.push(t[i].data[u][1][4])) : (l.push(t[i].data[u][1][2]), c.push(t[i].data[u][1][3])));
                          else if ("xy" === e)
                              for (var d = 0; d < t[i].data.length; d++) Array.isArray(t[i].data[d].y) && (r.push(t[i].data[d].y[0]), s.push(t[i].data[d].y[1]), a ? (o.push(t[i].data[d].y[2]), l.push(t[i].data[d].y[3]), c.push(t[i].data[d].y[4])) : (l.push(t[i].data[d].y[2]), c.push(t[i].data[d].y[3])));
                          return {
                              o: r,
                              h: s,
                              m: o,
                              l,
                              c
                          }
                      }
                  }, {
                      key: "parseDataAxisCharts",
                      value: function(e) {
                          var t = this,
                              i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx,
                              n = this.w.config,
                              a = this.w.globals,
                              r = new X(i),
                              s = n.labels.length > 0 ? n.labels.slice() : n.xaxis.categories.slice();
                          a.isRangeBar = "rangeBar" === n.chart.type && a.isBarHorizontal;
                          for (var o = function() {
                                  for (var e = 0; e < s.length; e++)
                                      if ("string" == typeof s[e]) {
                                          if (!r.isValidDate(s[e])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                                          t.twoDSeriesX.push(r.parseDate(s[e]))
                                      } else t.twoDSeriesX.push(s[e])
                              }, l = 0; l < e.length; l++) {
                              if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === e[l].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
                              if ("rangeBar" !== n.chart.type && "rangeArea" !== n.chart.type && "rangeBar" !== e[l].type && "rangeArea" !== e[l].type || (a.isRangeData = !0, this.handleRangeData(e, l)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(e, l) : this.isFormatXY() && this.handleFormatXY(e, l), "candlestick" !== n.chart.type && "candlestick" !== e[l].type && "boxPlot" !== n.chart.type && "boxPlot" !== e[l].type || this.handleCandleStickBoxData(e, l), a.series.push(this.twoDSeries), a.labels.push(this.twoDSeriesX), a.seriesX.push(this.twoDSeriesX), a.seriesGoals = this.seriesGoals, l !== this.activeSeriesIndex || this.fallbackToCategory || (a.isXNumeric = !0);
                              else {
                                  "datetime" === n.xaxis.type ? (a.isXNumeric = !0, o(), a.seriesX.push(this.twoDSeriesX)) : "numeric" === n.xaxis.type && (a.isXNumeric = !0, s.length > 0 && (this.twoDSeriesX = s, a.seriesX.push(this.twoDSeriesX))), a.labels.push(this.twoDSeriesX);
                                  var c = e[l].data.map((function(e) {
                                      return y.parseNumber(e)
                                  }));
                                  a.series.push(c)
                              }
                              a.seriesZ.push(this.threeDSeries), void 0 !== e[l].name ? a.seriesNames.push(e[l].name) : a.seriesNames.push("series-" + parseInt(l + 1, 10)), void 0 !== e[l].color ? a.seriesColors.push(e[l].color) : a.seriesColors.push(void 0)
                          }
                          return this.w
                      }
                  }, {
                      key: "parseDataNonAxisCharts",
                      value: function(e) {
                          var t = this.w.globals,
                              i = this.w.config;
                          t.series = e.slice(), t.seriesNames = i.labels.slice();
                          for (var n = 0; n < t.series.length; n++) void 0 === t.seriesNames[n] && t.seriesNames.push("series-" + (n + 1));
                          return this.w
                      }
                  }, {
                      key: "handleExternalLabelsData",
                      value: function(e) {
                          var t = this.w.config,
                              i = this.w.globals;
                          t.xaxis.categories.length > 0 ? i.labels = t.xaxis.categories : t.labels.length > 0 ? i.labels = t.labels.slice() : this.fallbackToCategory ? (i.labels = i.labels[0], i.seriesRangeBar.length && (i.seriesRangeBar.map((function(e) {
                              e.forEach((function(e) {
                                  i.labels.indexOf(e.x) < 0 && e.x && i.labels.push(e.x)
                              }))
                          })), i.labels = i.labels.filter((function(e, t, i) {
                              return i.indexOf(e) === t
                          }))), t.xaxis.convertedCatToNumeric && (new B(t).convertCatToNumericXaxis(t, this.ctx, i.seriesX[0]), this._generateExternalLabels(e))) : this._generateExternalLabels(e)
                      }
                  }, {
                      key: "_generateExternalLabels",
                      value: function(e) {
                          var t = this.w.globals,
                              i = this.w.config,
                              n = [];
                          if (t.axisCharts) {
                              if (t.series.length > 0)
                                  if (this.isFormatXY())
                                      for (var a = i.series.map((function(e, t) {
                                              return e.data.filter((function(e, t, i) {
                                                  return i.findIndex((function(t) {
                                                      return t.x === e.x
                                                  })) === t
                                              }))
                                          })), r = a.reduce((function(e, t, i, n) {
                                              return n[e].length > t.length ? e : i
                                          }), 0), s = 0; s < a[r].length; s++) n.push(s + 1);
                                  else
                                      for (var o = 0; o < t.series[t.maxValsInArrayIndex].length; o++) n.push(o + 1);
                              t.seriesX = [];
                              for (var l = 0; l < e.length; l++) t.seriesX.push(n);
                              t.isXNumeric = !0
                          }
                          if (0 === n.length) {
                              n = t.axisCharts ? [] : t.series.map((function(e, t) {
                                  return t + 1
                              }));
                              for (var c = 0; c < e.length; c++) t.seriesX.push(n)
                          }
                          t.labels = n, i.xaxis.convertedCatToNumeric && (t.categoryLabels = n.map((function(e) {
                              return i.xaxis.labels.formatter(e)
                          }))), t.noLabelsProvided = !0
                      }
                  }, {
                      key: "parseData",
                      value: function(e) {
                          var t = this.w,
                              i = t.config,
                              n = t.globals;
                          if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), n.axisCharts ? this.parseDataAxisCharts(e) : this.parseDataNonAxisCharts(e), this.coreUtils.getLargestSeries(), "bar" === i.chart.type && i.chart.stacked) {
                              var a = new z(this.ctx);
                              n.series = a.setNullSeriesToZeroValues(n.series)
                          }
                          this.coreUtils.getSeriesTotals(), n.axisCharts && this.coreUtils.getStackedSeriesTotals(), this.coreUtils.getPercentSeries(), n.dataFormatXNumeric || n.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(e);
                          for (var r = this.coreUtils.getCategoryLabels(n.labels), s = 0; s < r.length; s++)
                              if (Array.isArray(r[s])) {
                                  n.isMultiLineX = !0;
                                  break
                              }
                      }
                  }, {
                      key: "excludeCollapsedSeriesInYAxis",
                      value: function() {
                          var e = this,
                              t = this.w;
                          t.globals.ignoreYAxisIndexes = t.globals.collapsedSeries.map((function(i, n) {
                              if (e.w.globals.isMultipleYAxis && !t.config.chart.stacked) return i.index
                          }))
                      }
                  }]), e
              }(),
              G = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.tooltipKeyFormat = "dd MMM"
                  }
                  return c(e, [{
                      key: "xLabelFormat",
                      value: function(e, t, i, n) {
                          var a = this.w;
                          if ("datetime" === a.config.xaxis.type && void 0 === a.config.xaxis.labels.formatter && void 0 === a.config.tooltip.x.formatter) {
                              var r = new X(this.ctx);
                              return r.formatDate(r.getDate(t), a.config.tooltip.x.format)
                          }
                          return e(t, i, n)
                      }
                  }, {
                      key: "defaultGeneralFormatter",
                      value: function(e) {
                          return Array.isArray(e) ? e.map((function(e) {
                              return e
                          })) : e
                      }
                  }, {
                      key: "defaultYFormatter",
                      value: function(e, t, i) {
                          var n = this.w;
                          return y.isNumber(e) && (e = 0 !== n.globals.yValueDecimal ? e.toFixed(void 0 !== t.decimalsInFloat ? t.decimalsInFloat : n.globals.yValueDecimal) : n.globals.maxYArr[i] - n.globals.minYArr[i] < 5 ? e.toFixed(1) : e.toFixed(0)), e
                      }
                  }, {
                      key: "setLabelFormatters",
                      value: function() {
                          var e = this,
                              t = this.w;
                          return t.globals.xaxisTooltipFormatter = function(t) {
                              return e.defaultGeneralFormatter(t)
                          }, t.globals.ttKeyFormatter = function(t) {
                              return e.defaultGeneralFormatter(t)
                          }, t.globals.ttZFormatter = function(e) {
                              return e
                          }, t.globals.legendFormatter = function(t) {
                              return e.defaultGeneralFormatter(t)
                          }, void 0 !== t.config.xaxis.labels.formatter ? t.globals.xLabelFormatter = t.config.xaxis.labels.formatter : t.globals.xLabelFormatter = function(e) {
                              if (y.isNumber(e)) {
                                  if (!t.config.xaxis.convertedCatToNumeric && "numeric" === t.config.xaxis.type) {
                                      if (y.isNumber(t.config.xaxis.decimalsInFloat)) return e.toFixed(t.config.xaxis.decimalsInFloat);
                                      var i = t.globals.maxX - t.globals.minX;
                                      return i > 0 && i < 100 ? e.toFixed(1) : e.toFixed(0)
                                  }
                                  return t.globals.isBarHorizontal && t.globals.maxY - t.globals.minYArr < 4 ? e.toFixed(1) : e.toFixed(0)
                              }
                              return e
                          }, "function" == typeof t.config.tooltip.x.formatter ? t.globals.ttKeyFormatter = t.config.tooltip.x.formatter : t.globals.ttKeyFormatter = t.globals.xLabelFormatter, "function" == typeof t.config.xaxis.tooltip.formatter && (t.globals.xaxisTooltipFormatter = t.config.xaxis.tooltip.formatter), (Array.isArray(t.config.tooltip.y) || void 0 !== t.config.tooltip.y.formatter) && (t.globals.ttVal = t.config.tooltip.y), void 0 !== t.config.tooltip.z.formatter && (t.globals.ttZFormatter = t.config.tooltip.z.formatter), void 0 !== t.config.legend.formatter && (t.globals.legendFormatter = t.config.legend.formatter), t.config.yaxis.forEach((function(i, n) {
                              void 0 !== i.labels.formatter ? t.globals.yLabelFormatters[n] = i.labels.formatter : t.globals.yLabelFormatters[n] = function(a) {
                                  return t.globals.xyCharts ? Array.isArray(a) ? a.map((function(t) {
                                      return e.defaultYFormatter(t, i, n)
                                  })) : e.defaultYFormatter(a, i, n) : a
                              }
                          })), t.globals
                      }
                  }, {
                      key: "heatmapLabelFormatters",
                      value: function() {
                          var e = this.w;
                          if ("heatmap" === e.config.chart.type) {
                              e.globals.yAxisScale[0].result = e.globals.seriesNames.slice();
                              var t = e.globals.seriesNames.reduce((function(e, t) {
                                  return e.length > t.length ? e : t
                              }), 0);
                              e.globals.yAxisScale[0].niceMax = t, e.globals.yAxisScale[0].niceMin = t
                          }
                      }
                  }]), e
              }(),
              U = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "getLabel",
                      value: function(e, t, i, n) {
                          var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
                              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
                              s = this.w,
                              o = void 0 === e[n] ? "" : e[n],
                              l = o,
                              c = s.globals.xLabelFormatter,
                              h = s.config.xaxis.labels.formatter,
                              u = !1,
                              d = new G(this.ctx),
                              f = o;
                          l = d.xLabelFormat(c, o, f, {
                              i: n,
                              dateFormatter: new X(this.ctx).formatDate,
                              w: s
                          }), void 0 !== h && (l = h(o, e[n], {
                              i: n,
                              dateFormatter: new X(this.ctx).formatDate,
                              w: s
                          }));
                          var p = function(e) {
                              var i = null;
                              return t.forEach((function(e) {
                                  "month" === e.unit ? i = "year" : "day" === e.unit ? i = "month" : "hour" === e.unit ? i = "day" : "minute" === e.unit && (i = "hour")
                              })), i === e
                          };
                          t.length > 0 ? (u = p(t[n].unit), i = t[n].position, l = t[n].value) : "datetime" === s.config.xaxis.type && void 0 === h && (l = ""), void 0 === l && (l = ""), l = Array.isArray(l) ? l : l.toString();
                          var g = new S(this.ctx),
                              x = {};
                          x = s.globals.rotateXLabels ? g.getTextRects(l, parseInt(r, 10), null, "rotate(".concat(s.config.xaxis.labels.rotate, " 0 0)"), !1) : g.getTextRects(l, parseInt(r, 10));
                          var v = !s.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                          return !Array.isArray(l) && (0 === l.indexOf("NaN") || 0 === l.toLowerCase().indexOf("invalid") || l.toLowerCase().indexOf("infinity") >= 0 || a.indexOf(l) >= 0 && v) && (l = ""), {
                              x: i,
                              text: l,
                              textRect: x,
                              isBold: u
                          }
                      }
                  }, {
                      key: "checkLabelBasedOnTickamount",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = n.config.xaxis.tickAmount;
                          return "dataPoints" === a && (a = Math.round(n.globals.gridWidth / 120)), a > i || e % Math.round(i / (a + 1)) == 0 || (t.text = ""), t
                      }
                  }, {
                      key: "checkForOverflowingLabels",
                      value: function(e, t, i, n, a) {
                          var r = this.w;
                          if (0 === e && r.globals.skipFirstTimelinelabel && (t.text = ""), e === i - 1 && r.globals.skipLastTimelinelabel && (t.text = ""), r.config.xaxis.labels.hideOverlappingLabels && n.length > 0) {
                              var s = a[a.length - 1];
                              t.x < s.textRect.width / (r.globals.rotateXLabels ? Math.abs(r.config.xaxis.labels.rotate) / 12 : 1.01) + s.x && (t.text = "")
                          }
                          return t
                      }
                  }, {
                      key: "checkForReversedLabels",
                      value: function(e, t) {
                          var i = this.w;
                          return i.config.yaxis[e] && i.config.yaxis[e].reversed && t.reverse(), t
                      }
                  }, {
                      key: "isYAxisHidden",
                      value: function(e) {
                          var t = this.w,
                              i = new T(this.ctx);
                          return !t.config.yaxis[e].show || !t.config.yaxis[e].showForNullSeries && i.isSeriesNull(e) && -1 === t.globals.collapsedSeriesIndices.indexOf(e)
                      }
                  }, {
                      key: "getYAxisForeColor",
                      value: function(e, t) {
                          var i = this.w;
                          return Array.isArray(e) && i.globals.yAxisScale[t] && this.ctx.theme.pushExtraColors(e, i.globals.yAxisScale[t].result.length, !1), e
                      }
                  }, {
                      key: "drawYAxisTicks",
                      value: function(e, t, i, n, a, r, s) {
                          var o = this.w,
                              l = new S(this.ctx),
                              c = o.globals.translateY;
                          if (n.show && t > 0) {
                              !0 === o.config.yaxis[a].opposite && (e += n.width);
                              for (var h = t; h >= 0; h--) {
                                  var u = c + t / 10 + o.config.yaxis[a].labels.offsetY - 1;
                                  o.globals.isBarHorizontal && (u = r * h), "heatmap" === o.config.chart.type && (u += r / 2);
                                  var d = l.drawLine(e + i.offsetX - n.width + n.offsetX, u + n.offsetY, e + i.offsetX + n.offsetX, u + n.offsetY, n.color);
                                  s.add(d), c += r
                              }
                          }
                      }
                  }]), e
              }(),
              $ = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "scaleSvgNode",
                      value: function(e, t) {
                          var i = parseFloat(e.getAttributeNS(null, "width")),
                              n = parseFloat(e.getAttributeNS(null, "height"));
                          e.setAttributeNS(null, "width", i * t), e.setAttributeNS(null, "height", n * t), e.setAttributeNS(null, "viewBox", "0 0 " + i + " " + n)
                      }
                  }, {
                      key: "fixSvgStringForIe11",
                      value: function(e) {
                          if (!y.isIE11()) return e.replace(/&nbsp;/g, "&#160;");
                          var t = 0,
                              i = e.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, (function(e) {
                                  return 2 === ++t ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : e
                              }));
                          return (i = i.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1")
                      }
                  }, {
                      key: "getSvgString",
                      value: function(e) {
                          var t = this.w.globals.dom.Paper.svg();
                          if (1 !== e) {
                              var i = this.w.globals.dom.Paper.node.cloneNode(!0);
                              this.scaleSvgNode(i, e), t = (new XMLSerializer).serializeToString(i)
                          }
                          return this.fixSvgStringForIe11(t)
                      }
                  }, {
                      key: "cleanup",
                      value: function() {
                          var e = this.w,
                              t = e.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
                              i = e.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
                              n = e.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
                          Array.prototype.forEach.call(n, (function(e) {
                              e.setAttribute("width", 0)
                          })), t && t[0] && (t[0].setAttribute("x", -500), t[0].setAttribute("x1", -500), t[0].setAttribute("x2", -500)), i && i[0] && (i[0].setAttribute("y", -100), i[0].setAttribute("y1", -100), i[0].setAttribute("y2", -100))
                      }
                  }, {
                      key: "svgUrl",
                      value: function() {
                          this.cleanup();
                          var e = this.getSvgString(),
                              t = new Blob([e], {
                                  type: "image/svg+xml;charset=utf-8"
                              });
                          return URL.createObjectURL(t)
                      }
                  }, {
                      key: "dataURI",
                      value: function(e) {
                          var t = this;
                          return new Promise((function(i) {
                              var n = t.w,
                                  a = e ? e.scale || e.width / n.globals.svgWidth : 1;
                              t.cleanup();
                              var r = document.createElement("canvas");
                              r.width = n.globals.svgWidth * a, r.height = parseInt(n.globals.dom.elWrap.style.height, 10) * a;
                              var s = "transparent" === n.config.chart.background ? "#fff" : n.config.chart.background,
                                  o = r.getContext("2d");
                              o.fillStyle = s, o.fillRect(0, 0, r.width * a, r.height * a);
                              var l = t.getSvgString(a);
                              if (window.canvg && y.isIE11()) {
                                  var c = window.canvg.Canvg.fromString(o, l, {
                                      ignoreClear: !0,
                                      ignoreDimensions: !0
                                  });
                                  c.start();
                                  var h = r.msToBlob();
                                  c.stop(), i({
                                      blob: h
                                  })
                              } else {
                                  var u = "data:image/svg+xml," + encodeURIComponent(l),
                                      d = new Image;
                                  d.crossOrigin = "anonymous", d.onload = function() {
                                      if (o.drawImage(d, 0, 0), r.msToBlob) {
                                          var e = r.msToBlob();
                                          i({
                                              blob: e
                                          })
                                      } else {
                                          var t = r.toDataURL("image/png");
                                          i({
                                              imgURI: t
                                          })
                                      }
                                  }, d.src = u
                              }
                          }))
                      }
                  }, {
                      key: "exportToSVG",
                      value: function() {
                          this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg")
                      }
                  }, {
                      key: "exportToPng",
                      value: function() {
                          var e = this;
                          this.dataURI().then((function(t) {
                              var i = t.imgURI,
                                  n = t.blob;
                              n ? navigator.msSaveOrOpenBlob(n, e.w.globals.chartID + ".png") : e.triggerDownload(i, e.w.config.chart.toolbar.export.png.filename, ".png")
                          }))
                      }
                  }, {
                      key: "exportToCSV",
                      value: function(e) {
                          var t = this,
                              i = e.series,
                              n = e.columnDelimiter,
                              a = e.lineDelimiter,
                              r = void 0 === a ? "\n" : a,
                              s = this.w,
                              o = [],
                              l = [],
                              c = "",
                              h = new q(this.ctx),
                              u = new U(this.ctx),
                              d = function(e) {
                                  var i = "";
                                  if (s.globals.axisCharts) {
                                      if ("category" === s.config.xaxis.type || s.config.xaxis.convertedCatToNumeric)
                                          if (s.globals.isBarHorizontal) {
                                              var a = s.globals.yLabelFormatters[0],
                                                  r = new z(t.ctx).getActiveConfigSeriesIndex();
                                              i = a(s.globals.labels[e], {
                                                  seriesIndex: r,
                                                  dataPointIndex: e,
                                                  w: s
                                              })
                                          } else i = u.getLabel(s.globals.labels, s.globals.timescaleLabels, 0, e).text;
                                      "datetime" === s.config.xaxis.type && (s.config.xaxis.categories.length ? i = s.config.xaxis.categories[e] : s.config.labels.length && (i = s.config.labels[e]))
                                  } else i = s.config.labels[e];
                                  return Array.isArray(i) && (i = i.join(" ")), y.isNumber(i) ? i : i.split(n).join("")
                              };
                          o.push(s.config.chart.toolbar.export.csv.headerCategory), i.map((function(e, t) {
                              var i = e.name ? e.name : "series-".concat(t);
                              s.globals.axisCharts && o.push(i.split(n).join("") ? i.split(n).join("") : "series-".concat(t))
                          })), s.globals.axisCharts || (o.push(s.config.chart.toolbar.export.csv.headerValue), l.push(o.join(n))), i.map((function(e, t) {
                              s.globals.axisCharts ? function(e, t) {
                                  if (o.length && 0 === t && l.push(o.join(n)), e.data && e.data.length)
                                      for (var a = 0; a < e.data.length; a++) {
                                          o = [];
                                          var r = d(a);
                                          if (r || (h.isFormatXY() ? r = i[t].data[a].x : h.isFormat2DArray() && (r = i[t].data[a] ? i[t].data[a][0] : "")), 0 === t) {
                                              o.push((u = r, "datetime" === s.config.xaxis.type && String(u).length >= 10 ? s.config.chart.toolbar.export.csv.dateFormatter(r) : y.isNumber(r) ? r : r.split(n).join("")));
                                              for (var c = 0; c < s.globals.series.length; c++) o.push(s.globals.series[c][a])
                                          }("candlestick" === s.config.chart.type || e.type && "candlestick" === e.type) && (o.pop(), o.push(s.globals.seriesCandleO[t][a]), o.push(s.globals.seriesCandleH[t][a]), o.push(s.globals.seriesCandleL[t][a]), o.push(s.globals.seriesCandleC[t][a])), ("boxPlot" === s.config.chart.type || e.type && "boxPlot" === e.type) && (o.pop(), o.push(s.globals.seriesCandleO[t][a]), o.push(s.globals.seriesCandleH[t][a]), o.push(s.globals.seriesCandleM[t][a]), o.push(s.globals.seriesCandleL[t][a]), o.push(s.globals.seriesCandleC[t][a])), "rangeBar" === s.config.chart.type && (o.pop(), o.push(s.globals.seriesRangeStart[t][a]), o.push(s.globals.seriesRangeEnd[t][a])), o.length && l.push(o.join(n))
                                      }
                                  var u
                              }(e, t) : ((o = []).push(s.globals.labels[t].split(n).join("")), o.push(s.globals.series[t]), l.push(o.join(n)))
                          })), c += l.join(r), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\ufeff" + c), s.config.chart.toolbar.export.csv.filename, ".csv")
                      }
                  }, {
                      key: "triggerDownload",
                      value: function(e, t, i) {
                          var n = document.createElement("a");
                          n.href = e, n.download = (t || this.w.globals.chartID) + i, document.body.appendChild(n), n.click(), document.body.removeChild(n)
                      }
                  }]), e
              }(),
              Z = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.axesUtils = new U(t), this.xaxisLabels = i.globals.labels.slice(), i.globals.timescaleLabels.length > 0 && !i.globals.isBarHorizontal && (this.xaxisLabels = i.globals.timescaleLabels.slice()), i.config.xaxis.overwriteCategories && (this.xaxisLabels = i.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === i.config.xaxis.position ? this.offY = 0 : this.offY = i.globals.gridHeight + 1, this.offY = this.offY + i.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === i.config.chart.type && i.config.plotOptions.bar.horizontal, this.xaxisFontSize = i.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = i.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = i.config.xaxis.labels.style.colors, this.xaxisBorderWidth = i.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = i.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = i.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = i.config.xaxis.axisBorder.height, this.yaxis = i.config.yaxis[0]
                  }
                  return c(e, [{
                      key: "drawXaxis",
                      value: function() {
                          var e, t = this,
                              i = this.w,
                              n = new S(this.ctx),
                              a = n.group({
                                  class: "apexcharts-xaxis",
                                  transform: "translate(".concat(i.config.xaxis.offsetX, ", ").concat(i.config.xaxis.offsetY, ")")
                              }),
                              r = n.group({
                                  class: "apexcharts-xaxis-texts-g",
                                  transform: "translate(".concat(i.globals.translateXAxisX, ", ").concat(i.globals.translateXAxisY, ")")
                              });
                          a.add(r);
                          for (var s = i.globals.padHorizontal, o = [], l = 0; l < this.xaxisLabels.length; l++) o.push(this.xaxisLabels[l]);
                          var c = o.length;
                          if (i.globals.isXNumeric) {
                              var h = c > 1 ? c - 1 : c;
                              e = i.globals.gridWidth / h, s = s + e / 2 + i.config.xaxis.labels.offsetX
                          } else e = i.globals.gridWidth / o.length, s = s + e + i.config.xaxis.labels.offsetX;
                          for (var u = function(a) {
                                  var l = s - e / 2 + i.config.xaxis.labels.offsetX;
                                  0 === a && 1 === c && e / 2 === s && 1 === i.globals.dataPoints && (l = i.globals.gridWidth / 2);
                                  var h = t.axesUtils.getLabel(o, i.globals.timescaleLabels, l, a, t.drawnLabels, t.xaxisFontSize),
                                      u = 28;
                                  if (i.globals.rotateXLabels && (u = 22), (h = void 0 !== i.config.xaxis.tickAmount && "dataPoints" !== i.config.xaxis.tickAmount && "datetime" !== i.config.xaxis.type ? t.axesUtils.checkLabelBasedOnTickamount(a, h, c) : t.axesUtils.checkForOverflowingLabels(a, h, c, t.drawnLabels, t.drawnLabelsRects)).text && i.globals.xaxisLabelsCount++, i.config.xaxis.labels.show) {
                                      var d = n.drawText({
                                          x: h.x,
                                          y: t.offY + i.config.xaxis.labels.offsetY + u - ("top" === i.config.xaxis.position ? i.globals.xAxisHeight + i.config.xaxis.axisTicks.height - 2 : 0),
                                          text: h.text,
                                          textAnchor: "middle",
                                          fontWeight: h.isBold ? 600 : i.config.xaxis.labels.style.fontWeight,
                                          fontSize: t.xaxisFontSize,
                                          fontFamily: t.xaxisFontFamily,
                                          foreColor: Array.isArray(t.xaxisForeColors) ? i.config.xaxis.convertedCatToNumeric ? t.xaxisForeColors[i.globals.minX + a - 1] : t.xaxisForeColors[a] : t.xaxisForeColors,
                                          isPlainText: !1,
                                          cssClass: "apexcharts-xaxis-label " + i.config.xaxis.labels.style.cssClass
                                      });
                                      r.add(d);
                                      var f = document.createElementNS(i.globals.SVGNS, "title");
                                      f.textContent = Array.isArray(h.text) ? h.text.join(" ") : h.text, d.node.appendChild(f), "" !== h.text && (t.drawnLabels.push(h.text), t.drawnLabelsRects.push(h))
                                  }
                                  s += e
                              }, d = 0; d <= c - 1; d++) u(d);
                          if (void 0 !== i.config.xaxis.title.text) {
                              var f = n.group({
                                      class: "apexcharts-xaxis-title"
                                  }),
                                  p = n.drawText({
                                      x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                                      y: this.offY + parseFloat(this.xaxisFontSize) + i.globals.xAxisLabelsHeight + i.config.xaxis.title.offsetY,
                                      text: i.config.xaxis.title.text,
                                      textAnchor: "middle",
                                      fontSize: i.config.xaxis.title.style.fontSize,
                                      fontFamily: i.config.xaxis.title.style.fontFamily,
                                      fontWeight: i.config.xaxis.title.style.fontWeight,
                                      foreColor: i.config.xaxis.title.style.color,
                                      cssClass: "apexcharts-xaxis-title-text " + i.config.xaxis.title.style.cssClass
                                  });
                              f.add(p), a.add(f)
                          }
                          if (i.config.xaxis.axisBorder.show) {
                              var g = i.globals.barPadForNumericAxis,
                                  x = n.drawLine(i.globals.padHorizontal + i.config.xaxis.axisBorder.offsetX - g, this.offY, this.xaxisBorderWidth + g, this.offY, i.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                              a.add(x)
                          }
                          return a
                      }
                  }, {
                      key: "drawXaxisInversed",
                      value: function(e) {
                          var t, i, n = this,
                              a = this.w,
                              r = new S(this.ctx),
                              s = a.config.yaxis[0].opposite ? a.globals.translateYAxisX[e] : 0,
                              o = r.group({
                                  class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                                  rel: e
                              }),
                              l = r.group({
                                  class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                                  transform: "translate(" + s + ", 0)"
                              });
                          o.add(l);
                          var c = [];
                          if (a.config.yaxis[e].show)
                              for (var h = 0; h < this.xaxisLabels.length; h++) c.push(this.xaxisLabels[h]);
                          t = a.globals.gridHeight / c.length, i = -t / 2.2;
                          var u = a.globals.yLabelFormatters[0],
                              d = a.config.yaxis[0].labels;
                          if (d.show)
                              for (var f = function(s) {
                                      var o = void 0 === c[s] ? "" : c[s];
                                      o = u(o, {
                                          seriesIndex: e,
                                          dataPointIndex: s,
                                          w: a
                                      });
                                      var h = n.axesUtils.getYAxisForeColor(d.style.colors, e),
                                          f = 0;
                                      Array.isArray(o) && (f = o.length / 2 * parseInt(d.style.fontSize, 10));
                                      var p = r.drawText({
                                          x: d.offsetX - 15,
                                          y: i + t + d.offsetY - f,
                                          text: o,
                                          textAnchor: n.yaxis.opposite ? "start" : "end",
                                          foreColor: Array.isArray(h) ? h[s] : h,
                                          fontSize: d.style.fontSize,
                                          fontFamily: d.style.fontFamily,
                                          fontWeight: d.style.fontWeight,
                                          isPlainText: !1,
                                          cssClass: "apexcharts-yaxis-label " + d.style.cssClass
                                      });
                                      l.add(p);
                                      var g = document.createElementNS(a.globals.SVGNS, "title");
                                      if (g.textContent = Array.isArray(o) ? o.join(" ") : o, p.node.appendChild(g), 0 !== a.config.yaxis[e].labels.rotate) {
                                          var x = r.rotateAroundCenter(p.node);
                                          p.node.setAttribute("transform", "rotate(".concat(a.config.yaxis[e].labels.rotate, " 0 ").concat(x.y, ")"))
                                      }
                                      i += t
                                  }, p = 0; p <= c.length - 1; p++) f(p);
                          if (void 0 !== a.config.yaxis[0].title.text) {
                              var g = r.group({
                                      class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                                      transform: "translate(" + s + ", 0)"
                                  }),
                                  x = r.drawText({
                                      x: 0,
                                      y: a.globals.gridHeight / 2,
                                      text: a.config.yaxis[0].title.text,
                                      textAnchor: "middle",
                                      foreColor: a.config.yaxis[0].title.style.color,
                                      fontSize: a.config.yaxis[0].title.style.fontSize,
                                      fontWeight: a.config.yaxis[0].title.style.fontWeight,
                                      fontFamily: a.config.yaxis[0].title.style.fontFamily,
                                      cssClass: "apexcharts-yaxis-title-text " + a.config.yaxis[0].title.style.cssClass
                                  });
                              g.add(x), o.add(g)
                          }
                          var v = 0;
                          this.isCategoryBarHorizontal && a.config.yaxis[0].opposite && (v = a.globals.gridWidth);
                          var m = a.config.xaxis.axisBorder;
                          if (m.show) {
                              var b = r.drawLine(a.globals.padHorizontal + m.offsetX + v, 1 + m.offsetY, a.globals.padHorizontal + m.offsetX + v, a.globals.gridHeight + m.offsetY, m.color, 0);
                              o.add(b)
                          }
                          return a.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(v, c.length, a.config.yaxis[0].axisBorder, a.config.yaxis[0].axisTicks, 0, t, o), o
                      }
                  }, {
                      key: "drawXaxisTicks",
                      value: function(e, t) {
                          var i = this.w,
                              n = e;
                          if (!(e < 0 || e - 2 > i.globals.gridWidth)) {
                              var a = this.offY + i.config.xaxis.axisTicks.offsetY,
                                  r = a + i.config.xaxis.axisTicks.height;
                              if ("top" === i.config.xaxis.position && (r = a - i.config.xaxis.axisTicks.height), i.config.xaxis.axisTicks.show) {
                                  var s = new S(this.ctx).drawLine(e + i.config.xaxis.axisTicks.offsetX, a + i.config.xaxis.offsetY, n + i.config.xaxis.axisTicks.offsetX, r + i.config.xaxis.offsetY, i.config.xaxis.axisTicks.color);
                                  t.add(s), s.node.classList.add("apexcharts-xaxis-tick")
                              }
                          }
                      }
                  }, {
                      key: "getXAxisTicksPositions",
                      value: function() {
                          var e = this.w,
                              t = [],
                              i = this.xaxisLabels.length,
                              n = e.globals.padHorizontal;
                          if (e.globals.timescaleLabels.length > 0)
                              for (var a = 0; a < i; a++) n = this.xaxisLabels[a].position, t.push(n);
                          else
                              for (var r = i, s = 0; s < r; s++) {
                                  var o = r;
                                  e.globals.isXNumeric && "bar" !== e.config.chart.type && (o -= 1), n += e.globals.gridWidth / o, t.push(n)
                              }
                          return t
                      }
                  }, {
                      key: "xAxisLabelCorrections",
                      value: function() {
                          var e = this.w,
                              t = new S(this.ctx),
                              i = e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
                              n = e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"),
                              a = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
                              r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
                          if (e.globals.rotateXLabels || e.config.xaxis.labels.rotateAlways)
                              for (var s = 0; s < n.length; s++) {
                                  var o = t.rotateAroundCenter(n[s]);
                                  o.y = o.y - 1, o.x = o.x + 1, n[s].setAttribute("transform", "rotate(".concat(e.config.xaxis.labels.rotate, " ").concat(o.x, " ").concat(o.y, ")")), n[s].setAttribute("text-anchor", "end"), i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
                                  var l = n[s].childNodes;
                                  e.config.xaxis.labels.trim && Array.prototype.forEach.call(l, (function(i) {
                                      t.placeTextWithEllipsis(i, i.textContent, e.globals.xAxisLabelsHeight - ("bottom" === e.config.legend.position ? 20 : 10))
                                  }))
                              } else ! function() {
                                  for (var i = e.globals.gridWidth / (e.globals.labels.length + 1), a = 0; a < n.length; a++) {
                                      var r = n[a].childNodes;
                                      e.config.xaxis.labels.trim && "datetime" !== e.config.xaxis.type && Array.prototype.forEach.call(r, (function(e) {
                                          t.placeTextWithEllipsis(e, e.textContent, i)
                                      }))
                                  }
                              }();
                          if (a.length > 0) {
                              var c = a[a.length - 1].getBBox(),
                                  h = a[0].getBBox();
                              c.x < -20 && a[a.length - 1].parentNode.removeChild(a[a.length - 1]), h.x + h.width > e.globals.gridWidth && !e.globals.isBarHorizontal && a[0].parentNode.removeChild(a[0]);
                              for (var u = 0; u < r.length; u++) t.placeTextWithEllipsis(r[u], r[u].textContent, e.config.yaxis[0].labels.maxWidth - 2 * parseFloat(e.config.yaxis[0].title.style.fontSize) - 20)
                          }
                      }
                  }]), e
              }(),
              J = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.xaxisLabels = i.globals.labels.slice(), this.axesUtils = new U(t), this.isRangeBar = i.globals.seriesRangeBar.length, i.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i.globals.timescaleLabels.slice())
                  }
                  return c(e, [{
                      key: "drawGridArea",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                              t = this.w,
                              i = new S(this.ctx);
                          null === e && (e = i.group({
                              class: "apexcharts-grid"
                          }));
                          var n = i.drawLine(t.globals.padHorizontal, 1, t.globals.padHorizontal, t.globals.gridHeight, "transparent"),
                              a = i.drawLine(t.globals.padHorizontal, t.globals.gridHeight, t.globals.gridWidth, t.globals.gridHeight, "transparent");
                          return e.add(a), e.add(n), e
                      }
                  }, {
                      key: "drawGrid",
                      value: function() {
                          var e = null;
                          return this.w.globals.axisCharts && (e = this.renderGrid(), this.drawGridArea(e.el)), e
                      }
                  }, {
                      key: "createGridMask",
                      value: function() {
                          var e = this.w,
                              t = e.globals,
                              i = new S(this.ctx),
                              n = Array.isArray(e.config.stroke.width) ? 0 : e.config.stroke.width;
                          if (Array.isArray(e.config.stroke.width)) {
                              var a = 0;
                              e.config.stroke.width.forEach((function(e) {
                                  a = Math.max(a, e)
                              })), n = a
                          }
                          t.dom.elGridRectMask = document.createElementNS(t.SVGNS, "clipPath"), t.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(t.cuid)), t.dom.elGridRectMarkerMask = document.createElementNS(t.SVGNS, "clipPath"), t.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(t.cuid)), t.dom.elForecastMask = document.createElementNS(t.SVGNS, "clipPath"), t.dom.elForecastMask.setAttribute("id", "forecastMask".concat(t.cuid)), t.dom.elNonForecastMask = document.createElementNS(t.SVGNS, "clipPath"), t.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(t.cuid));
                          var r = e.config.chart.type,
                              s = 0,
                              o = 0;
                          ("bar" === r || "rangeBar" === r || "candlestick" === r || "boxPlot" === r || e.globals.comboBarCount > 0) && e.globals.isXNumeric && !e.globals.isBarHorizontal && (s = e.config.grid.padding.left, o = e.config.grid.padding.right, t.barPadForNumericAxis > s && (s = t.barPadForNumericAxis, o = t.barPadForNumericAxis)), t.dom.elGridRect = i.drawRect(-n / 2 - s - 2, -n / 2, t.gridWidth + n + o + s + 4, t.gridHeight + n, 0, "#fff");
                          var l = e.globals.markers.largestSize + 1;
                          t.dom.elGridRectMarker = i.drawRect(2 * -l, 2 * -l, t.gridWidth + 4 * l, t.gridHeight + 4 * l, 0, "#fff"), t.dom.elGridRectMask.appendChild(t.dom.elGridRect.node), t.dom.elGridRectMarkerMask.appendChild(t.dom.elGridRectMarker.node);
                          var c = t.dom.baseEl.querySelector("defs");
                          c.appendChild(t.dom.elGridRectMask), c.appendChild(t.dom.elForecastMask), c.appendChild(t.dom.elNonForecastMask), c.appendChild(t.dom.elGridRectMarkerMask)
                      }
                  }, {
                      key: "_drawGridLines",
                      value: function(e) {
                          var t = e.i,
                              i = e.x1,
                              n = e.y1,
                              a = e.x2,
                              r = e.y2,
                              s = e.xCount,
                              o = e.parent,
                              l = this.w;
                          0 === t && l.globals.skipFirstTimelinelabel || t === s - 1 && l.globals.skipLastTimelinelabel && !l.config.xaxis.labels.formatter || "radar" === l.config.chart.type || (l.config.grid.xaxis.lines.show && this._drawGridLine({
                              x1: i,
                              y1: n,
                              x2: a,
                              y2: r,
                              parent: o
                          }), new Z(this.ctx).drawXaxisTicks(i, this.elg))
                      }
                  }, {
                      key: "_drawGridLine",
                      value: function(e) {
                          var t = e.x1,
                              i = e.y1,
                              n = e.x2,
                              a = e.y2,
                              r = e.parent,
                              s = this.w,
                              o = r.node.classList.contains("apexcharts-gridlines-horizontal"),
                              l = s.config.grid.strokeDashArray,
                              c = s.globals.barPadForNumericAxis,
                              h = new S(this).drawLine(t - (o ? c : 0), i, n + (o ? c : 0), a, s.config.grid.borderColor, l);
                          h.node.classList.add("apexcharts-gridline"), r.add(h)
                      }
                  }, {
                      key: "_drawGridBandRect",
                      value: function(e) {
                          var t = e.c,
                              i = e.x1,
                              n = e.y1,
                              a = e.x2,
                              r = e.y2,
                              s = e.type,
                              o = this.w,
                              l = new S(this.ctx),
                              c = o.globals.barPadForNumericAxis;
                          if ("column" !== s || "datetime" !== o.config.xaxis.type) {
                              var h = o.config.grid[s].colors[t],
                                  u = l.drawRect(i - ("row" === s ? c : 0), n, a + ("row" === s ? 2 * c : 0), r, 0, h, o.config.grid[s].opacity);
                              this.elg.add(u), u.attr("clip-path", "url(#gridRectMask".concat(o.globals.cuid, ")")), u.node.classList.add("apexcharts-grid-".concat(s))
                          }
                      }
                  }, {
                      key: "_drawXYLines",
                      value: function(e) {
                          var t = this,
                              i = e.xCount,
                              n = e.tickAmount,
                              a = this.w;
                          if (a.config.grid.xaxis.lines.show || a.config.xaxis.axisTicks.show) {
                              var r, s = a.globals.padHorizontal,
                                  o = a.globals.gridHeight;
                              a.globals.timescaleLabels.length ? function(e) {
                                  for (var n = e.xC, a = e.x1, r = e.y1, s = e.x2, o = e.y2, l = 0; l < n; l++) a = t.xaxisLabels[l].position, s = t.xaxisLabels[l].position, t._drawGridLines({
                                      i: l,
                                      x1: a,
                                      y1: r,
                                      x2: s,
                                      y2: o,
                                      xCount: i,
                                      parent: t.elgridLinesV
                                  })
                              }({
                                  xC: i,
                                  x1: s,
                                  y1: 0,
                                  x2: r,
                                  y2: o
                              }) : (a.globals.isXNumeric && (i = a.globals.xAxisScale.result.length), a.config.xaxis.convertedCatToNumeric && (i = a.globals.xaxisLabelsCount), function(e) {
                                  var n = e.xC,
                                      r = e.x1,
                                      s = e.y1,
                                      o = e.x2,
                                      l = e.y2;
                                  if (void 0 !== a.config.xaxis.tickAmount && "dataPoints" !== a.config.xaxis.tickAmount) a.globals.dom.baseEl.querySelectorAll(".apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)").forEach((function(e, n) {
                                      var a = e.getBBox();
                                      t._drawGridLines({
                                          i: n,
                                          x1: a.x + a.width / 2,
                                          y1: s,
                                          x2: a.x + a.width / 2,
                                          y2: l,
                                          xCount: i,
                                          parent: t.elgridLinesV
                                      })
                                  }));
                                  else
                                      for (var c = 0; c < n + (a.globals.isXNumeric ? 0 : 1); c++) 0 === c && 1 === n && 1 === a.globals.dataPoints && (o = r = a.globals.gridWidth / 2), t._drawGridLines({
                                          i: c,
                                          x1: r,
                                          y1: s,
                                          x2: o,
                                          y2: l,
                                          xCount: i,
                                          parent: t.elgridLinesV
                                      }), o = r += a.globals.gridWidth / (a.globals.isXNumeric ? n - 1 : n)
                              }({
                                  xC: i,
                                  x1: s,
                                  y1: 0,
                                  x2: r,
                                  y2: o
                              }))
                          }
                          if (a.config.grid.yaxis.lines.show) {
                              var l = 0,
                                  c = 0,
                                  h = a.globals.gridWidth,
                                  u = n + 1;
                              this.isRangeBar && (u = a.globals.labels.length);
                              for (var d = 0; d < u + (this.isRangeBar ? 1 : 0); d++) this._drawGridLine({
                                  x1: 0,
                                  y1: l,
                                  x2: h,
                                  y2: c,
                                  parent: this.elgridLinesH
                              }), c = l += a.globals.gridHeight / (this.isRangeBar ? u : n)
                          }
                      }
                  }, {
                      key: "_drawInvertedXYLines",
                      value: function(e) {
                          var t = e.xCount,
                              i = this.w;
                          if (i.config.grid.xaxis.lines.show || i.config.xaxis.axisTicks.show)
                              for (var n, a = i.globals.padHorizontal, r = i.globals.gridHeight, s = 0; s < t + 1; s++) i.config.grid.xaxis.lines.show && this._drawGridLine({
                                  x1: a,
                                  y1: 0,
                                  x2: n,
                                  y2: r,
                                  parent: this.elgridLinesV
                              }), new Z(this.ctx).drawXaxisTicks(a, this.elg), n = a = a + i.globals.gridWidth / t + .3;
                          if (i.config.grid.yaxis.lines.show)
                              for (var o = 0, l = 0, c = i.globals.gridWidth, h = 0; h < i.globals.dataPoints + 1; h++) this._drawGridLine({
                                  x1: 0,
                                  y1: o,
                                  x2: c,
                                  y2: l,
                                  parent: this.elgridLinesH
                              }), l = o += i.globals.gridHeight / i.globals.dataPoints
                      }
                  }, {
                      key: "renderGrid",
                      value: function() {
                          var e = this.w,
                              t = new S(this.ctx);
                          this.elg = t.group({
                              class: "apexcharts-grid"
                          }), this.elgridLinesH = t.group({
                              class: "apexcharts-gridlines-horizontal"
                          }), this.elgridLinesV = t.group({
                              class: "apexcharts-gridlines-vertical"
                          }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), e.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide());
                          for (var i, n = e.globals.yAxisScale.length ? e.globals.yAxisScale[0].result.length - 1 : 5, a = 0; a < e.globals.series.length && (void 0 !== e.globals.yAxisScale[a] && (n = e.globals.yAxisScale[a].result.length - 1), !(n > 2)); a++);
                          return !e.globals.isBarHorizontal || this.isRangeBar ? (i = this.xaxisLabels.length, this.isRangeBar && (n = e.globals.labels.length, e.config.xaxis.tickAmount && e.config.xaxis.labels.formatter && (i = e.config.xaxis.tickAmount)), this._drawXYLines({
                              xCount: i,
                              tickAmount: n
                          })) : (i = n, n = e.globals.xTickAmount, this._drawInvertedXYLines({
                              xCount: i,
                              tickAmount: n
                          })), this.drawGridBands(i, n), {
                              el: this.elg,
                              xAxisTickWidth: e.globals.gridWidth / i
                          }
                      }
                  }, {
                      key: "drawGridBands",
                      value: function(e, t) {
                          var i = this.w;
                          if (void 0 !== i.config.grid.row.colors && i.config.grid.row.colors.length > 0)
                              for (var n = 0, a = i.globals.gridHeight / t, r = i.globals.gridWidth, s = 0, o = 0; s < t; s++, o++) o >= i.config.grid.row.colors.length && (o = 0), this._drawGridBandRect({
                                  c: o,
                                  x1: 0,
                                  y1: n,
                                  x2: r,
                                  y2: a,
                                  type: "row"
                              }), n += i.globals.gridHeight / t;
                          if (void 0 !== i.config.grid.column.colors && i.config.grid.column.colors.length > 0)
                              for (var l = i.globals.isBarHorizontal || "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric ? e : e - 1, c = i.globals.padHorizontal, h = i.globals.padHorizontal + i.globals.gridWidth / l, u = i.globals.gridHeight, d = 0, f = 0; d < e; d++, f++) f >= i.config.grid.column.colors.length && (f = 0), this._drawGridBandRect({
                                  c: f,
                                  x1: c,
                                  y1: 0,
                                  x2: h,
                                  y2: u,
                                  type: "column"
                              }), c += i.globals.gridWidth / l
                      }
                  }]), e
              }(),
              K = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "niceScale",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                              n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                              a = arguments.length > 4 ? arguments[4] : void 0,
                              r = this.w,
                              s = Math.abs(t - e);
                          if ("dataPoints" === (i = this._adjustTicksForSmallRange(i, n, s)) && (i = r.globals.dataPoints - 1), e === Number.MIN_VALUE && 0 === t || !y.isNumber(e) && !y.isNumber(t) || e === Number.MIN_VALUE && t === -Number.MAX_VALUE) {
                              e = 0, t = i;
                              var o = this.linearScale(e, t, i);
                              return o
                          }
                          e > t ? (console.warn("axis.min cannot be greater than axis.max"), t = e + .1) : e === t && (e = 0 === e ? 0 : e - .5, t = 0 === t ? 2 : t + .5);
                          var l = [];
                          s < 1 && a && ("candlestick" === r.config.chart.type || "candlestick" === r.config.series[n].type || "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[n].type || r.globals.isRangeData) && (t *= 1.01);
                          var c = i + 1;
                          c < 2 ? c = 2 : c > 2 && (c -= 2);
                          var h = s / c,
                              u = Math.floor(y.log10(h)),
                              d = Math.pow(10, u),
                              f = Math.round(h / d);
                          f < 1 && (f = 1);
                          var p = f * d,
                              g = p * Math.floor(e / p),
                              x = p * Math.ceil(t / p),
                              v = g;
                          if (a && s > 2) {
                              for (; l.push(v), !((v += p) > x););
                              return {
                                  result: l,
                                  niceMin: l[0],
                                  niceMax: l[l.length - 1]
                              }
                          }
                          var m = e;
                          (l = []).push(m);
                          for (var b = Math.abs(t - e) / i, w = 0; w <= i; w++) m += b, l.push(m);
                          return l[l.length - 2] >= t && l.pop(), {
                              result: l,
                              niceMin: l[0],
                              niceMax: l[l.length - 1]
                          }
                      }
                  }, {
                      key: "linearScale",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                              n = arguments.length > 3 ? arguments[3] : void 0,
                              a = Math.abs(t - e);
                          "dataPoints" === (i = this._adjustTicksForSmallRange(i, n, a)) && (i = this.w.globals.dataPoints - 1);
                          var r = a / i;
                          i === Number.MAX_VALUE && (i = 10, r = 1);
                          for (var s = [], o = e; i >= 0;) s.push(o), o += r, i -= 1;
                          return {
                              result: s,
                              niceMin: s[0],
                              niceMax: s[s.length - 1]
                          }
                      }
                  }, {
                      key: "logarithmicScale",
                      value: function(e, t, i) {
                          for (var n = [], a = Math.ceil(Math.log(t) / Math.log(i)) + 1, r = 0; r < a; r++) n.push(Math.pow(i, r));
                          return 0 === e && n.unshift(e), {
                              result: n,
                              niceMin: n[0],
                              niceMax: n[n.length - 1]
                          }
                      }
                  }, {
                      key: "_adjustTicksForSmallRange",
                      value: function(e, t, i) {
                          var n = e;
                          if (void 0 !== t && this.w.config.yaxis[t].labels.formatter && void 0 === this.w.config.yaxis[t].tickAmount) {
                              var a = this.w.config.yaxis[t].labels.formatter(1);
                              y.isNumber(Number(a)) && !y.isFloat(a) && (n = Math.ceil(i))
                          }
                          return n < e ? n : e
                      }
                  }, {
                      key: "setYScaleForIndex",
                      value: function(e, t, i) {
                          var n = this.w.globals,
                              a = this.w.config,
                              r = n.isBarHorizontal ? a.xaxis : a.yaxis[e];
                          void 0 === n.yAxisScale[e] && (n.yAxisScale[e] = []);
                          var s = Math.abs(i - t);
                          if (r.logarithmic && s <= 5 && (n.invalidLogScale = !0), r.logarithmic && s > 5) n.allSeriesCollapsed = !1, n.yAxisScale[e] = this.logarithmicScale(t, i, r.logBase);
                          else if (i !== -Number.MAX_VALUE && y.isNumber(i))
                              if (n.allSeriesCollapsed = !1, void 0 === r.min && void 0 === r.max || r.forceNiceScale) {
                                  var o = void 0 === a.yaxis[e].max && void 0 === a.yaxis[e].min || a.yaxis[e].forceNiceScale;
                                  n.yAxisScale[e] = this.niceScale(t, i, r.tickAmount ? r.tickAmount : s < 5 && s > 1 ? s + 1 : 5, e, o)
                              } else n.yAxisScale[e] = this.linearScale(t, i, r.tickAmount, e);
                          else n.yAxisScale[e] = this.linearScale(0, 5, 5)
                      }
                  }, {
                      key: "setXScale",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.globals,
                              a = i.config.xaxis,
                              r = Math.abs(t - e);
                          return t !== -Number.MAX_VALUE && y.isNumber(t) ? n.xAxisScale = this.linearScale(e, t, a.tickAmount ? a.tickAmount : r < 5 && r > 1 ? r + 1 : 5, 0) : n.xAxisScale = this.linearScale(0, 5, 5), n.xAxisScale
                      }
                  }, {
                      key: "setMultipleYScales",
                      value: function() {
                          var e = this,
                              t = this.w.globals,
                              i = this.w.config,
                              n = t.minYArr.concat([]),
                              a = t.maxYArr.concat([]),
                              r = [];
                          i.yaxis.forEach((function(t, s) {
                              var o = s;
                              i.series.forEach((function(e, i) {
                                  e.name === t.seriesName && (o = i, s !== i ? r.push({
                                      index: i,
                                      similarIndex: s,
                                      alreadyExists: !0
                                  }) : r.push({
                                      index: i
                                  }))
                              }));
                              var l = n[o],
                                  c = a[o];
                              e.setYScaleForIndex(s, l, c)
                          })), this.sameScaleInMultipleAxes(n, a, r)
                      }
                  }, {
                      key: "sameScaleInMultipleAxes",
                      value: function(e, t, i) {
                          var n = this,
                              a = this.w.config,
                              r = this.w.globals,
                              s = [];
                          i.forEach((function(e) {
                              e.alreadyExists && (void 0 === s[e.index] && (s[e.index] = []), s[e.index].push(e.index), s[e.index].push(e.similarIndex))
                          })), r.yAxisSameScaleIndices = s, s.forEach((function(e, t) {
                              s.forEach((function(i, n) {
                                  var a, r;
                                  t !== n && (a = e, r = i, a.filter((function(e) {
                                      return -1 !== r.indexOf(e)
                                  }))).length > 0 && (s[t] = s[t].concat(s[n]))
                              }))
                          }));
                          var o = s.map((function(e) {
                              return e.filter((function(t, i) {
                                  return e.indexOf(t) === i
                              }))
                          })).map((function(e) {
                              return e.sort()
                          }));
                          s = s.filter((function(e) {
                              return !!e
                          }));
                          var l = o.slice(),
                              c = l.map((function(e) {
                                  return JSON.stringify(e)
                              }));
                          l = l.filter((function(e, t) {
                              return c.indexOf(JSON.stringify(e)) === t
                          }));
                          var h = [],
                              u = [];
                          e.forEach((function(e, i) {
                              l.forEach((function(n, a) {
                                  n.indexOf(i) > -1 && (void 0 === h[a] && (h[a] = [], u[a] = []), h[a].push({
                                      key: i,
                                      value: e
                                  }), u[a].push({
                                      key: i,
                                      value: t[i]
                                  }))
                              }))
                          }));
                          var d = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
                              f = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
                          h.forEach((function(e, t) {
                              e.forEach((function(e, i) {
                                  d[t] = Math.min(e.value, d[t])
                              }))
                          })), u.forEach((function(e, t) {
                              e.forEach((function(e, i) {
                                  f[t] = Math.max(e.value, f[t])
                              }))
                          })), e.forEach((function(e, t) {
                              u.forEach((function(e, i) {
                                  var s = d[i],
                                      o = f[i];
                                  a.chart.stacked && (o = 0, e.forEach((function(e, t) {
                                      e.value !== -Number.MAX_VALUE && (o += e.value), s !== Number.MIN_VALUE && (s += h[i][t].value)
                                  }))), e.forEach((function(i, l) {
                                      e[l].key === t && (void 0 !== a.yaxis[t].min && (s = "function" == typeof a.yaxis[t].min ? a.yaxis[t].min(r.minY) : a.yaxis[t].min), void 0 !== a.yaxis[t].max && (o = "function" == typeof a.yaxis[t].max ? a.yaxis[t].max(r.maxY) : a.yaxis[t].max), n.setYScaleForIndex(t, s, o))
                                  }))
                              }))
                          }))
                      }
                  }, {
                      key: "autoScaleY",
                      value: function(e, t, i) {
                          e || (e = this);
                          var n = e.w;
                          if (n.globals.isMultipleYAxis || n.globals.collapsedSeries.length) return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."), t;
                          var a = n.globals.seriesX[0],
                              r = n.config.chart.stacked;
                          return t.forEach((function(e, s) {
                              for (var o = 0, l = 0; l < a.length; l++)
                                  if (a[l] >= i.xaxis.min) {
                                      o = l;
                                      break
                                  } var c, h, u = n.globals.minYArr[s],
                                  d = n.globals.maxYArr[s],
                                  f = n.globals.stackedSeriesTotals;
                              n.globals.series.forEach((function(s, l) {
                                  var p = s[o];
                                  r ? (p = f[o], c = h = p, f.forEach((function(e, t) {
                                      a[t] <= i.xaxis.max && a[t] >= i.xaxis.min && (e > h && null !== e && (h = e), s[t] < c && null !== s[t] && (c = s[t]))
                                  }))) : (c = h = p, s.forEach((function(e, t) {
                                      if (a[t] <= i.xaxis.max && a[t] >= i.xaxis.min) {
                                          var r = e,
                                              s = e;
                                          n.globals.series.forEach((function(i, n) {
                                              null !== e && (r = Math.min(i[t], r), s = Math.max(i[t], s))
                                          })), s > h && null !== s && (h = s), r < c && null !== r && (c = r)
                                      }
                                  }))), void 0 === c && void 0 === h && (c = u, h = d), (h *= h < 0 ? .9 : 1.1) < 0 && h < d && (h = d), (c *= c < 0 ? 1.1 : .9) < 0 && c > u && (c = u), t.length > 1 ? (t[l].min = void 0 === e.min ? c : e.min, t[l].max = void 0 === e.max ? h : e.max) : (t[0].min = void 0 === e.min ? c : e.min, t[0].max = void 0 === e.max ? h : e.max)
                              }))
                          })), t
                      }
                  }]), e
              }(),
              Q = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.scales = new K(t)
                  }
                  return c(e, [{
                      key: "init",
                      value: function() {
                          this.setYRange(), this.setXRange(), this.setZRange()
                      }
                  }, {
                      key: "getMinYMaxY",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
                              n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                              a = this.w.config,
                              r = this.w.globals,
                              s = -Number.MAX_VALUE,
                              o = Number.MIN_VALUE;
                          null === n && (n = e + 1);
                          var l = r.series,
                              c = l,
                              h = l;
                          "candlestick" === a.chart.type ? (c = r.seriesCandleL, h = r.seriesCandleH) : "boxPlot" === a.chart.type ? (c = r.seriesCandleO, h = r.seriesCandleC) : r.isRangeData && (c = r.seriesRangeStart, h = r.seriesRangeEnd);
                          for (var u = e; u < n; u++) {
                              r.dataPoints = Math.max(r.dataPoints, l[u].length), r.categoryLabels.length && (r.dataPoints = r.categoryLabels.filter((function(e) {
                                  return void 0 !== e
                              })).length);
                              for (var d = 0; d < r.series[u].length; d++) {
                                  var f = l[u][d];
                                  null !== f && y.isNumber(f) ? (void 0 !== h[u][d] && (s = Math.max(s, h[u][d]), t = Math.min(t, h[u][d])), void 0 !== c[u][d] && (t = Math.min(t, c[u][d]), i = Math.max(i, c[u][d])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || (void 0 !== r.seriesCandleC[u][d] && (s = Math.max(s, r.seriesCandleO[u][d]), s = Math.max(s, r.seriesCandleH[u][d]), s = Math.max(s, r.seriesCandleL[u][d]), s = Math.max(s, r.seriesCandleC[u][d]), "boxPlot" === this.w.config.chart.type && (s = Math.max(s, r.seriesCandleM[u][d]))), !a.series[u].type || "candlestick" === a.series[u].type && "boxPlot" === a.series[u].type || (s = Math.max(s, r.series[u][d]), t = Math.min(t, r.series[u][d])), i = s), r.seriesGoals[u] && r.seriesGoals[u][d] && Array.isArray(r.seriesGoals[u][d]) && r.seriesGoals[u][d].forEach((function(e) {
                                      o !== Number.MIN_VALUE && (o = Math.min(o, e.value), t = o), s = Math.max(s, e.value), i = s
                                  })), y.isFloat(f) && (f = y.noExponents(f), r.yValueDecimal = Math.max(r.yValueDecimal, f.toString().split(".")[1].length)), o > c[u][d] && c[u][d] < 0 && (o = c[u][d])) : r.hasNullValues = !0
                              }
                          }
                          return "rangeBar" === a.chart.type && r.seriesRangeStart.length && r.isBarHorizontal && (o = t), "bar" === a.chart.type && (o < 0 && s < 0 && (s = 0), o === Number.MIN_VALUE && (o = 0)), {
                              minY: o,
                              maxY: s,
                              lowestY: t,
                              highestY: i
                          }
                      }
                  }, {
                      key: "setYRange",
                      value: function() {
                          var e = this.w.globals,
                              t = this.w.config;
                          e.maxY = -Number.MAX_VALUE, e.minY = Number.MIN_VALUE;
                          var i = Number.MAX_VALUE;
                          if (e.isMultipleYAxis)
                              for (var n = 0; n < e.series.length; n++) {
                                  var a = this.getMinYMaxY(n, i, null, n + 1);
                                  e.minYArr.push(a.minY), e.maxYArr.push(a.maxY), i = a.lowestY
                              }
                          var r = this.getMinYMaxY(0, i, null, e.series.length);
                          if (e.minY = r.minY, e.maxY = r.maxY, i = r.lowestY, t.chart.stacked && this._setStackedMinMax(), ("line" === t.chart.type || "area" === t.chart.type || "candlestick" === t.chart.type || "boxPlot" === t.chart.type || "rangeBar" === t.chart.type && !e.isBarHorizontal) && e.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== e.maxY) {
                              var s = e.maxY - i;
                              (i >= 0 && i <= 10 || void 0 !== t.yaxis[0].min || void 0 !== t.yaxis[0].max) && (s = 0), e.minY = i - 5 * s / 100, i > 0 && e.minY < 0 && (e.minY = 0), e.maxY = e.maxY + 5 * s / 100
                          }
                          return t.yaxis.forEach((function(t, i) {
                              void 0 !== t.max && ("number" == typeof t.max ? e.maxYArr[i] = t.max : "function" == typeof t.max && (e.maxYArr[i] = t.max(e.isMultipleYAxis ? e.maxYArr[i] : e.maxY)), e.maxY = e.maxYArr[i]), void 0 !== t.min && ("number" == typeof t.min ? e.minYArr[i] = t.min : "function" == typeof t.min && (e.minYArr[i] = t.min(e.isMultipleYAxis ? e.minYArr[i] === Number.MIN_VALUE ? 0 : e.minYArr[i] : e.minY)), e.minY = e.minYArr[i])
                          })), e.isBarHorizontal && ["min", "max"].forEach((function(i) {
                              void 0 !== t.xaxis[i] && "number" == typeof t.xaxis[i] && ("min" === i ? e.minY = t.xaxis[i] : e.maxY = t.xaxis[i])
                          })), e.isMultipleYAxis ? (this.scales.setMultipleYScales(), e.minY = i, e.yAxisScale.forEach((function(t, i) {
                              e.minYArr[i] = t.niceMin, e.maxYArr[i] = t.niceMax
                          }))) : (this.scales.setYScaleForIndex(0, e.minY, e.maxY), e.minY = e.yAxisScale[0].niceMin, e.maxY = e.yAxisScale[0].niceMax, e.minYArr[0] = e.yAxisScale[0].niceMin, e.maxYArr[0] = e.yAxisScale[0].niceMax), {
                              minY: e.minY,
                              maxY: e.maxY,
                              minYArr: e.minYArr,
                              maxYArr: e.maxYArr,
                              yAxisScale: e.yAxisScale
                          }
                      }
                  }, {
                      key: "setXRange",
                      value: function() {
                          var e = this.w.globals,
                              t = this.w.config,
                              i = "numeric" === t.xaxis.type || "datetime" === t.xaxis.type || "category" === t.xaxis.type && !e.noLabelsProvided || e.noLabelsProvided || e.isXNumeric;
                          if (e.isXNumeric && function() {
                                  for (var t = 0; t < e.series.length; t++)
                                      if (e.labels[t])
                                          for (var i = 0; i < e.labels[t].length; i++) null !== e.labels[t][i] && y.isNumber(e.labels[t][i]) && (e.maxX = Math.max(e.maxX, e.labels[t][i]), e.initialMaxX = Math.max(e.maxX, e.labels[t][i]), e.minX = Math.min(e.minX, e.labels[t][i]), e.initialMinX = Math.min(e.minX, e.labels[t][i]))
                              }(), e.noLabelsProvided && 0 === t.xaxis.categories.length && (e.maxX = e.labels[e.labels.length - 1], e.initialMaxX = e.labels[e.labels.length - 1], e.minX = 1, e.initialMinX = 1), e.isXNumeric || e.noLabelsProvided || e.dataFormatXNumeric) {
                              var n;
                              if (void 0 === t.xaxis.tickAmount ? (n = Math.round(e.svgWidth / 150), "numeric" === t.xaxis.type && e.dataPoints < 30 && (n = e.dataPoints - 1), n > e.dataPoints && 0 !== e.dataPoints && (n = e.dataPoints - 1)) : "dataPoints" === t.xaxis.tickAmount ? (e.series.length > 1 && (n = e.series[e.maxValsInArrayIndex].length - 1), e.isXNumeric && (n = e.maxX - e.minX - 1)) : n = t.xaxis.tickAmount, e.xTickAmount = n, void 0 !== t.xaxis.max && "number" == typeof t.xaxis.max && (e.maxX = t.xaxis.max), void 0 !== t.xaxis.min && "number" == typeof t.xaxis.min && (e.minX = t.xaxis.min), void 0 !== t.xaxis.range && (e.minX = e.maxX - t.xaxis.range), e.minX !== Number.MAX_VALUE && e.maxX !== -Number.MAX_VALUE)
                                  if (t.xaxis.convertedCatToNumeric && !e.dataFormatXNumeric) {
                                      for (var a = [], r = e.minX - 1; r < e.maxX; r++) a.push(r + 1);
                                      e.xAxisScale = {
                                          result: a,
                                          niceMin: a[0],
                                          niceMax: a[a.length - 1]
                                      }
                                  } else e.xAxisScale = this.scales.setXScale(e.minX, e.maxX);
                              else e.xAxisScale = this.scales.linearScale(1, n, n), e.noLabelsProvided && e.labels.length > 0 && (e.xAxisScale = this.scales.linearScale(1, e.labels.length, n - 1), e.seriesX = e.labels.slice());
                              i && (e.labels = e.xAxisScale.result.slice())
                          }
                          return e.isBarHorizontal && e.labels.length && (e.xTickAmount = e.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
                              minX: e.minX,
                              maxX: e.maxX
                          }
                      }
                  }, {
                      key: "setZRange",
                      value: function() {
                          var e = this.w.globals;
                          if (e.isDataXYZ)
                              for (var t = 0; t < e.series.length; t++)
                                  if (void 0 !== e.seriesZ[t])
                                      for (var i = 0; i < e.seriesZ[t].length; i++) null !== e.seriesZ[t][i] && y.isNumber(e.seriesZ[t][i]) && (e.maxZ = Math.max(e.maxZ, e.seriesZ[t][i]), e.minZ = Math.min(e.minZ, e.seriesZ[t][i]))
                      }
                  }, {
                      key: "_handleSingleDataPoint",
                      value: function() {
                          var e = this.w.globals,
                              t = this.w.config;
                          if (e.minX === e.maxX) {
                              var i = new X(this.ctx);
                              if ("datetime" === t.xaxis.type) {
                                  var n = i.getDate(e.minX);
                                  t.xaxis.labels.datetimeUTC ? n.setUTCDate(n.getUTCDate() - 2) : n.setDate(n.getDate() - 2), e.minX = new Date(n).getTime();
                                  var a = i.getDate(e.maxX);
                                  t.xaxis.labels.datetimeUTC ? a.setUTCDate(a.getUTCDate() + 2) : a.setDate(a.getDate() + 2), e.maxX = new Date(a).getTime()
                              } else("numeric" === t.xaxis.type || "category" === t.xaxis.type && !e.noLabelsProvided) && (e.minX = e.minX - 2, e.initialMinX = e.minX, e.maxX = e.maxX + 2, e.initialMaxX = e.maxX)
                          }
                      }
                  }, {
                      key: "_getMinXDiff",
                      value: function() {
                          var e = this.w.globals;
                          e.isXNumeric && e.seriesX.forEach((function(t, i) {
                              1 === t.length && t.push(e.seriesX[e.maxValsInArrayIndex][e.seriesX[e.maxValsInArrayIndex].length - 1]);
                              var n = t.slice();
                              n.sort((function(e, t) {
                                  return e - t
                              })), n.forEach((function(t, i) {
                                  if (i > 0) {
                                      var a = t - n[i - 1];
                                      a > 0 && (e.minXDiff = Math.min(a, e.minXDiff))
                                  }
                              })), 1 !== e.dataPoints && e.minXDiff !== Number.MAX_VALUE || (e.minXDiff = .5)
                          }))
                      }
                  }, {
                      key: "_setStackedMinMax",
                      value: function() {
                          var e = this.w.globals,
                              t = [],
                              i = [];
                          if (e.series.length)
                              for (var n = 0; n < e.series[e.maxValsInArrayIndex].length; n++)
                                  for (var a = 0, r = 0, s = 0; s < e.series.length; s++) null !== e.series[s][n] && y.isNumber(e.series[s][n]) && (e.series[s][n] > 0 ? a = a + parseFloat(e.series[s][n]) + 1e-4 : r += parseFloat(e.series[s][n])), s === e.series.length - 1 && (t.push(a), i.push(r));
                          for (var o = 0; o < t.length; o++) e.maxY = Math.max(e.maxY, t[o]), e.minY = Math.min(e.minY, i[o])
                      }
                  }]), e
              }(),
              ee = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.xaxisFontSize = i.config.xaxis.labels.style.fontSize, this.axisFontFamily = i.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = i.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === i.config.chart.type && i.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === i.config.xaxis.position && (this.xAxisoffX = i.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new U(t)
                  }
                  return c(e, [{
                      key: "drawYaxis",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = new S(this.ctx),
                              a = i.config.yaxis[e].labels.style,
                              r = a.fontSize,
                              s = a.fontFamily,
                              o = a.fontWeight,
                              l = n.group({
                                  class: "apexcharts-yaxis",
                                  rel: e,
                                  transform: "translate(" + i.globals.translateYAxisX[e] + ", 0)"
                              });
                          if (this.axesUtils.isYAxisHidden(e)) return l;
                          var c = n.group({
                              class: "apexcharts-yaxis-texts-g"
                          });
                          l.add(c);
                          var h = i.globals.yAxisScale[e].result.length - 1,
                              u = i.globals.gridHeight / h,
                              d = i.globals.translateY,
                              f = i.globals.yLabelFormatters[e],
                              p = i.globals.yAxisScale[e].result.slice();
                          p = this.axesUtils.checkForReversedLabels(e, p);
                          var g = "";
                          if (i.config.yaxis[e].labels.show)
                              for (var x = function(l) {
                                      var x = p[l];
                                      x = f(x, l, i);
                                      var v = i.config.yaxis[e].labels.padding;
                                      i.config.yaxis[e].opposite && 0 !== i.config.yaxis.length && (v *= -1);
                                      var m = t.axesUtils.getYAxisForeColor(a.colors, e),
                                          b = n.drawText({
                                              x: v,
                                              y: d + h / 10 + i.config.yaxis[e].labels.offsetY + 1,
                                              text: x,
                                              textAnchor: i.config.yaxis[e].opposite ? "start" : "end",
                                              fontSize: r,
                                              fontFamily: s,
                                              fontWeight: o,
                                              foreColor: Array.isArray(m) ? m[l] : m,
                                              isPlainText: !1,
                                              cssClass: "apexcharts-yaxis-label " + a.cssClass
                                          });
                                      l === h && (g = b), c.add(b);
                                      var y = document.createElementNS(i.globals.SVGNS, "title");
                                      if (y.textContent = Array.isArray(x) ? x.join(" ") : x, b.node.appendChild(y), 0 !== i.config.yaxis[e].labels.rotate) {
                                          var w = n.rotateAroundCenter(g.node),
                                              k = n.rotateAroundCenter(b.node);
                                          b.node.setAttribute("transform", "rotate(".concat(i.config.yaxis[e].labels.rotate, " ").concat(w.x, " ").concat(k.y, ")"))
                                      }
                                      d += u
                                  }, v = h; v >= 0; v--) x(v);
                          if (void 0 !== i.config.yaxis[e].title.text) {
                              var m = n.group({
                                      class: "apexcharts-yaxis-title"
                                  }),
                                  b = 0;
                              i.config.yaxis[e].opposite && (b = i.globals.translateYAxisX[e]);
                              var y = n.drawText({
                                  x: b,
                                  y: i.globals.gridHeight / 2 + i.globals.translateY + i.config.yaxis[e].title.offsetY,
                                  text: i.config.yaxis[e].title.text,
                                  textAnchor: "end",
                                  foreColor: i.config.yaxis[e].title.style.color,
                                  fontSize: i.config.yaxis[e].title.style.fontSize,
                                  fontWeight: i.config.yaxis[e].title.style.fontWeight,
                                  fontFamily: i.config.yaxis[e].title.style.fontFamily,
                                  cssClass: "apexcharts-yaxis-title-text " + i.config.yaxis[e].title.style.cssClass
                              });
                              m.add(y), l.add(m)
                          }
                          var w = i.config.yaxis[e].axisBorder,
                              k = 31 + w.offsetX;
                          if (i.config.yaxis[e].opposite && (k = -31 - w.offsetX), w.show) {
                              var A = n.drawLine(k, i.globals.translateY + w.offsetY - 2, k, i.globals.gridHeight + i.globals.translateY + w.offsetY + 2, w.color, 0, w.width);
                              l.add(A)
                          }
                          return i.config.yaxis[e].axisTicks.show && this.axesUtils.drawYAxisTicks(k, h, w, i.config.yaxis[e].axisTicks, e, u, l), l
                      }
                  }, {
                      key: "drawYaxisInversed",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = i.group({
                                  class: "apexcharts-xaxis apexcharts-yaxis-inversed"
                              }),
                              a = i.group({
                                  class: "apexcharts-xaxis-texts-g",
                                  transform: "translate(".concat(t.globals.translateXAxisX, ", ").concat(t.globals.translateXAxisY, ")")
                              });
                          n.add(a);
                          var r = t.globals.yAxisScale[e].result.length - 1,
                              s = t.globals.gridWidth / r + .1,
                              o = s + t.config.xaxis.labels.offsetX,
                              l = t.globals.xLabelFormatter,
                              c = t.globals.yAxisScale[e].result.slice(),
                              h = t.globals.timescaleLabels;
                          h.length > 0 && (this.xaxisLabels = h.slice(), r = (c = h.slice()).length), c = this.axesUtils.checkForReversedLabels(e, c);
                          var u = h.length;
                          if (t.config.xaxis.labels.show)
                              for (var d = u ? 0 : r; u ? d < u : d >= 0; u ? d++ : d--) {
                                  var f = c[d];
                                  f = l(f, d, t);
                                  var p = t.globals.gridWidth + t.globals.padHorizontal - (o - s + t.config.xaxis.labels.offsetX);
                                  if (h.length) {
                                      var g = this.axesUtils.getLabel(c, h, p, d, this.drawnLabels, this.xaxisFontSize);
                                      p = g.x, f = g.text, this.drawnLabels.push(g.text), 0 === d && t.globals.skipFirstTimelinelabel && (f = ""), d === c.length - 1 && t.globals.skipLastTimelinelabel && (f = "")
                                  }
                                  var x = i.drawText({
                                      x: p,
                                      y: this.xAxisoffX + t.config.xaxis.labels.offsetY + 30 - ("top" === t.config.xaxis.position ? t.globals.xAxisHeight + t.config.xaxis.axisTicks.height - 2 : 0),
                                      text: f,
                                      textAnchor: "middle",
                                      foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[e] : this.xaxisForeColors,
                                      fontSize: this.xaxisFontSize,
                                      fontFamily: this.xaxisFontFamily,
                                      fontWeight: t.config.xaxis.labels.style.fontWeight,
                                      isPlainText: !1,
                                      cssClass: "apexcharts-xaxis-label " + t.config.xaxis.labels.style.cssClass
                                  });
                                  a.add(x), x.tspan(f);
                                  var v = document.createElementNS(t.globals.SVGNS, "title");
                                  v.textContent = f, x.node.appendChild(v), o += s
                              }
                          return this.inversedYAxisTitleText(n), this.inversedYAxisBorder(n), n
                      }
                  }, {
                      key: "inversedYAxisBorder",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = t.config.xaxis.axisBorder;
                          if (n.show) {
                              var a = 0;
                              "bar" === t.config.chart.type && t.globals.isXNumeric && (a -= 15);
                              var r = i.drawLine(t.globals.padHorizontal + a + n.offsetX, this.xAxisoffX, t.globals.gridWidth, this.xAxisoffX, n.color, 0, n.height);
                              e.add(r)
                          }
                      }
                  }, {
                      key: "inversedYAxisTitleText",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx);
                          if (void 0 !== t.config.xaxis.title.text) {
                              var n = i.group({
                                      class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
                                  }),
                                  a = i.drawText({
                                      x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
                                      y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(t.config.xaxis.title.style.fontSize) + t.config.xaxis.title.offsetY + 20,
                                      text: t.config.xaxis.title.text,
                                      textAnchor: "middle",
                                      fontSize: t.config.xaxis.title.style.fontSize,
                                      fontFamily: t.config.xaxis.title.style.fontFamily,
                                      fontWeight: t.config.xaxis.title.style.fontWeight,
                                      foreColor: t.config.xaxis.title.style.color,
                                      cssClass: "apexcharts-xaxis-title-text " + t.config.xaxis.title.style.cssClass
                                  });
                              n.add(a), e.add(n)
                          }
                      }
                  }, {
                      key: "yAxisTitleRotate",
                      value: function(e, t) {
                          var i = this.w,
                              n = new S(this.ctx),
                              a = {
                                  width: 0,
                                  height: 0
                              },
                              r = {
                                  width: 0,
                                  height: 0
                              },
                              s = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(e, "'] .apexcharts-yaxis-texts-g"));
                          null !== s && (a = s.getBoundingClientRect());
                          var o = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(e, "'] .apexcharts-yaxis-title text"));
                          if (null !== o && (r = o.getBoundingClientRect()), null !== o) {
                              var l = this.xPaddingForYAxisTitle(e, a, r, t);
                              o.setAttribute("x", l.xPos - (t ? 10 : 0))
                          }
                          if (null !== o) {
                              var c = n.rotateAroundCenter(o);
                              o.setAttribute("transform", "rotate(".concat(t ? -1 * i.config.yaxis[e].title.rotate : i.config.yaxis[e].title.rotate, " ").concat(c.x, " ").concat(c.y, ")"))
                          }
                      }
                  }, {
                      key: "xPaddingForYAxisTitle",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = 0,
                              s = 0,
                              o = 10;
                          return void 0 === a.config.yaxis[e].title.text || e < 0 ? {
                              xPos: s,
                              padd: 0
                          } : (n ? (s = t.width + a.config.yaxis[e].title.offsetX + i.width / 2 + o / 2, 0 === (r += 1) && (s -= o / 2)) : (s = -1 * t.width + a.config.yaxis[e].title.offsetX + o / 2 + i.width / 2, a.globals.isBarHorizontal && (o = 25, s = -1 * t.width - a.config.yaxis[e].title.offsetX - o)), {
                              xPos: s,
                              padd: o
                          })
                      }
                  }, {
                      key: "setYAxisXPosition",
                      value: function(e, t) {
                          var i = this.w,
                              n = 0,
                              a = 0,
                              r = 18,
                              s = 1;
                          i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map((function(o, l) {
                              var c = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !o.show || o.floating || 0 === e[l].width,
                                  h = e[l].width + t[l].width;
                              o.opposite ? i.globals.isBarHorizontal ? (a = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = a - o.labels.offsetX) : (a = i.globals.gridWidth + i.globals.translateX + s, c || (s = s + h + 20), i.globals.translateYAxisX[l] = a - o.labels.offsetX + 20) : (n = i.globals.translateX - r, c || (r = r + h + 20), i.globals.translateYAxisX[l] = n + o.labels.offsetX)
                          }))
                      }
                  }, {
                      key: "setYAxisTextAlignments",
                      value: function() {
                          var e = this.w,
                              t = e.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
                          (t = y.listToArray(t)).forEach((function(t, i) {
                              var n = e.config.yaxis[i];
                              if (n && void 0 !== n.labels.align) {
                                  var a = e.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
                                      r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
                                  r = y.listToArray(r);
                                  var s = a.getBoundingClientRect();
                                  "left" === n.labels.align ? (r.forEach((function(e, t) {
                                      e.setAttribute("text-anchor", "start")
                                  })), n.opposite || a.setAttribute("transform", "translate(-".concat(s.width, ", 0)"))) : "center" === n.labels.align ? (r.forEach((function(e, t) {
                                      e.setAttribute("text-anchor", "middle")
                                  })), a.setAttribute("transform", "translate(".concat(s.width / 2 * (n.opposite ? 1 : -1), ", 0)"))) : "right" === n.labels.align && (r.forEach((function(e, t) {
                                      e.setAttribute("text-anchor", "end")
                                  })), n.opposite && a.setAttribute("transform", "translate(".concat(s.width, ", 0)")))
                              }
                          }))
                      }
                  }]), e
              }(),
              te = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.documentEvent = y.bind(this.documentEvent, this)
                  }
                  return c(e, [{
                      key: "addEventListener",
                      value: function(e, t) {
                          var i = this.w;
                          i.globals.events.hasOwnProperty(e) ? i.globals.events[e].push(t) : i.globals.events[e] = [t]
                      }
                  }, {
                      key: "removeEventListener",
                      value: function(e, t) {
                          var i = this.w;
                          if (i.globals.events.hasOwnProperty(e)) {
                              var n = i.globals.events[e].indexOf(t); - 1 !== n && i.globals.events[e].splice(n, 1)
                          }
                      }
                  }, {
                      key: "fireEvent",
                      value: function(e, t) {
                          var i = this.w;
                          if (i.globals.events.hasOwnProperty(e)) {
                              t && t.length || (t = []);
                              for (var n = i.globals.events[e], a = n.length, r = 0; r < a; r++) n[r].apply(null, t)
                          }
                      }
                  }, {
                      key: "setupEventHandlers",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = this.ctx,
                              n = t.globals.dom.baseEl.querySelector(t.globals.chartClass);
                          this.ctx.eventList.forEach((function(e) {
                              n.addEventListener(e, (function(e) {
                                  var n = Object.assign({}, t, {
                                      seriesIndex: t.globals.capturedSeriesIndex,
                                      dataPointIndex: t.globals.capturedDataPointIndex
                                  });
                                  "mousemove" === e.type || "touchmove" === e.type ? "function" == typeof t.config.chart.events.mouseMove && t.config.chart.events.mouseMove(e, i, n) : "mouseleave" === e.type || "touchleave" === e.type ? "function" == typeof t.config.chart.events.mouseLeave && t.config.chart.events.mouseLeave(e, i, n) : ("mouseup" === e.type && 1 === e.which || "touchend" === e.type) && ("function" == typeof t.config.chart.events.click && t.config.chart.events.click(e, i, n), i.ctx.events.fireEvent("click", [e, i, n]))
                              }), {
                                  capture: !1,
                                  passive: !0
                              })
                          })), this.ctx.eventList.forEach((function(i) {
                              t.globals.dom.baseEl.addEventListener(i, e.documentEvent, {
                                  passive: !0
                              })
                          })), this.ctx.core.setupBrushHandler()
                      }
                  }, {
                      key: "documentEvent",
                      value: function(e) {
                          var t = this.w,
                              i = e.target.className;
                          if ("click" === e.type) {
                              var n = t.globals.dom.baseEl.querySelector(".apexcharts-menu");
                              n && n.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i && n.classList.remove("apexcharts-menu-open")
                          }
                          t.globals.clientX = "touchmove" === e.type ? e.touches[0].clientX : e.clientX, t.globals.clientY = "touchmove" === e.type ? e.touches[0].clientY : e.clientY
                      }
                  }]), e
              }(),
              ie = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "setCurrentLocaleValues",
                      value: function(e) {
                          var t = this.w.config.chart.locales;
                          window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (t = this.w.config.chart.locales.concat(window.Apex.chart.locales));
                          var i = t.filter((function(t) {
                              return t.name === e
                          }))[0];
                          if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
                          var n = y.extend(P, i);
                          this.w.globals.locale = n.options
                      }
                  }]), e
              }(),
              ne = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "drawAxis",
                      value: function(e, t) {
                          var i, n, a = this.w.globals,
                              r = this.w.config,
                              s = new Z(this.ctx),
                              o = new ee(this.ctx);
                          a.axisCharts && "radar" !== e && (a.isBarHorizontal ? (n = o.drawYaxisInversed(0), i = s.drawXaxisInversed(0), a.dom.elGraphical.add(i), a.dom.elGraphical.add(n)) : (i = s.drawXaxis(), a.dom.elGraphical.add(i), r.yaxis.map((function(e, t) {
                              -1 === a.ignoreYAxisIndexes.indexOf(t) && (n = o.drawYaxis(t), a.dom.Paper.add(n))
                          }))))
                      }
                  }]), e
              }(),
              ae = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "drawXCrosshairs",
                      value: function() {
                          var e = this.w,
                              t = new S(this.ctx),
                              i = new k(this.ctx),
                              n = e.config.xaxis.crosshairs.fill.gradient,
                              a = e.config.xaxis.crosshairs.dropShadow,
                              r = e.config.xaxis.crosshairs.fill.type,
                              s = n.colorFrom,
                              o = n.colorTo,
                              l = n.opacityFrom,
                              c = n.opacityTo,
                              h = n.stops,
                              u = a.enabled,
                              d = a.left,
                              f = a.top,
                              p = a.blur,
                              g = a.color,
                              x = a.opacity,
                              v = e.config.xaxis.crosshairs.fill.color;
                          if (e.config.xaxis.crosshairs.show) {
                              "gradient" === r && (v = t.drawGradient("vertical", s, o, l, c, null, h, null));
                              var m = t.drawRect();
                              1 === e.config.xaxis.crosshairs.width && (m = t.drawLine());
                              var b = e.globals.gridHeight;
                              (!y.isNumber(b) || b < 0) && (b = 0);
                              var w = e.config.xaxis.crosshairs.width;
                              (!y.isNumber(w) || w < 0) && (w = 0), m.attr({
                                  class: "apexcharts-xcrosshairs",
                                  x: 0,
                                  y: 0,
                                  y2: b,
                                  width: w,
                                  height: b,
                                  fill: v,
                                  filter: "none",
                                  "fill-opacity": e.config.xaxis.crosshairs.opacity,
                                  stroke: e.config.xaxis.crosshairs.stroke.color,
                                  "stroke-width": e.config.xaxis.crosshairs.stroke.width,
                                  "stroke-dasharray": e.config.xaxis.crosshairs.stroke.dashArray
                              }), u && (m = i.dropShadow(m, {
                                  left: d,
                                  top: f,
                                  blur: p,
                                  color: g,
                                  opacity: x
                              })), e.globals.dom.elGraphical.add(m)
                          }
                      }
                  }, {
                      key: "drawYCrosshairs",
                      value: function() {
                          var e = this.w,
                              t = new S(this.ctx),
                              i = e.config.yaxis[0].crosshairs,
                              n = e.globals.barPadForNumericAxis;
                          if (e.config.yaxis[0].crosshairs.show) {
                              var a = t.drawLine(-n, 0, e.globals.gridWidth + n, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
                              a.attr({
                                  class: "apexcharts-ycrosshairs"
                              }), e.globals.dom.elGraphical.add(a)
                          }
                          var r = t.drawLine(-n, 0, e.globals.gridWidth + n, 0, i.stroke.color, 0, 0);
                          r.attr({
                              class: "apexcharts-ycrosshairs-hidden"
                          }), e.globals.dom.elGraphical.add(r)
                      }
                  }]), e
              }(),
              re = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "checkResponsiveConfig",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = i.config;
                          if (0 !== n.responsive.length) {
                              var a = n.responsive.slice();
                              a.sort((function(e, t) {
                                  return e.breakpoint > t.breakpoint ? 1 : t.breakpoint > e.breakpoint ? -1 : 0
                              })).reverse();
                              var r = new j({}),
                                  s = function() {
                                      var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                          n = a[0].breakpoint,
                                          s = window.innerWidth > 0 ? window.innerWidth : screen.width;
                                      if (s > n) {
                                          var o = T.extendArrayProps(r, i.globals.initialConfig, i);
                                          e = y.extend(o, e), e = y.extend(i.config, e), t.overrideResponsiveOptions(e)
                                      } else
                                          for (var l = 0; l < a.length; l++) s < a[l].breakpoint && (e = T.extendArrayProps(r, a[l].options, i), e = y.extend(i.config, e), t.overrideResponsiveOptions(e))
                                  };
                              if (e) {
                                  var o = T.extendArrayProps(r, e, i);
                                  o = y.extend(i.config, o), s(o = y.extend(o, e))
                              } else s({})
                          }
                      }
                  }, {
                      key: "overrideResponsiveOptions",
                      value: function(e) {
                          var t = new j(e).init({
                              responsiveOverride: !0
                          });
                          this.w.config = t
                      }
                  }]), e
              }(),
              se = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.colors = [], this.w = t.w;
                      var i = this.w;
                      this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === i.config.chart.type && i.config.plotOptions.treemap.distributed || "heatmap" === i.config.chart.type && i.config.plotOptions.heatmap.distributed, this.isBarDistributed = i.config.plotOptions.bar.distributed && ("bar" === i.config.chart.type || "rangeBar" === i.config.chart.type)
                  }
                  return c(e, [{
                      key: "init",
                      value: function() {
                          this.setDefaultColors()
                      }
                  }, {
                      key: "setDefaultColors",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = new y;
                          if (t.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(t.config.theme.mode)), void 0 === t.config.colors ? t.globals.colors = this.predefined() : (t.globals.colors = t.config.colors, Array.isArray(t.config.colors) && t.config.colors.length > 0 && "function" == typeof t.config.colors[0] && (t.globals.colors = t.config.series.map((function(i, n) {
                                  var a = t.config.colors[n];
                                  return a || (a = t.config.colors[0]), "function" == typeof a ? (e.isColorFn = !0, a({
                                      value: t.globals.axisCharts ? t.globals.series[n][0] ? t.globals.series[n][0] : 0 : t.globals.series[n],
                                      seriesIndex: n,
                                      dataPointIndex: n,
                                      w: t
                                  })) : a
                              })))), t.globals.seriesColors.map((function(e, i) {
                                  e && (t.globals.colors[i] = e)
                              })), t.config.theme.monochrome.enabled) {
                              var n = [],
                                  a = t.globals.series.length;
                              (this.isBarDistributed || this.isHeatmapDistributed) && (a = t.globals.series[0].length * t.globals.series.length);
                              for (var r = t.config.theme.monochrome.color, s = 1 / (a / t.config.theme.monochrome.shadeIntensity), o = t.config.theme.monochrome.shadeTo, l = 0, c = 0; c < a; c++) {
                                  var h = void 0;
                                  "dark" === o ? (h = i.shadeColor(-1 * l, r), l += s) : (h = i.shadeColor(l, r), l += s), n.push(h)
                              }
                              t.globals.colors = n.slice()
                          }
                          var u = t.globals.colors.slice();
                          this.pushExtraColors(t.globals.colors), ["fill", "stroke"].forEach((function(i) {
                              void 0 === t.config[i].colors ? t.globals[i].colors = e.isColorFn ? t.config.colors : u : t.globals[i].colors = t.config[i].colors.slice(), e.pushExtraColors(t.globals[i].colors)
                          })), void 0 === t.config.dataLabels.style.colors ? t.globals.dataLabels.style.colors = u : t.globals.dataLabels.style.colors = t.config.dataLabels.style.colors.slice(), this.pushExtraColors(t.globals.dataLabels.style.colors, 50), void 0 === t.config.plotOptions.radar.polygons.fill.colors ? t.globals.radarPolygons.fill.colors = ["dark" === t.config.theme.mode ? "#424242" : "none"] : t.globals.radarPolygons.fill.colors = t.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(t.globals.radarPolygons.fill.colors, 20), void 0 === t.config.markers.colors ? t.globals.markers.colors = u : t.globals.markers.colors = t.config.markers.colors.slice(), this.pushExtraColors(t.globals.markers.colors)
                      }
                  }, {
                      key: "pushExtraColors",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                              n = this.w,
                              a = t || n.globals.series.length;
                          if (null === i && (i = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === n.config.chart.type && n.config.plotOptions.heatmap.colorScale.inverse), i && n.globals.series.length && (a = n.globals.series[n.globals.maxValsInArrayIndex].length * n.globals.series.length), e.length < a)
                              for (var r = a - e.length, s = 0; s < r; s++) e.push(e[s])
                      }
                  }, {
                      key: "updateThemeOptions",
                      value: function(e) {
                          e.chart = e.chart || {}, e.tooltip = e.tooltip || {};
                          var t = e.theme.mode || "light",
                              i = e.theme.palette ? e.theme.palette : "dark" === t ? "palette4" : "palette1",
                              n = e.chart.foreColor ? e.chart.foreColor : "dark" === t ? "#f6f7f8" : "#373d3f";
                          return e.tooltip.theme = t, e.chart.foreColor = n, e.theme.palette = i, e
                      }
                  }, {
                      key: "predefined",
                      value: function() {
                          switch (this.w.config.theme.palette) {
                              case "palette1":
                                  this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
                                  break;
                              case "palette2":
                                  this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
                                  break;
                              case "palette3":
                                  this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
                                  break;
                              case "palette4":
                                  this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
                                  break;
                              case "palette5":
                                  this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
                                  break;
                              case "palette6":
                                  this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
                                  break;
                              case "palette7":
                                  this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
                                  break;
                              case "palette8":
                                  this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
                                  break;
                              case "palette9":
                                  this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
                                  break;
                              case "palette10":
                                  this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
                                  break;
                              default:
                                  this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"]
                          }
                          return this.colors
                      }
                  }]), e
              }(),
              oe = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "draw",
                      value: function() {
                          this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle")
                      }
                  }, {
                      key: "drawTitleSubtitle",
                      value: function(e) {
                          var t = this.w,
                              i = "title" === e ? t.config.title : t.config.subtitle,
                              n = t.globals.svgWidth / 2,
                              a = i.offsetY,
                              r = "middle";
                          if ("left" === i.align ? (n = 10, r = "start") : "right" === i.align && (n = t.globals.svgWidth - 10, r = "end"), n += i.offsetX, a = a + parseInt(i.style.fontSize, 10) + i.margin / 2, void 0 !== i.text) {
                              var s = new S(this.ctx).drawText({
                                  x: n,
                                  y: a,
                                  text: i.text,
                                  textAnchor: r,
                                  fontSize: i.style.fontSize,
                                  fontFamily: i.style.fontFamily,
                                  fontWeight: i.style.fontWeight,
                                  foreColor: i.style.color,
                                  opacity: 1
                              });
                              s.node.setAttribute("class", "apexcharts-".concat(e, "-text")), t.globals.dom.Paper.add(s)
                          }
                      }
                  }]), e
              }(),
              le = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.dCtx = t
                  }
                  return c(e, [{
                      key: "getTitleSubtitleCoords",
                      value: function(e) {
                          var t = this.w,
                              i = 0,
                              n = 0,
                              a = "title" === e ? t.config.title.floating : t.config.subtitle.floating,
                              r = t.globals.dom.baseEl.querySelector(".apexcharts-".concat(e, "-text"));
                          if (null !== r && !a) {
                              var s = r.getBoundingClientRect();
                              i = s.width, n = t.globals.axisCharts ? s.height + 5 : s.height
                          }
                          return {
                              width: i,
                              height: n
                          }
                      }
                  }, {
                      key: "getLegendsRect",
                      value: function() {
                          var e = this.w,
                              t = e.globals.dom.baseEl.querySelector(".apexcharts-legend");
                          e.config.legend.height || "top" !== e.config.legend.position && "bottom" !== e.config.legend.position || (t.style.maxHeight = e.globals.svgHeight / 2 + "px");
                          var i = Object.assign({}, y.getBoundingClientRect(t));
                          return null !== t && !e.config.legend.floating && e.config.legend.show ? this.dCtx.lgRect = {
                              x: i.x,
                              y: i.y,
                              height: i.height,
                              width: 0 === i.height ? 0 : i.width
                          } : this.dCtx.lgRect = {
                              x: 0,
                              y: 0,
                              height: 0,
                              width: 0
                          }, "left" !== e.config.legend.position && "right" !== e.config.legend.position || 1.5 * this.dCtx.lgRect.width > e.globals.svgWidth && (this.dCtx.lgRect.width = e.globals.svgWidth / 1.5), this.dCtx.lgRect
                      }
                  }, {
                      key: "getLargestStringFromMultiArr",
                      value: function(e, t) {
                          var i = e;
                          if (this.w.globals.isMultiLineX) {
                              var n = t.map((function(e, t) {
                                      return Array.isArray(e) ? e.length : 1
                                  })),
                                  a = Math.max.apply(Math, v(n));
                              i = t[n.indexOf(a)]
                          }
                          return i
                      }
                  }]), e
              }(),
              ce = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.dCtx = t
                  }
                  return c(e, [{
                      key: "getxAxisLabelsCoords",
                      value: function() {
                          var e, t = this.w,
                              i = t.globals.labels.slice();
                          if (t.config.xaxis.convertedCatToNumeric && 0 === i.length && (i = t.globals.categoryLabels), t.globals.timescaleLabels.length > 0) {
                              var n = this.getxAxisTimeScaleLabelsCoords();
                              e = {
                                  width: n.width,
                                  height: n.height
                              }, t.globals.rotateXLabels = !1
                          } else {
                              this.dCtx.lgWidthForSideLegends = "left" !== t.config.legend.position && "right" !== t.config.legend.position || t.config.legend.floating ? 0 : this.dCtx.lgRect.width;
                              var a = t.globals.xLabelFormatter,
                                  r = y.getLargestStringFromArr(i),
                                  s = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, i);
                              t.globals.isBarHorizontal && (s = r = t.globals.yAxisScale[0].result.reduce((function(e, t) {
                                  return e.length > t.length ? e : t
                              }), 0));
                              var o = new G(this.dCtx.ctx),
                                  l = r;
                              r = o.xLabelFormat(a, r, l, {
                                  i: void 0,
                                  dateFormatter: new X(this.dCtx.ctx).formatDate,
                                  w: t
                              }), s = o.xLabelFormat(a, s, l, {
                                  i: void 0,
                                  dateFormatter: new X(this.dCtx.ctx).formatDate,
                                  w: t
                              }), (t.config.xaxis.convertedCatToNumeric && void 0 === r || "" === String(r).trim()) && (s = r = "1");
                              var c = new S(this.dCtx.ctx),
                                  h = c.getTextRects(r, t.config.xaxis.labels.style.fontSize),
                                  u = h;
                              if (r !== s && (u = c.getTextRects(s, t.config.xaxis.labels.style.fontSize)), (e = {
                                      width: h.width >= u.width ? h.width : u.width,
                                      height: h.height >= u.height ? h.height : u.height
                                  }).width * i.length > t.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== t.config.xaxis.labels.rotate || t.config.xaxis.labels.rotateAlways) {
                                  if (!t.globals.isBarHorizontal) {
                                      t.globals.rotateXLabels = !0;
                                      var d = function(e) {
                                          return c.getTextRects(e, t.config.xaxis.labels.style.fontSize, t.config.xaxis.labels.style.fontFamily, "rotate(".concat(t.config.xaxis.labels.rotate, " 0 0)"), !1)
                                      };
                                      h = d(r), r !== s && (u = d(s)), e.height = (h.height > u.height ? h.height : u.height) / 1.5, e.width = h.width > u.width ? h.width : u.width
                                  }
                              } else t.globals.rotateXLabels = !1
                          }
                          return t.config.xaxis.labels.show || (e = {
                              width: 0,
                              height: 0
                          }), {
                              width: e.width,
                              height: e.height
                          }
                      }
                  }, {
                      key: "getxAxisTitleCoords",
                      value: function() {
                          var e = this.w,
                              t = 0,
                              i = 0;
                          if (void 0 !== e.config.xaxis.title.text) {
                              var n = new S(this.dCtx.ctx).getTextRects(e.config.xaxis.title.text, e.config.xaxis.title.style.fontSize);
                              t = n.width, i = n.height
                          }
                          return {
                              width: t,
                              height: i
                          }
                      }
                  }, {
                      key: "getxAxisTimeScaleLabelsCoords",
                      value: function() {
                          var e, t = this.w;
                          this.dCtx.timescaleLabels = t.globals.timescaleLabels.slice();
                          var i = this.dCtx.timescaleLabels.map((function(e) {
                                  return e.value
                              })),
                              n = i.reduce((function(e, t) {
                                  return void 0 === e ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : e.length > t.length ? e : t
                              }), 0);
                          return 1.05 * (e = new S(this.dCtx.ctx).getTextRects(n, t.config.xaxis.labels.style.fontSize)).width * i.length > t.globals.gridWidth && 0 !== t.config.xaxis.labels.rotate && (t.globals.overlappingXLabels = !0), e
                      }
                  }, {
                      key: "additionalPaddingXLabels",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = i.globals,
                              a = i.config,
                              r = a.xaxis.type,
                              s = e.width;
                          n.skipLastTimelinelabel = !1, n.skipFirstTimelinelabel = !1;
                          var o = i.config.yaxis[0].opposite && i.globals.isBarHorizontal,
                              l = function(e, o) {
                                  (function(e) {
                                      return -1 !== n.collapsedSeriesIndices.indexOf(e)
                                  })(o) || function(e) {
                                      if (t.dCtx.timescaleLabels && t.dCtx.timescaleLabels.length) {
                                          var o = t.dCtx.timescaleLabels[0],
                                              l = t.dCtx.timescaleLabels[t.dCtx.timescaleLabels.length - 1].position + s / 1.75 - t.dCtx.yAxisWidthRight,
                                              c = o.position - s / 1.75 + t.dCtx.yAxisWidthLeft,
                                              h = "right" === i.config.legend.position && t.dCtx.lgRect.width > 0 ? t.dCtx.lgRect.width : 0;
                                          l > n.svgWidth - n.translateX - h && (n.skipLastTimelinelabel = !0), c < -(e.show && !e.floating || "bar" !== a.chart.type && "candlestick" !== a.chart.type && "rangeBar" !== a.chart.type && "boxPlot" !== a.chart.type ? 10 : s / 1.75) && (n.skipFirstTimelinelabel = !0)
                                      } else "datetime" === r ? t.dCtx.gridPad.right < s && !n.rotateXLabels && (n.skipLastTimelinelabel = !0) : "datetime" !== r && t.dCtx.gridPad.right < s / 2 - t.dCtx.yAxisWidthRight && !n.rotateXLabels && !i.config.xaxis.labels.trim && ("between" !== i.config.xaxis.tickPlacement || i.globals.isBarHorizontal) && (t.dCtx.xPadRight = s / 2 + 1)
                                  }(e)
                              };
                          a.yaxis.forEach((function(e, i) {
                              o ? (t.dCtx.gridPad.left < s && (t.dCtx.xPadLeft = s / 2 + 1), t.dCtx.xPadRight = s / 2 + 1) : l(e, i)
                          }))
                      }
                  }]), e
              }(),
              he = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.dCtx = t
                  }
                  return c(e, [{
                      key: "getyAxisLabelsCoords",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = [],
                              n = 10,
                              a = new U(this.dCtx.ctx);
                          return t.config.yaxis.map((function(r, s) {
                              var o = t.globals.yAxisScale[s],
                                  l = 0;
                              if (!a.isYAxisHidden(s) && r.labels.show && void 0 !== r.labels.minWidth && (l = r.labels.minWidth), !a.isYAxisHidden(s) && r.labels.show && o.result.length) {
                                  var c = t.globals.yLabelFormatters[s],
                                      h = o.niceMin === Number.MIN_VALUE ? 0 : o.niceMin,
                                      u = String(h).length > String(o.niceMax).length ? h : o.niceMax,
                                      d = c(u, {
                                          seriesIndex: s,
                                          dataPointIndex: -1,
                                          w: t
                                      }),
                                      f = d;
                                  if (void 0 !== d && 0 !== d.length || (d = u), t.globals.isBarHorizontal) {
                                      n = 0;
                                      var p = t.globals.labels.slice();
                                      d = c(d = y.getLargestStringFromArr(p), {
                                          seriesIndex: s,
                                          dataPointIndex: -1,
                                          w: t
                                      }), f = e.dCtx.dimHelpers.getLargestStringFromMultiArr(d, p)
                                  }
                                  var g = new S(e.dCtx.ctx),
                                      x = "rotate(".concat(r.labels.rotate, " 0 0)"),
                                      v = g.getTextRects(d, r.labels.style.fontSize, r.labels.style.fontFamily, x, !1),
                                      m = v;
                                  d !== f && (m = g.getTextRects(f, r.labels.style.fontSize, r.labels.style.fontFamily, x, !1)), i.push({
                                      width: (l > m.width || l > v.width ? l : m.width > v.width ? m.width : v.width) + n,
                                      height: m.height > v.height ? m.height : v.height
                                  })
                              } else i.push({
                                  width: 0,
                                  height: 0
                              })
                          })), i
                      }
                  }, {
                      key: "getyAxisTitleCoords",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = [];
                          return t.config.yaxis.map((function(t, n) {
                              if (t.show && void 0 !== t.title.text) {
                                  var a = new S(e.dCtx.ctx),
                                      r = "rotate(".concat(t.title.rotate, " 0 0)"),
                                      s = a.getTextRects(t.title.text, t.title.style.fontSize, t.title.style.fontFamily, r, !1);
                                  i.push({
                                      width: s.width,
                                      height: s.height
                                  })
                              } else i.push({
                                  width: 0,
                                  height: 0
                              })
                          })), i
                      }
                  }, {
                      key: "getTotalYAxisWidth",
                      value: function() {
                          var e = this.w,
                              t = 0,
                              i = 0,
                              n = 0,
                              a = e.globals.yAxisScale.length > 1 ? 10 : 0,
                              r = new U(this.dCtx.ctx),
                              s = function(s, o) {
                                  var l = e.config.yaxis[o].floating,
                                      c = 0;
                                  s.width > 0 && !l ? (c = s.width + a, function(t) {
                                      return e.globals.ignoreYAxisIndexes.indexOf(t) > -1
                                  }(o) && (c = c - s.width - a)) : c = l || r.isYAxisHidden(o) ? 0 : 5, e.config.yaxis[o].opposite ? n += c : i += c, t += c
                              };
                          return e.globals.yLabelsCoords.map((function(e, t) {
                              s(e, t)
                          })), e.globals.yTitleCoords.map((function(e, t) {
                              s(e, t)
                          })), e.globals.isBarHorizontal && !e.config.yaxis[0].floating && (t = e.globals.yLabelsCoords[0].width + e.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i, this.dCtx.yAxisWidthRight = n, t
                      }
                  }]), e
              }(),
              ue = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.dCtx = t
                  }
                  return c(e, [{
                      key: "gridPadForColumnsInNumericAxis",
                      value: function(e) {
                          var t = this.w;
                          if (t.globals.noData || t.globals.allSeriesCollapsed) return 0;
                          var i = function(e) {
                                  return "bar" === e || "rangeBar" === e || "candlestick" === e || "boxPlot" === e
                              },
                              n = t.config.chart.type,
                              a = 0,
                              r = i(n) ? t.config.series.length : 1;
                          if (t.globals.comboBarCount > 0 && (r = t.globals.comboBarCount), t.globals.collapsedSeries.forEach((function(e) {
                                  i(e.type) && (r -= 1)
                              })), t.config.chart.stacked && (r = 1), (i(n) || t.globals.comboBarCount > 0) && t.globals.isXNumeric && !t.globals.isBarHorizontal && r > 0) {
                              var s, o, l = Math.abs(t.globals.initialMaxX - t.globals.initialMinX);
                              l <= 3 && (l = t.globals.dataPoints), s = l / e, t.globals.minXDiff && t.globals.minXDiff / s > 0 && (o = t.globals.minXDiff / s), o > e / 2 && (o /= 2), (a = o / r * parseInt(t.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (a = 1), a = a / (r > 1 ? 1 : 1.5) + 5, t.globals.barPadForNumericAxis = a
                          }
                          return a
                      }
                  }, {
                      key: "gridPadFortitleSubtitle",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = t.globals,
                              n = this.dCtx.isSparkline || !t.globals.axisCharts ? 0 : 10;
                          ["title", "subtitle"].forEach((function(i) {
                              void 0 !== t.config[i].text ? n += t.config[i].margin : n += e.dCtx.isSparkline || !t.globals.axisCharts ? 0 : 5
                          })), !t.config.legend.show || "bottom" !== t.config.legend.position || t.config.legend.floating || t.globals.axisCharts || (n += 10);
                          var a = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                              r = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                          i.gridHeight = i.gridHeight - a.height - r.height - n, i.translateY = i.translateY + a.height + r.height + n
                      }
                  }, {
                      key: "setGridXPosForDualYAxis",
                      value: function(e, t) {
                          var i = this.w,
                              n = new U(this.dCtx.ctx);
                          i.config.yaxis.map((function(a, r) {
                              -1 !== i.globals.ignoreYAxisIndexes.indexOf(r) || a.floating || n.isYAxisHidden(r) || (a.opposite && (i.globals.translateX = i.globals.translateX - (t[r].width + e[r].width) - parseInt(i.config.yaxis[r].labels.style.fontSize, 10) / 1.2 - 12), i.globals.translateX < 2 && (i.globals.translateX = 2))
                          }))
                      }
                  }]), e
              }(),
              de = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new le(this), this.dimYAxis = new he(this), this.dimXAxis = new ce(this), this.dimGrid = new ue(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0
                  }
                  return c(e, [{
                      key: "plotCoords",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = t.globals;
                          this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && (t.config.markers.discrete.length > 0 || t.config.markers.size > 0) && Object.entries(this.gridPad).forEach((function(t) {
                              var i = x(t, 2),
                                  n = i[0],
                                  a = i[1];
                              e.gridPad[n] = Math.max(a, e.w.globals.markers.largestSize / 1.5)
                          })), i.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), i.gridHeight = i.gridHeight - this.gridPad.top - this.gridPad.bottom, i.gridWidth = i.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
                          var n = this.dimGrid.gridPadForColumnsInNumericAxis(i.gridWidth);
                          i.gridWidth = i.gridWidth - 2 * n, i.translateX = i.translateX + this.gridPad.left + this.xPadLeft + (n > 0 ? n + 4 : 0), i.translateY = i.translateY + this.gridPad.top
                      }
                  }, {
                      key: "setDimensionsForAxisCharts",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = t.globals,
                              n = this.dimYAxis.getyAxisLabelsCoords(),
                              a = this.dimYAxis.getyAxisTitleCoords();
                          t.globals.yLabelsCoords = [], t.globals.yTitleCoords = [], t.config.yaxis.map((function(e, i) {
                              t.globals.yLabelsCoords.push({
                                  width: n[i].width,
                                  index: i
                              }), t.globals.yTitleCoords.push({
                                  width: a[i].width,
                                  index: i
                              })
                          })), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
                          var r = this.dimXAxis.getxAxisLabelsCoords(),
                              s = this.dimXAxis.getxAxisTitleCoords();
                          this.conditionalChecksForAxisCoords(r, s), i.translateXAxisY = t.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = t.globals.rotateXLabels && t.globals.isXNumeric && t.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, t.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(t.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + t.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + t.config.xaxis.labels.offsetX;
                          var o = this.yAxisWidth,
                              l = this.xAxisHeight;
                          i.xAxisLabelsHeight = this.xAxisHeight - s.height, i.xAxisLabelsWidth = this.xAxisWidth, i.xAxisHeight = this.xAxisHeight;
                          var c = 10;
                          ("radar" === t.config.chart.type || this.isSparkline) && (o = 0, l = i.goldenPadding), this.isSparkline && (this.lgRect = {
                              height: 0,
                              width: 0
                          }), (this.isSparkline || "treemap" === t.config.chart.type) && (o = 0, l = 0, c = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r);
                          var h = function() {
                              i.translateX = o, i.gridHeight = i.svgHeight - e.lgRect.height - l - (e.isSparkline || "treemap" === t.config.chart.type ? 0 : t.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - o
                          };
                          switch ("top" === t.config.xaxis.position && (c = i.xAxisHeight - t.config.xaxis.axisTicks.height - 5), t.config.legend.position) {
                              case "bottom":
                                  i.translateY = c, h();
                                  break;
                              case "top":
                                  i.translateY = this.lgRect.height + c, h();
                                  break;
                              case "left":
                                  i.translateY = c, i.translateX = this.lgRect.width + o, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - this.lgRect.width - o;
                                  break;
                              case "right":
                                  i.translateY = c, i.translateX = o, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - this.lgRect.width - o - 5;
                                  break;
                              default:
                                  throw new Error("Legend position not supported")
                          }
                          this.dimGrid.setGridXPosForDualYAxis(a, n), new ee(this.ctx).setYAxisXPosition(n, a)
                      }
                  }, {
                      key: "setDimensionsForNonAxisCharts",
                      value: function() {
                          var e = this.w,
                              t = e.globals,
                              i = e.config,
                              n = 0;
                          e.config.legend.show && !e.config.legend.floating && (n = 20);
                          var a = "pie" === i.chart.type || "polarArea" === i.chart.type || "donut" === i.chart.type ? "pie" : "radialBar",
                              r = i.plotOptions[a].offsetY,
                              s = i.plotOptions[a].offsetX;
                          if (!i.legend.show || i.legend.floating) return t.gridHeight = t.svgHeight - i.grid.padding.left + i.grid.padding.right, t.gridWidth = t.gridHeight, t.translateY = r, void(t.translateX = s + (t.svgWidth - t.gridWidth) / 2);
                          switch (i.legend.position) {
                              case "bottom":
                                  t.gridHeight = t.svgHeight - this.lgRect.height - t.goldenPadding, t.gridWidth = t.svgWidth, t.translateY = r - 10, t.translateX = s + (t.svgWidth - t.gridWidth) / 2;
                                  break;
                              case "top":
                                  t.gridHeight = t.svgHeight - this.lgRect.height - t.goldenPadding, t.gridWidth = t.svgWidth, t.translateY = this.lgRect.height + r + 10, t.translateX = s + (t.svgWidth - t.gridWidth) / 2;
                                  break;
                              case "left":
                                  t.gridWidth = t.svgWidth - this.lgRect.width - n, t.gridHeight = "auto" !== i.chart.height ? t.svgHeight : t.gridWidth, t.translateY = r, t.translateX = s + this.lgRect.width + n;
                                  break;
                              case "right":
                                  t.gridWidth = t.svgWidth - this.lgRect.width - n - 5, t.gridHeight = "auto" !== i.chart.height ? t.svgHeight : t.gridWidth, t.translateY = r, t.translateX = s + 10;
                                  break;
                              default:
                                  throw new Error("Legend position not supported")
                          }
                      }
                  }, {
                      key: "conditionalChecksForAxisCoords",
                      value: function(e, t) {
                          var i = this.w,
                              n = e.height + t.height,
                              a = i.globals.isMultiLineX ? 1.2 : i.globals.LINE_HEIGHT_RATIO,
                              r = i.globals.rotateXLabels ? 22 : 10,
                              s = i.globals.rotateXLabels && "bottom" === i.config.legend.position ? 10 : 0;
                          this.xAxisHeight = n * a + r + s, this.xAxisWidth = e.width, this.xAxisHeight - t.height > i.config.xaxis.labels.maxHeight && (this.xAxisHeight = i.config.xaxis.labels.maxHeight), i.config.xaxis.labels.minHeight && this.xAxisHeight < i.config.xaxis.labels.minHeight && (this.xAxisHeight = i.config.xaxis.labels.minHeight), i.config.xaxis.floating && (this.xAxisHeight = 0);
                          var o = 0,
                              l = 0;
                          i.config.yaxis.forEach((function(e) {
                              o += e.labels.minWidth, l += e.labels.maxWidth
                          })), this.yAxisWidth < o && (this.yAxisWidth = o), this.yAxisWidth > l && (this.yAxisWidth = l)
                      }
                  }]), e
              }(),
              fe = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.lgCtx = t
                  }
                  return c(e, [{
                      key: "getLegendStyles",
                      value: function() {
                          var e = document.createElement("style");
                          e.setAttribute("type", "text/css");
                          var t = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
                          return e.appendChild(t), e
                      }
                  }, {
                      key: "getLegendBBox",
                      value: function() {
                          var e = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
                              t = e.width;
                          return {
                              clwh: e.height,
                              clww: t
                          }
                      }
                  }, {
                      key: "appendToForeignObject",
                      value: function() {
                          var e = this.w.globals;
                          e.dom.elLegendForeign = document.createElementNS(e.SVGNS, "foreignObject");
                          var t = e.dom.elLegendForeign;
                          t.setAttribute("x", 0), t.setAttribute("y", 0), t.setAttribute("width", e.svgWidth), t.setAttribute("height", e.svgHeight), e.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), t.appendChild(e.dom.elLegendWrap), t.appendChild(this.getLegendStyles()), e.dom.Paper.node.insertBefore(t, e.dom.elGraphical.node)
                      }
                  }, {
                      key: "toggleDataSeries",
                      value: function(e, t) {
                          var i = this,
                              n = this.w;
                          if (n.globals.axisCharts || "radialBar" === n.config.chart.type) {
                              n.globals.resized = !0;
                              var a = null,
                                  r = null;
                              n.globals.risingSeries = [], n.globals.axisCharts ? (a = n.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "']")), r = parseInt(a.getAttribute("data:realIndex"), 10)) : (a = n.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(e + 1, "']")), r = parseInt(a.getAttribute("rel"), 10) - 1), t ? [{
                                  cs: n.globals.collapsedSeries,
                                  csi: n.globals.collapsedSeriesIndices
                              }, {
                                  cs: n.globals.ancillaryCollapsedSeries,
                                  csi: n.globals.ancillaryCollapsedSeriesIndices
                              }].forEach((function(e) {
                                  i.riseCollapsedSeries(e.cs, e.csi, r)
                              })) : this.hideSeries({
                                  seriesEl: a,
                                  realIndex: r
                              })
                          } else {
                              var s = n.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(e + 1, "'] path")),
                                  o = n.config.chart.type;
                              if ("pie" === o || "polarArea" === o || "donut" === o) {
                                  var l = n.config.plotOptions.pie.donut.labels;
                                  new S(this.lgCtx.ctx).pathMouseDown(s.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(s.members[0].node, l)
                              }
                              s.fire("click")
                          }
                      }
                  }, {
                      key: "hideSeries",
                      value: function(e) {
                          var t = e.seriesEl,
                              i = e.realIndex,
                              n = this.w,
                              a = y.clone(n.config.series);
                          if (n.globals.axisCharts) {
                              var r = !1;
                              if (n.config.yaxis[i] && n.config.yaxis[i].show && n.config.yaxis[i].showAlways && (r = !0, n.globals.ancillaryCollapsedSeriesIndices.indexOf(i) < 0 && (n.globals.ancillaryCollapsedSeries.push({
                                      index: i,
                                      data: a[i].data.slice(),
                                      type: t.parentNode.className.baseVal.split("-")[1]
                                  }), n.globals.ancillaryCollapsedSeriesIndices.push(i))), !r) {
                                  n.globals.collapsedSeries.push({
                                      index: i,
                                      data: a[i].data.slice(),
                                      type: t.parentNode.className.baseVal.split("-")[1]
                                  }), n.globals.collapsedSeriesIndices.push(i);
                                  var s = n.globals.risingSeries.indexOf(i);
                                  n.globals.risingSeries.splice(s, 1)
                              }
                          } else n.globals.collapsedSeries.push({
                              index: i,
                              data: a[i]
                          }), n.globals.collapsedSeriesIndices.push(i);
                          for (var o = t.childNodes, l = 0; l < o.length; l++) o[l].classList.contains("apexcharts-series-markers-wrap") && (o[l].classList.contains("apexcharts-hide") ? o[l].classList.remove("apexcharts-hide") : o[l].classList.add("apexcharts-hide"));
                          n.globals.allSeriesCollapsed = n.globals.collapsedSeries.length === n.config.series.length, a = this._getSeriesBasedOnCollapsedState(a), this.lgCtx.ctx.updateHelpers._updateSeries(a, n.config.chart.animations.dynamicAnimation.enabled)
                      }
                  }, {
                      key: "riseCollapsedSeries",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = y.clone(n.config.series);
                          if (e.length > 0) {
                              for (var r = 0; r < e.length; r++) e[r].index === i && (n.globals.axisCharts ? (a[i].data = e[r].data.slice(), e.splice(r, 1), t.splice(r, 1), n.globals.risingSeries.push(i)) : (a[i] = e[r].data, e.splice(r, 1), t.splice(r, 1), n.globals.risingSeries.push(i)));
                              a = this._getSeriesBasedOnCollapsedState(a), this.lgCtx.ctx.updateHelpers._updateSeries(a, n.config.chart.animations.dynamicAnimation.enabled)
                          }
                      }
                  }, {
                      key: "_getSeriesBasedOnCollapsedState",
                      value: function(e) {
                          var t = this.w;
                          return t.globals.axisCharts ? e.forEach((function(i, n) {
                              t.globals.collapsedSeriesIndices.indexOf(n) > -1 && (e[n].data = [])
                          })) : e.forEach((function(i, n) {
                              t.globals.collapsedSeriesIndices.indexOf(n) > -1 && (e[n] = 0)
                          })), e
                      }
                  }]), e
              }(),
              pe = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = t, this.w = t.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new fe(this)
                  }
                  return c(e, [{
                      key: "init",
                      value: function() {
                          var e = this.w,
                              t = e.globals,
                              i = e.config;
                          if ((i.legend.showForSingleSeries && 1 === t.series.length || this.isBarsDistributed || t.series.length > 1 || !t.axisCharts) && i.legend.show) {
                              for (; t.dom.elLegendWrap.firstChild;) t.dom.elLegendWrap.removeChild(t.dom.elLegendWrap.firstChild);
                              this.drawLegends(), y.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical()
                          }
                      }
                  }, {
                      key: "drawLegends",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = t.config.legend.fontFamily,
                              n = t.globals.seriesNames,
                              a = t.globals.colors.slice();
                          if ("heatmap" === t.config.chart.type) {
                              var r = t.config.plotOptions.heatmap.colorScale.ranges;
                              n = r.map((function(e) {
                                  return e.name ? e.name : e.from + " - " + e.to
                              })), a = r.map((function(e) {
                                  return e.color
                              }))
                          } else this.isBarsDistributed && (n = t.globals.labels.slice());
                          t.config.legend.customLegendItems.length && (n = t.config.legend.customLegendItems);
                          for (var s = t.globals.legendFormatter, o = t.config.legend.inverseOrder, l = o ? n.length - 1 : 0; o ? l >= 0 : l <= n.length - 1; o ? l-- : l++) {
                              var c = s(n[l], {
                                      seriesIndex: l,
                                      w: t
                                  }),
                                  h = !1,
                                  u = !1;
                              if (t.globals.collapsedSeries.length > 0)
                                  for (var d = 0; d < t.globals.collapsedSeries.length; d++) t.globals.collapsedSeries[d].index === l && (h = !0);
                              if (t.globals.ancillaryCollapsedSeriesIndices.length > 0)
                                  for (var f = 0; f < t.globals.ancillaryCollapsedSeriesIndices.length; f++) t.globals.ancillaryCollapsedSeriesIndices[f] === l && (u = !0);
                              var p = document.createElement("span");
                              p.classList.add("apexcharts-legend-marker");
                              var g = t.config.legend.markers.offsetX,
                                  x = t.config.legend.markers.offsetY,
                                  v = t.config.legend.markers.height,
                                  m = t.config.legend.markers.width,
                                  b = t.config.legend.markers.strokeWidth,
                                  w = t.config.legend.markers.strokeColor,
                                  k = t.config.legend.markers.radius,
                                  A = p.style;
                              A.background = a[l], A.color = a[l], A.setProperty("background", a[l], "important"), t.config.legend.markers.fillColors && t.config.legend.markers.fillColors[l] && (A.background = t.config.legend.markers.fillColors[l]), void 0 !== t.globals.seriesColors[l] && (A.background = t.globals.seriesColors[l], A.color = t.globals.seriesColors[l]), A.height = Array.isArray(v) ? parseFloat(v[l]) + "px" : parseFloat(v) + "px", A.width = Array.isArray(m) ? parseFloat(m[l]) + "px" : parseFloat(m) + "px", A.left = (Array.isArray(g) ? parseFloat(g[l]) : parseFloat(g)) + "px", A.top = (Array.isArray(x) ? parseFloat(x[l]) : parseFloat(x)) + "px", A.borderWidth = Array.isArray(b) ? b[l] : b, A.borderColor = Array.isArray(w) ? w[l] : w, A.borderRadius = Array.isArray(k) ? parseFloat(k[l]) + "px" : parseFloat(k) + "px", t.config.legend.markers.customHTML && (Array.isArray(t.config.legend.markers.customHTML) ? t.config.legend.markers.customHTML[l] && (p.innerHTML = t.config.legend.markers.customHTML[l]()) : p.innerHTML = t.config.legend.markers.customHTML()), S.setAttrs(p, {
                                  rel: l + 1,
                                  "data:collapsed": h || u
                              }), (h || u) && p.classList.add("apexcharts-inactive-legend");
                              var C = document.createElement("div"),
                                  E = document.createElement("span");
                              E.classList.add("apexcharts-legend-text"), E.innerHTML = Array.isArray(c) ? c.join(" ") : c;
                              var L = t.config.legend.labels.useSeriesColors ? t.globals.colors[l] : t.config.legend.labels.colors;
                              L || (L = t.config.chart.foreColor), E.style.color = L, E.style.fontSize = parseFloat(t.config.legend.fontSize) + "px", E.style.fontWeight = t.config.legend.fontWeight, E.style.fontFamily = i || t.config.chart.fontFamily, S.setAttrs(E, {
                                  rel: l + 1,
                                  i: l,
                                  "data:default-text": encodeURIComponent(c),
                                  "data:collapsed": h || u
                              }), C.appendChild(p), C.appendChild(E);
                              var P = new T(this.ctx);
                              t.config.legend.showForZeroSeries || 0 === P.getSeriesTotalByIndex(l) && P.seriesHaveSameValues(l) && !P.isSeriesNull(l) && -1 === t.globals.collapsedSeriesIndices.indexOf(l) && -1 === t.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && C.classList.add("apexcharts-hidden-zero-series"), t.config.legend.showForNullSeries || P.isSeriesNull(l) && -1 === t.globals.collapsedSeriesIndices.indexOf(l) && -1 === t.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && C.classList.add("apexcharts-hidden-null-series"), t.globals.dom.elLegendWrap.appendChild(C), t.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(t.config.legend.horizontalAlign)), t.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + t.config.legend.position), C.classList.add("apexcharts-legend-series"), C.style.margin = "".concat(t.config.legend.itemMargin.vertical, "px ").concat(t.config.legend.itemMargin.horizontal, "px"), t.globals.dom.elLegendWrap.style.width = t.config.legend.width ? t.config.legend.width + "px" : "", t.globals.dom.elLegendWrap.style.height = t.config.legend.height ? t.config.legend.height + "px" : "", S.setAttrs(C, {
                                  rel: l + 1,
                                  seriesName: y.escapeString(n[l]),
                                  "data:collapsed": h || u
                              }), (h || u) && C.classList.add("apexcharts-inactive-legend"), t.config.legend.onItemClick.toggleDataSeries || C.classList.add("apexcharts-no-click")
                          }
                          t.globals.dom.elWrap.addEventListener("click", e.onLegendClick, !0), t.config.legend.onItemHover.highlightDataSeries && 0 === t.config.legend.customLegendItems.length && (t.globals.dom.elWrap.addEventListener("mousemove", e.onLegendHovered, !0), t.globals.dom.elWrap.addEventListener("mouseout", e.onLegendHovered, !0))
                      }
                  }, {
                      key: "setLegendWrapXY",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.globals.dom.baseEl.querySelector(".apexcharts-legend"),
                              a = n.getBoundingClientRect(),
                              r = 0,
                              s = 0;
                          if ("bottom" === i.config.legend.position) s += i.globals.svgHeight - a.height / 2;
                          else if ("top" === i.config.legend.position) {
                              var o = new de(this.ctx),
                                  l = o.dimHelpers.getTitleSubtitleCoords("title").height,
                                  c = o.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                              s = s + (l > 0 ? l - 10 : 0) + (c > 0 ? c - 10 : 0)
                          }
                          n.style.position = "absolute", r = r + e + i.config.legend.offsetX, s = s + t + i.config.legend.offsetY, n.style.left = r + "px", n.style.top = s + "px", "bottom" === i.config.legend.position ? (n.style.top = "auto", n.style.bottom = 5 - i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (n.style.left = "auto", n.style.right = 25 + i.config.legend.offsetX + "px"), ["width", "height"].forEach((function(e) {
                              n.style[e] && (n.style[e] = parseInt(i.config.legend[e], 10) + "px")
                          }))
                      }
                  }, {
                      key: "legendAlignHorizontal",
                      value: function() {
                          var e = this.w;
                          e.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right = 0;
                          var t = this.legendHelpers.getLegendBBox(),
                              i = new de(this.ctx),
                              n = i.dimHelpers.getTitleSubtitleCoords("title"),
                              a = i.dimHelpers.getTitleSubtitleCoords("subtitle"),
                              r = 0;
                          "bottom" === e.config.legend.position ? r = -t.clwh / 1.8 : "top" === e.config.legend.position && (r = n.height + a.height + e.config.title.margin + e.config.subtitle.margin - 10), this.setLegendWrapXY(20, r)
                      }
                  }, {
                      key: "legendAlignVertical",
                      value: function() {
                          var e = this.w,
                              t = this.legendHelpers.getLegendBBox(),
                              i = 0;
                          "left" === e.config.legend.position && (i = 20), "right" === e.config.legend.position && (i = e.globals.svgWidth - t.clww - 10), this.setLegendWrapXY(i, 20)
                      }
                  }, {
                      key: "onLegendHovered",
                      value: function(e) {
                          var t = this.w,
                              i = e.target.classList.contains("apexcharts-legend-text") || e.target.classList.contains("apexcharts-legend-marker");
                          if ("heatmap" === t.config.chart.type || this.isBarsDistributed) {
                              if (i) {
                                  var n = parseInt(e.target.getAttribute("rel"), 10) - 1;
                                  this.ctx.events.fireEvent("legendHover", [this.ctx, n, this.w]), new z(this.ctx).highlightRangeInSeries(e, e.target)
                              }
                          } else !e.target.classList.contains("apexcharts-inactive-legend") && i && new z(this.ctx).toggleSeriesOnHover(e, e.target)
                      }
                  }, {
                      key: "onLegendClick",
                      value: function(e) {
                          var t = this.w;
                          if (!t.config.legend.customLegendItems.length && (e.target.classList.contains("apexcharts-legend-text") || e.target.classList.contains("apexcharts-legend-marker"))) {
                              var i = parseInt(e.target.getAttribute("rel"), 10) - 1,
                                  n = "true" === e.target.getAttribute("data:collapsed"),
                                  a = this.w.config.chart.events.legendClick;
                              "function" == typeof a && a(this.ctx, i, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i, this.w]);
                              var r = this.w.config.legend.markers.onClick;
                              "function" == typeof r && e.target.classList.contains("apexcharts-legend-marker") && (r(this.ctx, i, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i, this.w])), "treemap" !== t.config.chart.type && "heatmap" !== t.config.chart.type && !this.isBarsDistributed && t.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i, n)
                          }
                      }
                  }]), e
              }(),
              ge = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = i.globals.minX, this.maxX = i.globals.maxX
                  }
                  return c(e, [{
                      key: "createToolbar",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = function() {
                                  return document.createElement("div")
                              },
                              n = i();
                          if (n.setAttribute("class", "apexcharts-toolbar"), n.style.top = t.config.chart.toolbar.offsetY + "px", n.style.right = 3 - t.config.chart.toolbar.offsetX + "px", t.globals.dom.elWrap.appendChild(n), this.elZoom = i(), this.elZoomIn = i(), this.elZoomOut = i(), this.elPan = i(), this.elSelection = i(), this.elZoomReset = i(), this.elMenuIcon = i(), this.elMenu = i(), this.elCustomIcons = [], this.t = t.config.chart.toolbar.tools, Array.isArray(this.t.customIcons))
                              for (var a = 0; a < this.t.customIcons.length; a++) this.elCustomIcons.push(i());
                          var r = [],
                              s = function(i, n, a) {
                                  var s = i.toLowerCase();
                                  e.t[s] && t.config.chart.zoom.enabled && r.push({
                                      el: n,
                                      icon: "string" == typeof e.t[s] ? e.t[s] : a,
                                      title: e.localeValues[i],
                                      class: "apexcharts-".concat(s, "-icon")
                                  })
                              };
                          s("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), s("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
                          var o = function(i) {
                              e.t[i] && t.config.chart[i].enabled && r.push({
                                  el: "zoom" === i ? e.elZoom : e.elSelection,
                                  icon: "string" == typeof e.t[i] ? e.t[i] : "zoom" === i ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
                                  title: e.localeValues["zoom" === i ? "selectionZoom" : "selection"],
                                  class: t.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i, "-icon")
                              })
                          };
                          o("zoom"), o("selection"), this.t.pan && t.config.chart.zoom.enabled && r.push({
                              el: this.elPan,
                              icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
                              title: this.localeValues.pan,
                              class: t.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
                          }), s("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r.push({
                              el: this.elMenuIcon,
                              icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                              title: this.localeValues.menu,
                              class: "apexcharts-menu-icon"
                          });
                          for (var l = 0; l < this.elCustomIcons.length; l++) r.push({
                              el: this.elCustomIcons[l],
                              icon: this.t.customIcons[l].icon,
                              title: this.t.customIcons[l].title,
                              index: this.t.customIcons[l].index,
                              class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l].class
                          });
                          r.forEach((function(e, t) {
                              e.index && y.moveIndexInArray(r, t, e.index)
                          }));
                          for (var c = 0; c < r.length; c++) S.setAttrs(r[c].el, {
                              class: r[c].class,
                              title: r[c].title
                          }), r[c].el.innerHTML = r[c].icon, n.appendChild(r[c].el);
                          this._createHamburgerMenu(n), t.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : t.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : t.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners()
                      }
                  }, {
                      key: "_createHamburgerMenu",
                      value: function(e) {
                          this.elMenuItems = [], e.appendChild(this.elMenu), S.setAttrs(this.elMenu, {
                              class: "apexcharts-menu"
                          });
                          var t = [{
                              name: "exportSVG",
                              title: this.localeValues.exportToSVG
                          }, {
                              name: "exportPNG",
                              title: this.localeValues.exportToPNG
                          }, {
                              name: "exportCSV",
                              title: this.localeValues.exportToCSV
                          }];
                          this.w.globals.allSeriesHasEqualX || t.splice(2, 1);
                          for (var i = 0; i < t.length; i++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i].innerHTML = t[i].title, S.setAttrs(this.elMenuItems[i], {
                              class: "apexcharts-menu-item ".concat(t[i].name),
                              title: t[i].title
                          }), this.elMenu.appendChild(this.elMenuItems[i])
                      }
                  }, {
                      key: "addToolbarEventListeners",
                      value: function() {
                          var e = this;
                          this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach((function(t) {
                              t.classList.contains("exportSVG") ? t.addEventListener("click", e.handleDownload.bind(e, "svg")) : t.classList.contains("exportPNG") ? t.addEventListener("click", e.handleDownload.bind(e, "png")) : t.classList.contains("exportCSV") && t.addEventListener("click", e.handleDownload.bind(e, "csv"))
                          }));
                          for (var t = 0; t < this.t.customIcons.length; t++) this.elCustomIcons[t].addEventListener("click", this.t.customIcons[t].click.bind(this, this.ctx, this.ctx.w))
                      }
                  }, {
                      key: "toggleZoomSelection",
                      value: function(e) {
                          this.ctx.getSyncedCharts().forEach((function(t) {
                              t.ctx.toolbar.toggleOtherControls();
                              var i = "selection" === e ? t.ctx.toolbar.elSelection : t.ctx.toolbar.elZoom,
                                  n = "selection" === e ? "selectionEnabled" : "zoomEnabled";
                              t.w.globals[n] = !t.w.globals[n], i.classList.contains(t.ctx.toolbar.selectedClass) ? i.classList.remove(t.ctx.toolbar.selectedClass) : i.classList.add(t.ctx.toolbar.selectedClass)
                          }))
                      }
                  }, {
                      key: "getToolbarIconsReference",
                      value: function() {
                          var e = this.w;
                          this.elZoom || (this.elZoom = e.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = e.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = e.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))
                      }
                  }, {
                      key: "enableZoomPanFromToolbar",
                      value: function(e) {
                          this.toggleOtherControls(), "pan" === e ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
                          var t = "pan" === e ? this.elPan : this.elZoom,
                              i = "pan" === e ? this.elZoom : this.elPan;
                          t && t.classList.add(this.selectedClass), i && i.classList.remove(this.selectedClass)
                      }
                  }, {
                      key: "togglePanning",
                      value: function() {
                          this.ctx.getSyncedCharts().forEach((function(e) {
                              e.ctx.toolbar.toggleOtherControls(), e.w.globals.panEnabled = !e.w.globals.panEnabled, e.ctx.toolbar.elPan.classList.contains(e.ctx.toolbar.selectedClass) ? e.ctx.toolbar.elPan.classList.remove(e.ctx.toolbar.selectedClass) : e.ctx.toolbar.elPan.classList.add(e.ctx.toolbar.selectedClass)
                          }))
                      }
                  }, {
                      key: "toggleOtherControls",
                      value: function() {
                          var e = this,
                              t = this.w;
                          t.globals.panEnabled = !1, t.globals.zoomEnabled = !1, t.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach((function(t) {
                              t && t.classList.remove(e.selectedClass)
                          }))
                      }
                  }, {
                      key: "handleZoomIn",
                      value: function() {
                          var e = this.w;
                          e.globals.isRangeBar && (this.minX = e.globals.minY, this.maxX = e.globals.maxY);
                          var t = (this.minX + this.maxX) / 2,
                              i = (this.minX + t) / 2,
                              n = (this.maxX + t) / 2,
                              a = this._getNewMinXMaxX(i, n);
                          e.globals.disableZoomIn || this.zoomUpdateOptions(a.minX, a.maxX)
                      }
                  }, {
                      key: "handleZoomOut",
                      value: function() {
                          var e = this.w;
                          if (e.globals.isRangeBar && (this.minX = e.globals.minY, this.maxX = e.globals.maxY), !("datetime" === e.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
                              var t = (this.minX + this.maxX) / 2,
                                  i = this.minX - (t - this.minX),
                                  n = this.maxX - (t - this.maxX),
                                  a = this._getNewMinXMaxX(i, n);
                              e.globals.disableZoomOut || this.zoomUpdateOptions(a.minX, a.maxX)
                          }
                      }
                  }, {
                      key: "_getNewMinXMaxX",
                      value: function(e, t) {
                          var i = this.w.config.xaxis.convertedCatToNumeric;
                          return {
                              minX: i ? Math.floor(e) : e,
                              maxX: i ? Math.floor(t) : t
                          }
                      }
                  }, {
                      key: "zoomUpdateOptions",
                      value: function(e, t) {
                          var i = this.w;
                          if (void 0 !== e || void 0 !== t) {
                              if (!(i.config.xaxis.convertedCatToNumeric && (e < 1 && (e = 1, t = i.globals.dataPoints), t - e < 2))) {
                                  var n = {
                                          min: e,
                                          max: t
                                      },
                                      a = this.getBeforeZoomRange(n);
                                  a && (n = a.xaxis);
                                  var r = {
                                          xaxis: n
                                      },
                                      s = y.clone(i.globals.initialConfig.yaxis);
                                  i.config.chart.zoom.autoScaleYaxis && (s = new K(this.ctx).autoScaleY(this.ctx, s, {
                                      xaxis: n
                                  })), i.config.chart.group || (r.yaxis = s), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(r, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(n, s)
                              }
                          } else this.handleZoomReset()
                      }
                  }, {
                      key: "zoomCallback",
                      value: function(e, t) {
                          "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
                              xaxis: e,
                              yaxis: t
                          })
                      }
                  }, {
                      key: "getBeforeZoomRange",
                      value: function(e, t) {
                          var i = null;
                          return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
                              xaxis: e,
                              yaxis: t
                          })), i
                      }
                  }, {
                      key: "toggleMenu",
                      value: function() {
                          var e = this;
                          window.setTimeout((function() {
                              e.elMenu.classList.contains("apexcharts-menu-open") ? e.elMenu.classList.remove("apexcharts-menu-open") : e.elMenu.classList.add("apexcharts-menu-open")
                          }), 0)
                      }
                  }, {
                      key: "handleDownload",
                      value: function(e) {
                          var t = this.w,
                              i = new $(this.ctx);
                          switch (e) {
                              case "svg":
                                  i.exportToSVG(this.ctx);
                                  break;
                              case "png":
                                  i.exportToPng(this.ctx);
                                  break;
                              case "csv":
                                  i.exportToCSV({
                                      series: t.config.series,
                                      columnDelimiter: t.config.chart.toolbar.export.csv.columnDelimiter
                                  })
                          }
                      }
                  }, {
                      key: "handleZoomReset",
                      value: function(e) {
                          this.ctx.getSyncedCharts().forEach((function(e) {
                              var t = e.w;
                              if (t.globals.lastXAxis.min = void 0, t.globals.lastXAxis.max = void 0, e.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof t.config.chart.events.beforeResetZoom) {
                                  var i = t.config.chart.events.beforeResetZoom(e, t);
                                  i && e.updateHelpers.revertDefaultAxisMinMax(i)
                              }
                              "function" == typeof t.config.chart.events.zoomed && e.ctx.toolbar.zoomCallback({
                                  min: t.config.xaxis.min,
                                  max: t.config.xaxis.max
                              }), t.globals.zoomed = !1;
                              var n = e.ctx.series.emptyCollapsedSeries(y.clone(t.globals.initialSeries));
                              e.updateHelpers._updateSeries(n, t.config.chart.animations.dynamicAnimation.enabled)
                          }))
                      }
                  }, {
                      key: "destroy",
                      value: function() {
                          this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null
                      }
                  }]), e
              }(),
              xe = function(e) {
                  u(i, ge);
                  var t = g(i);

                  function i(e) {
                      var n;
                      return o(this, i), (n = t.call(this, e)).ctx = e, n.w = e.w, n.dragged = !1, n.graphics = new S(n.ctx), n.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], n.clientX = 0, n.clientY = 0, n.startX = 0, n.endX = 0, n.dragX = 0, n.startY = 0, n.endY = 0, n.dragY = 0, n.moveDirection = "none", n
                  }
                  return c(i, [{
                      key: "init",
                      value: function(e) {
                          var t = this,
                              i = e.xyRatios,
                              n = this.w,
                              a = this;
                          this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = n.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), n.globals.dom.elGraphical.add(this.zoomRect), n.globals.dom.elGraphical.add(this.selectionRect), "x" === n.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                              minX: 0,
                              minY: 0,
                              maxX: n.globals.gridWidth,
                              maxY: n.globals.gridHeight
                          }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === n.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                              minX: 0,
                              maxX: n.globals.gridWidth
                          }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = n.globals.dom.baseEl.querySelector("".concat(n.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach((function(e) {
                              t.hoverArea.addEventListener(e, a.svgMouseEvents.bind(a, i), {
                                  capture: !1,
                                  passive: !0
                              })
                          }))
                      }
                  }, {
                      key: "destroy",
                      value: function() {
                          this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null
                      }
                  }, {
                      key: "svgMouseEvents",
                      value: function(e, t) {
                          var i = this.w,
                              n = this,
                              a = this.ctx.toolbar,
                              r = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type,
                              s = i.config.chart.toolbar.autoSelected;
                          if (t.shiftKey ? (this.shiftWasPressed = !0, a.enableZoomPanFromToolbar("pan" === s ? "zoom" : "pan")) : this.shiftWasPressed && (a.enableZoomPanFromToolbar(s), this.shiftWasPressed = !1), t.target) {
                              var o, l = t.target.classList;
                              if (t.target.parentNode && null !== t.target.parentNode && (o = t.target.parentNode.classList), !(l.contains("apexcharts-selection-rect") || l.contains("apexcharts-legend-marker") || l.contains("apexcharts-legend-text") || o && o.contains("apexcharts-toolbar"))) {
                                  if (n.clientX = "touchmove" === t.type || "touchstart" === t.type ? t.touches[0].clientX : "touchend" === t.type ? t.changedTouches[0].clientX : t.clientX, n.clientY = "touchmove" === t.type || "touchstart" === t.type ? t.touches[0].clientY : "touchend" === t.type ? t.changedTouches[0].clientY : t.clientY, "mousedown" === t.type && 1 === t.which) {
                                      var c = n.gridRect.getBoundingClientRect();
                                      n.startX = n.clientX - c.left, n.startY = n.clientY - c.top, n.dragged = !1, n.w.globals.mousedown = !0
                                  }
                                  if (("mousemove" === t.type && 1 === t.which || "touchmove" === t.type) && (n.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, n.w.globals.mousedown && n.panDragging({
                                          context: n,
                                          zoomtype: r,
                                          xyRatios: e
                                      })) : (n.w.globals.mousedown && i.globals.zoomEnabled || n.w.globals.mousedown && i.globals.selectionEnabled) && (n.selection = n.selectionDrawing({
                                          context: n,
                                          zoomtype: r
                                      }))), "mouseup" === t.type || "touchend" === t.type || "mouseleave" === t.type) {
                                      var h = n.gridRect.getBoundingClientRect();
                                      n.w.globals.mousedown && (n.endX = n.clientX - h.left, n.endY = n.clientY - h.top, n.dragX = Math.abs(n.endX - n.startX), n.dragY = Math.abs(n.endY - n.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && n.selectionDrawn({
                                          context: n,
                                          zoomtype: r
                                      }), i.globals.panEnabled && i.config.xaxis.convertedCatToNumeric && n.delayedPanScrolled()), i.globals.zoomEnabled && n.hideSelectionRect(this.selectionRect), n.dragged = !1, n.w.globals.mousedown = !1
                                  }
                                  this.makeSelectionRectDraggable()
                              }
                          }
                      }
                  }, {
                      key: "makeSelectionRectDraggable",
                      value: function() {
                          var e = this.w;
                          if (this.selectionRect) {
                              var t = this.selectionRect.node.getBoundingClientRect();
                              t.width > 0 && t.height > 0 && this.slDraggableRect.selectize({
                                  points: "l, r",
                                  pointSize: 8,
                                  pointType: "rect"
                              }).resize({
                                  constraint: {
                                      minX: 0,
                                      minY: 0,
                                      maxX: e.globals.gridWidth,
                                      maxY: e.globals.gridHeight
                                  }
                              }).on("resizing", this.selectionDragging.bind(this, "resizing"))
                          }
                      }
                  }, {
                      key: "preselectedSelection",
                      value: function() {
                          var e = this.w,
                              t = this.xyRatios;
                          if (!e.globals.zoomEnabled)
                              if (void 0 !== e.globals.selection && null !== e.globals.selection) this.drawSelectionRect(e.globals.selection);
                              else if (void 0 !== e.config.chart.selection.xaxis.min && void 0 !== e.config.chart.selection.xaxis.max) {
                              var i = (e.config.chart.selection.xaxis.min - e.globals.minX) / t.xRatio,
                                  n = {
                                      x: i,
                                      y: 0,
                                      width: e.globals.gridWidth - (e.globals.maxX - e.config.chart.selection.xaxis.max) / t.xRatio - i,
                                      height: e.globals.gridHeight,
                                      translateX: 0,
                                      translateY: 0,
                                      selectionEnabled: !0
                                  };
                              this.drawSelectionRect(n), this.makeSelectionRectDraggable(), "function" == typeof e.config.chart.events.selection && e.config.chart.events.selection(this.ctx, {
                                  xaxis: {
                                      min: e.config.chart.selection.xaxis.min,
                                      max: e.config.chart.selection.xaxis.max
                                  },
                                  yaxis: {}
                              })
                          }
                      }
                  }, {
                      key: "drawSelectionRect",
                      value: function(e) {
                          var t = e.x,
                              i = e.y,
                              n = e.width,
                              a = e.height,
                              r = e.translateX,
                              s = void 0 === r ? 0 : r,
                              o = e.translateY,
                              l = void 0 === o ? 0 : o,
                              c = this.w,
                              h = this.zoomRect,
                              u = this.selectionRect;
                          if (this.dragged || null !== c.globals.selection) {
                              var d = {
                                  transform: "translate(" + s + ", " + l + ")"
                              };
                              c.globals.zoomEnabled && this.dragged && (n < 0 && (n = 1), h.attr({
                                  x: t,
                                  y: i,
                                  width: n,
                                  height: a,
                                  fill: c.config.chart.zoom.zoomedArea.fill.color,
                                  "fill-opacity": c.config.chart.zoom.zoomedArea.fill.opacity,
                                  stroke: c.config.chart.zoom.zoomedArea.stroke.color,
                                  "stroke-width": c.config.chart.zoom.zoomedArea.stroke.width,
                                  "stroke-opacity": c.config.chart.zoom.zoomedArea.stroke.opacity
                              }), S.setAttrs(h.node, d)), c.globals.selectionEnabled && (u.attr({
                                  x: t,
                                  y: i,
                                  width: n > 0 ? n : 0,
                                  height: a > 0 ? a : 0,
                                  fill: c.config.chart.selection.fill.color,
                                  "fill-opacity": c.config.chart.selection.fill.opacity,
                                  stroke: c.config.chart.selection.stroke.color,
                                  "stroke-width": c.config.chart.selection.stroke.width,
                                  "stroke-dasharray": c.config.chart.selection.stroke.dashArray,
                                  "stroke-opacity": c.config.chart.selection.stroke.opacity
                              }), S.setAttrs(u.node, d))
                          }
                      }
                  }, {
                      key: "hideSelectionRect",
                      value: function(e) {
                          e && e.attr({
                              x: 0,
                              y: 0,
                              width: 0,
                              height: 0
                          })
                      }
                  }, {
                      key: "selectionDrawing",
                      value: function(e) {
                          var t = e.context,
                              i = e.zoomtype,
                              n = this.w,
                              a = t,
                              r = this.gridRect.getBoundingClientRect(),
                              s = a.startX - 1,
                              o = a.startY,
                              l = !1,
                              c = !1,
                              h = a.clientX - r.left - s,
                              u = a.clientY - r.top - o,
                              d = {};
                          return Math.abs(h + s) > n.globals.gridWidth ? h = n.globals.gridWidth - s : a.clientX - r.left < 0 && (h = s), s > a.clientX - r.left && (l = !0, h = Math.abs(h)), o > a.clientY - r.top && (c = !0, u = Math.abs(u)), d = "x" === i ? {
                              x: l ? s - h : s,
                              y: 0,
                              width: h,
                              height: n.globals.gridHeight
                          } : "y" === i ? {
                              x: 0,
                              y: c ? o - u : o,
                              width: n.globals.gridWidth,
                              height: u
                          } : {
                              x: l ? s - h : s,
                              y: c ? o - u : o,
                              width: h,
                              height: u
                          }, a.drawSelectionRect(d), a.selectionDragging("resizing"), d
                      }
                  }, {
                      key: "selectionDragging",
                      value: function(e, t) {
                          var i = this,
                              n = this.w,
                              a = this.xyRatios,
                              r = this.selectionRect,
                              s = 0;
                          "resizing" === e && (s = 30);
                          var o = function(e) {
                                  return parseFloat(r.node.getAttribute(e))
                              },
                              l = {
                                  x: o("x"),
                                  y: o("y"),
                                  width: o("width"),
                                  height: o("height")
                              };
                          n.globals.selection = l, "function" == typeof n.config.chart.events.selection && n.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout((function() {
                              var e = i.gridRect.getBoundingClientRect(),
                                  t = r.node.getBoundingClientRect(),
                                  s = {
                                      xaxis: {
                                          min: n.globals.xAxisScale.niceMin + (t.left - e.left) * a.xRatio,
                                          max: n.globals.xAxisScale.niceMin + (t.right - e.left) * a.xRatio
                                      },
                                      yaxis: {
                                          min: n.globals.yAxisScale[0].niceMin + (e.bottom - t.bottom) * a.yRatio[0],
                                          max: n.globals.yAxisScale[0].niceMax - (t.top - e.top) * a.yRatio[0]
                                      }
                                  };
                              n.config.chart.events.selection(i.ctx, s), n.config.chart.brush.enabled && void 0 !== n.config.chart.events.brushScrolled && n.config.chart.events.brushScrolled(i.ctx, s)
                          }), s))
                      }
                  }, {
                      key: "selectionDrawn",
                      value: function(e) {
                          var t = e.context,
                              i = e.zoomtype,
                              n = this.w,
                              a = t,
                              r = this.xyRatios,
                              s = this.ctx.toolbar;
                          if (a.startX > a.endX) {
                              var o = a.startX;
                              a.startX = a.endX, a.endX = o
                          }
                          if (a.startY > a.endY) {
                              var l = a.startY;
                              a.startY = a.endY, a.endY = l
                          }
                          var c = void 0,
                              h = void 0;
                          n.globals.isRangeBar ? (c = n.globals.yAxisScale[0].niceMin + a.startX * r.invertedYRatio, h = n.globals.yAxisScale[0].niceMin + a.endX * r.invertedYRatio) : (c = n.globals.xAxisScale.niceMin + a.startX * r.xRatio, h = n.globals.xAxisScale.niceMin + a.endX * r.xRatio);
                          var u = [],
                              d = [];
                          if (n.config.yaxis.forEach((function(e, t) {
                                  u.push(n.globals.yAxisScale[t].niceMax - r.yRatio[t] * a.startY), d.push(n.globals.yAxisScale[t].niceMax - r.yRatio[t] * a.endY)
                              })), a.dragged && (a.dragX > 10 || a.dragY > 10) && c !== h)
                              if (n.globals.zoomEnabled) {
                                  var f = y.clone(n.globals.initialConfig.yaxis),
                                      p = y.clone(n.globals.initialConfig.xaxis);
                                  if (n.globals.zoomed = !0, n.config.xaxis.convertedCatToNumeric && (c = Math.floor(c), h = Math.floor(h), c < 1 && (c = 1, h = n.globals.dataPoints), h - c < 2 && (h = c + 1)), "xy" !== i && "x" !== i || (p = {
                                          min: c,
                                          max: h
                                      }), "xy" !== i && "y" !== i || f.forEach((function(e, t) {
                                          f[t].min = d[t], f[t].max = u[t]
                                      })), n.config.chart.zoom.autoScaleYaxis) {
                                      var g = new K(a.ctx);
                                      f = g.autoScaleY(a.ctx, f, {
                                          xaxis: p
                                      })
                                  }
                                  if (s) {
                                      var x = s.getBeforeZoomRange(p, f);
                                      x && (p = x.xaxis ? x.xaxis : p, f = x.yaxis ? x.yaxis : f)
                                  }
                                  var v = {
                                      xaxis: p
                                  };
                                  n.config.chart.group || (v.yaxis = f), a.ctx.updateHelpers._updateOptions(v, !1, a.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof n.config.chart.events.zoomed && s.zoomCallback(p, f)
                              } else if (n.globals.selectionEnabled) {
                              var m, b = null;
                              m = {
                                  min: c,
                                  max: h
                              }, "xy" !== i && "y" !== i || (b = y.clone(n.config.yaxis)).forEach((function(e, t) {
                                  b[t].min = d[t], b[t].max = u[t]
                              })), n.globals.selection = a.selection, "function" == typeof n.config.chart.events.selection && n.config.chart.events.selection(a.ctx, {
                                  xaxis: m,
                                  yaxis: b
                              })
                          }
                      }
                  }, {
                      key: "panDragging",
                      value: function(e) {
                          var t = e.context,
                              i = this.w,
                              n = t;
                          if (void 0 !== i.globals.lastClientPosition.x) {
                              var a = i.globals.lastClientPosition.x - n.clientX,
                                  r = i.globals.lastClientPosition.y - n.clientY;
                              Math.abs(a) > Math.abs(r) && a > 0 ? this.moveDirection = "left" : Math.abs(a) > Math.abs(r) && a < 0 ? this.moveDirection = "right" : Math.abs(r) > Math.abs(a) && r > 0 ? this.moveDirection = "up" : Math.abs(r) > Math.abs(a) && r < 0 && (this.moveDirection = "down")
                          }
                          i.globals.lastClientPosition = {
                              x: n.clientX,
                              y: n.clientY
                          };
                          var s = i.globals.isRangeBar ? i.globals.minY : i.globals.minX,
                              o = i.globals.isRangeBar ? i.globals.maxY : i.globals.maxX;
                          i.config.xaxis.convertedCatToNumeric || n.panScrolled(s, o)
                      }
                  }, {
                      key: "delayedPanScrolled",
                      value: function() {
                          var e = this.w,
                              t = e.globals.minX,
                              i = e.globals.maxX,
                              n = (e.globals.maxX - e.globals.minX) / 2;
                          "left" === this.moveDirection ? (t = e.globals.minX + n, i = e.globals.maxX + n) : "right" === this.moveDirection && (t = e.globals.minX - n, i = e.globals.maxX - n), t = Math.floor(t), i = Math.floor(i), this.updateScrolledChart({
                              xaxis: {
                                  min: t,
                                  max: i
                              }
                          }, t, i)
                      }
                  }, {
                      key: "panScrolled",
                      value: function(e, t) {
                          var i = this.w,
                              n = this.xyRatios,
                              a = y.clone(i.globals.initialConfig.yaxis),
                              r = n.xRatio,
                              s = i.globals.minX,
                              o = i.globals.maxX;
                          i.globals.isRangeBar && (r = n.invertedYRatio, s = i.globals.minY, o = i.globals.maxY), "left" === this.moveDirection ? (e = s + i.globals.gridWidth / 15 * r, t = o + i.globals.gridWidth / 15 * r) : "right" === this.moveDirection && (e = s - i.globals.gridWidth / 15 * r, t = o - i.globals.gridWidth / 15 * r), i.globals.isRangeBar || (e < i.globals.initialMinX || t > i.globals.initialMaxX) && (e = s, t = o);
                          var l = {
                              min: e,
                              max: t
                          };
                          i.config.chart.zoom.autoScaleYaxis && (a = new K(this.ctx).autoScaleY(this.ctx, a, {
                              xaxis: l
                          }));
                          var c = {
                              xaxis: {
                                  min: e,
                                  max: t
                              }
                          };
                          i.config.chart.group || (c.yaxis = a), this.updateScrolledChart(c, e, t)
                      }
                  }, {
                      key: "updateScrolledChart",
                      value: function(e, t, i) {
                          var n = this.w;
                          this.ctx.updateHelpers._updateOptions(e, !1, !1), "function" == typeof n.config.chart.events.scrolled && n.config.chart.events.scrolled(this.ctx, {
                              xaxis: {
                                  min: t,
                                  max: i
                              }
                          })
                      }
                  }]), i
              }(),
              ve = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.ttCtx = t, this.ctx = t.ctx
                  }
                  return c(e, [{
                      key: "getNearestValues",
                      value: function(e) {
                          var t = e.hoverArea,
                              i = e.elGrid,
                              n = e.clientX,
                              a = e.clientY,
                              r = this.w,
                              s = i.getBoundingClientRect(),
                              o = s.width,
                              l = s.height,
                              c = o / (r.globals.dataPoints - 1),
                              h = l / r.globals.dataPoints,
                              u = this.hasBars();
                          !r.globals.comboCharts && !u || r.config.xaxis.convertedCatToNumeric || (c = o / r.globals.dataPoints);
                          var d = n - s.left - r.globals.barPadForNumericAxis,
                              f = a - s.top;
                          d < 0 || f < 0 || d > o || f > l ? (t.classList.remove("hovering-zoom"), t.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (t.classList.remove("hovering-pan"), t.classList.add("hovering-zoom")) : r.globals.panEnabled && (t.classList.remove("hovering-zoom"), t.classList.add("hovering-pan"));
                          var p = Math.round(d / c),
                              g = Math.floor(f / h);
                          u && !r.config.xaxis.convertedCatToNumeric && (p = Math.ceil(d / c), p -= 1);
                          var x = null,
                              v = null,
                              m = [],
                              b = [];
                          if (r.globals.seriesXvalues.forEach((function(e) {
                                  m.push([e[0] + 1e-6].concat(e))
                              })), r.globals.seriesYvalues.forEach((function(e) {
                                  b.push([e[0] + 1e-6].concat(e))
                              })), m = m.map((function(e) {
                                  return e.filter((function(e) {
                                      return y.isNumber(e)
                                  }))
                              })), b = b.map((function(e) {
                                  return e.filter((function(e) {
                                      return y.isNumber(e)
                                  }))
                              })), r.globals.isXNumeric) {
                              var w = this.ttCtx.getElGrid().getBoundingClientRect(),
                                  k = d * (w.width / o),
                                  S = f * (w.height / l);
                              x = (v = this.closestInMultiArray(k, S, m, b)).index, p = v.j, null !== x && (m = r.globals.seriesXvalues[x], p = (v = this.closestInArray(k, m)).index)
                          }
                          return r.globals.capturedSeriesIndex = null === x ? -1 : x, (!p || p < 1) && (p = 0), r.globals.isBarHorizontal ? r.globals.capturedDataPointIndex = g : r.globals.capturedDataPointIndex = p, {
                              capturedSeries: x,
                              j: r.globals.isBarHorizontal ? g : p,
                              hoverX: d,
                              hoverY: f
                          }
                      }
                  }, {
                      key: "closestInMultiArray",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = 0,
                              s = null,
                              o = -1;
                          a.globals.series.length > 1 ? r = this.getFirstActiveXArray(i) : s = 0;
                          var l = i[r][0],
                              c = Math.abs(e - l);
                          if (i.forEach((function(t) {
                                  t.forEach((function(t, i) {
                                      var n = Math.abs(e - t);
                                      n < c && (c = n, o = i)
                                  }))
                              })), -1 !== o) {
                              var h = n[r][o],
                                  u = Math.abs(t - h);
                              s = r, n.forEach((function(e, i) {
                                  var n = Math.abs(t - e[o]);
                                  n < u && (u = n, s = i)
                              }))
                          }
                          return {
                              index: s,
                              j: o
                          }
                      }
                  }, {
                      key: "getFirstActiveXArray",
                      value: function(e) {
                          for (var t = this.w, i = 0, n = e.map((function(e, t) {
                                  return e.length > 0 ? t : -1
                              })), a = 0; a < n.length; a++)
                              if (-1 !== n[a] && -1 === t.globals.collapsedSeriesIndices.indexOf(a) && -1 === t.globals.ancillaryCollapsedSeriesIndices.indexOf(a)) {
                                  i = n[a];
                                  break
                              } return i
                      }
                  }, {
                      key: "closestInArray",
                      value: function(e, t) {
                          for (var i = t[0], n = null, a = Math.abs(e - i), r = 0; r < t.length; r++) {
                              var s = Math.abs(e - t[r]);
                              s < a && (a = s, n = r)
                          }
                          return {
                              index: n
                          }
                      }
                  }, {
                      key: "isXoverlap",
                      value: function(e) {
                          var t = [],
                              i = this.w.globals.seriesX.filter((function(e) {
                                  return void 0 !== e[0]
                              }));
                          if (i.length > 0)
                              for (var n = 0; n < i.length - 1; n++) void 0 !== i[n][e] && void 0 !== i[n + 1][e] && i[n][e] !== i[n + 1][e] && t.push("unEqual");
                          return 0 === t.length
                      }
                  }, {
                      key: "isInitialSeriesSameLen",
                      value: function() {
                          for (var e = !0, t = this.w.globals.initialSeries, i = 0; i < t.length - 1; i++)
                              if (t[i].data.length !== t[i + 1].data.length) {
                                  e = !1;
                                  break
                              } return e
                      }
                  }, {
                      key: "getBarsHeight",
                      value: function(e) {
                          return v(e).reduce((function(e, t) {
                              return e + t.getBBox().height
                          }), 0)
                      }
                  }, {
                      key: "getElMarkers",
                      value: function() {
                          return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers")
                      }
                  }, {
                      key: "getAllMarkers",
                      value: function() {
                          var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
                          (e = v(e)).sort((function(e, t) {
                              return Number(t.getAttribute("data:realIndex")) < Number(e.getAttribute("data:realIndex")) ? 0 : -1
                          }));
                          var t = [];
                          return e.forEach((function(e) {
                              t.push(e.querySelector(".apexcharts-marker"))
                          })), t
                      }
                  }, {
                      key: "hasMarkers",
                      value: function() {
                          return this.getElMarkers().length > 0
                      }
                  }, {
                      key: "getElBars",
                      value: function() {
                          return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")
                      }
                  }, {
                      key: "hasBars",
                      value: function() {
                          return this.getElBars().length > 0
                      }
                  }, {
                      key: "getHoverMarkerSize",
                      value: function(e) {
                          var t = this.w,
                              i = t.config.markers.hover.size;
                          return void 0 === i && (i = t.globals.markers.size[e] + t.config.markers.hover.sizeOffset), i
                      }
                  }, {
                      key: "toggleAllTooltipSeriesGroups",
                      value: function(e) {
                          var t = this.w,
                              i = this.ttCtx;
                          0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = t.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
                          for (var n = i.allTooltipSeriesGroups, a = 0; a < n.length; a++) "enable" === e ? (n[a].classList.add("apexcharts-active"), n[a].style.display = t.config.tooltip.items.display) : (n[a].classList.remove("apexcharts-active"), n[a].style.display = "none")
                      }
                  }]), e
              }(),
              me = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.ctx = t.ctx, this.ttCtx = t, this.tooltipUtil = new ve(t)
                  }
                  return c(e, [{
                      key: "drawSeriesTexts",
                      value: function(e) {
                          var t = e.shared,
                              i = void 0 === t || t,
                              n = e.ttItems,
                              a = e.i,
                              r = void 0 === a ? 0 : a,
                              s = e.j,
                              o = void 0 === s ? null : s,
                              l = e.y1,
                              c = e.y2,
                              h = e.e,
                              u = this.w;
                          void 0 !== u.config.tooltip.custom ? this.handleCustomTooltip({
                              i: r,
                              j: o,
                              y1: l,
                              y2: c,
                              w: u
                          }) : this.toggleActiveInactiveSeries(i);
                          var d = this.getValuesToPrint({
                              i: r,
                              j: o
                          });
                          this.printLabels({
                              i: r,
                              j: o,
                              values: d,
                              ttItems: n,
                              shared: i,
                              e: h
                          });
                          var f = this.ttCtx.getElTooltip();
                          this.ttCtx.tooltipRect.ttWidth = f.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = f.getBoundingClientRect().height
                      }
                  }, {
                      key: "printLabels",
                      value: function(e) {
                          var t, i = this,
                              n = e.i,
                              a = e.j,
                              s = e.values,
                              o = e.ttItems,
                              l = e.shared,
                              c = e.e,
                              h = this.w,
                              u = [],
                              d = function(e) {
                                  return h.globals.seriesGoals[e] && h.globals.seriesGoals[e][a] && Array.isArray(h.globals.seriesGoals[e][a])
                              },
                              f = s.xVal,
                              p = s.zVal,
                              g = s.xAxisTTVal,
                              x = "",
                              v = h.globals.colors[n];
                          null !== a && h.config.plotOptions.bar.distributed && (v = h.globals.colors[a]);
                          for (var m = function(e, s) {
                                  var m = i.getFormatters(n);
                                  x = i.getSeriesName({
                                      fn: m.yLbTitleFormatter,
                                      index: n,
                                      seriesIndex: n,
                                      j: a
                                  }), "treemap" === h.config.chart.type && (x = m.yLbTitleFormatter(String(h.config.series[n].data[a].x), {
                                      series: h.globals.series,
                                      seriesIndex: n,
                                      dataPointIndex: a,
                                      w: h
                                  }));
                                  var b = h.config.tooltip.inverseOrder ? s : e;
                                  if (h.globals.axisCharts) {
                                      var y = function(e) {
                                          return m.yLbFormatter(h.globals.series[e][a], {
                                              series: h.globals.series,
                                              seriesIndex: e,
                                              dataPointIndex: a,
                                              w: h
                                          })
                                      };
                                      if (l) m = i.getFormatters(b), x = i.getSeriesName({
                                          fn: m.yLbTitleFormatter,
                                          index: b,
                                          seriesIndex: n,
                                          j: a
                                      }), v = h.globals.colors[b], t = y(b), d(b) && (u = h.globals.seriesGoals[b][a].map((function(e) {
                                          return {
                                              attrs: e,
                                              val: m.yLbFormatter(e.value, {
                                                  seriesIndex: b,
                                                  dataPointIndex: a,
                                                  w: h
                                              })
                                          }
                                      })));
                                      else {
                                          var w, k = null == c || null === (w = c.target) || void 0 === w ? void 0 : w.getAttribute("fill");
                                          k && (v = -1 !== k.indexOf("url") ? document.querySelector(k.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : k), t = y(n), d(n) && Array.isArray(h.globals.seriesGoals[n][a]) && (u = h.globals.seriesGoals[n][a].map((function(e) {
                                              return {
                                                  attrs: e,
                                                  val: m.yLbFormatter(e.value, {
                                                      seriesIndex: n,
                                                      dataPointIndex: a,
                                                      w: h
                                                  })
                                              }
                                          })))
                                      }
                                  }
                                  null === a && (t = m.yLbFormatter(h.globals.series[n], r(r({}, h), {}, {
                                      seriesIndex: n,
                                      dataPointIndex: n
                                  }))), i.DOMHandling({
                                      i: n,
                                      t: b,
                                      j: a,
                                      ttItems: o,
                                      values: {
                                          val: t,
                                          goalVals: u,
                                          xVal: f,
                                          xAxisTTVal: g,
                                          zVal: p
                                      },
                                      seriesName: x,
                                      shared: l,
                                      pColor: v
                                  })
                              }, b = 0, y = h.globals.series.length - 1; b < h.globals.series.length; b++, y--) m(b, y)
                      }
                  }, {
                      key: "getFormatters",
                      value: function(e) {
                          var t, i = this.w,
                              n = i.globals.yLabelFormatters[e];
                          return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (n = i.globals.ttVal[e] && i.globals.ttVal[e].formatter, t = i.globals.ttVal[e] && i.globals.ttVal[e].title && i.globals.ttVal[e].title.formatter) : (n = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (t = i.globals.ttVal.title.formatter)) : t = i.config.tooltip.y.title.formatter, "function" != typeof n && (n = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function(e) {
                              return e
                          }), "function" != typeof t && (t = function(e) {
                              return e
                          }), {
                              yLbFormatter: n,
                              yLbTitleFormatter: t
                          }
                      }
                  }, {
                      key: "getSeriesName",
                      value: function(e) {
                          var t = e.fn,
                              i = e.index,
                              n = e.seriesIndex,
                              a = e.j,
                              r = this.w;
                          return t(String(r.globals.seriesNames[i]), {
                              series: r.globals.series,
                              seriesIndex: n,
                              dataPointIndex: a,
                              w: r
                          })
                      }
                  }, {
                      key: "DOMHandling",
                      value: function(e) {
                          e.i;
                          var t = e.t,
                              i = e.j,
                              n = e.ttItems,
                              a = e.values,
                              r = e.seriesName,
                              s = e.shared,
                              o = e.pColor,
                              l = this.w,
                              c = this.ttCtx,
                              h = a.val,
                              u = a.goalVals,
                              d = a.xVal,
                              f = a.xAxisTTVal,
                              p = a.zVal,
                              g = null;
                          g = n[t].children, l.config.tooltip.fillSeriesColor && (n[t].style.backgroundColor = o, g[0].style.display = "none"), c.showTooltipTitle && (null === c.tooltipTitle && (c.tooltipTitle = l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), c.tooltipTitle.innerHTML = d), c.isXAxisTooltipEnabled && (c.xaxisTooltipText.innerHTML = "" !== f ? f : d);
                          var x = n[t].querySelector(".apexcharts-tooltip-text-y-label");
                          x && (x.innerHTML = r || "");
                          var v = n[t].querySelector(".apexcharts-tooltip-text-y-value");
                          v && (v.innerHTML = void 0 !== h ? h : ""), g[0] && g[0].classList.contains("apexcharts-tooltip-marker") && (l.config.tooltip.marker.fillColors && Array.isArray(l.config.tooltip.marker.fillColors) && (o = l.config.tooltip.marker.fillColors[t]), g[0].style.backgroundColor = o), l.config.tooltip.marker.show || (g[0].style.display = "none");
                          var m = n[t].querySelector(".apexcharts-tooltip-text-goals-label"),
                              b = n[t].querySelector(".apexcharts-tooltip-text-goals-value");
                          if (u.length && l.globals.seriesGoals[t]) {
                              var y = function() {
                                  var e = "<div >",
                                      t = "<div>";
                                  u.forEach((function(i, n) {
                                      e += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name, "</div>"), t += "<div>".concat(i.val, "</div>")
                                  })), m.innerHTML = e + "</div>", b.innerHTML = t + "</div>"
                              };
                              s ? l.globals.seriesGoals[t][i] && Array.isArray(l.globals.seriesGoals[t][i]) ? y() : (m.innerHTML = "", b.innerHTML = "") : y()
                          } else m.innerHTML = "", b.innerHTML = "";
                          null !== p && (n[t].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l.config.tooltip.z.title, n[t].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== p ? p : ""), s && g[0] && (null == h || l.globals.ancillaryCollapsedSeriesIndices.indexOf(t) > -1 || l.globals.collapsedSeriesIndices.indexOf(t) > -1 ? g[0].parentNode.style.display = "none" : g[0].parentNode.style.display = l.config.tooltip.items.display)
                      }
                  }, {
                      key: "toggleActiveInactiveSeries",
                      value: function(e) {
                          var t = this.w;
                          if (e) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                          else {
                              this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                              var i = t.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
                              i && (i.classList.add("apexcharts-active"), i.style.display = t.config.tooltip.items.display)
                          }
                      }
                  }, {
                      key: "getValuesToPrint",
                      value: function(e) {
                          var t = e.i,
                              i = e.j,
                              n = this.w,
                              a = this.ctx.series.filteredSeriesX(),
                              r = "",
                              s = "",
                              o = null,
                              l = null,
                              c = {
                                  series: n.globals.series,
                                  seriesIndex: t,
                                  dataPointIndex: i,
                                  w: n
                              },
                              h = n.globals.ttZFormatter;
                          null === i ? l = n.globals.series[t] : n.globals.isXNumeric && "treemap" !== n.config.chart.type ? (r = a[t][i], 0 === a[t].length && (r = a[this.tooltipUtil.getFirstActiveXArray(a)][i])) : r = void 0 !== n.globals.labels[i] ? n.globals.labels[i] : "";
                          var u = r;
                          return r = n.globals.isXNumeric && "datetime" === n.config.xaxis.type ? new G(this.ctx).xLabelFormat(n.globals.ttKeyFormatter, u, u, {
                              i: void 0,
                              dateFormatter: new X(this.ctx).formatDate,
                              w: this.w
                          }) : n.globals.isBarHorizontal ? n.globals.yLabelFormatters[0](u, c) : n.globals.xLabelFormatter(u, c), void 0 !== n.config.tooltip.x.formatter && (r = n.globals.ttKeyFormatter(u, c)), n.globals.seriesZ.length > 0 && n.globals.seriesZ[t].length > 0 && (o = h(n.globals.seriesZ[t][i], n)), s = "function" == typeof n.config.xaxis.tooltip.formatter ? n.globals.xaxisTooltipFormatter(u, c) : r, {
                              val: Array.isArray(l) ? l.join(" ") : l,
                              xVal: Array.isArray(r) ? r.join(" ") : r,
                              xAxisTTVal: Array.isArray(s) ? s.join(" ") : s,
                              zVal: o
                          }
                      }
                  }, {
                      key: "handleCustomTooltip",
                      value: function(e) {
                          var t = e.i,
                              i = e.j,
                              n = e.y1,
                              a = e.y2,
                              r = e.w,
                              s = this.ttCtx.getElTooltip(),
                              o = r.config.tooltip.custom;
                          Array.isArray(o) && o[t] && (o = o[t]), s.innerHTML = o({
                              ctx: this.ctx,
                              series: r.globals.series,
                              seriesIndex: t,
                              dataPointIndex: i,
                              y1: n,
                              y2: a,
                              w: r
                          })
                      }
                  }]), e
              }(),
              be = function() {
                  function e(t) {
                      o(this, e), this.ttCtx = t, this.ctx = t.ctx, this.w = t.w
                  }
                  return c(e, [{
                      key: "moveXCrosshairs",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                              i = this.ttCtx,
                              n = this.w,
                              a = i.getElXCrosshairs(),
                              r = e - i.xcrosshairsWidth / 2,
                              s = n.globals.labels.slice().length;
                          if (null !== t && (r = n.globals.gridWidth / s * t), null === a || n.globals.isBarHorizontal || (a.setAttribute("x", r), a.setAttribute("x1", r), a.setAttribute("x2", r), a.setAttribute("y2", n.globals.gridHeight), a.classList.add("apexcharts-active")), r < 0 && (r = 0), r > n.globals.gridWidth && (r = n.globals.gridWidth), i.isXAxisTooltipEnabled) {
                              var o = r;
                              "tickWidth" !== n.config.xaxis.crosshairs.width && "barWidth" !== n.config.xaxis.crosshairs.width || (o = r + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(o)
                          }
                      }
                  }, {
                      key: "moveYCrosshairs",
                      value: function(e) {
                          var t = this.ttCtx;
                          null !== t.ycrosshairs && S.setAttrs(t.ycrosshairs, {
                              y1: e,
                              y2: e
                          }), null !== t.ycrosshairsHidden && S.setAttrs(t.ycrosshairsHidden, {
                              y1: e,
                              y2: e
                          })
                      }
                  }, {
                      key: "moveXAxisTooltip",
                      value: function(e) {
                          var t = this.w,
                              i = this.ttCtx;
                          if (null !== i.xaxisTooltip && 0 !== i.xcrosshairsWidth) {
                              i.xaxisTooltip.classList.add("apexcharts-active");
                              var n, a = i.xaxisOffY + t.config.xaxis.tooltip.offsetY + t.globals.translateY + 1 + t.config.xaxis.offsetY;
                              if (e -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(e)) e += t.globals.translateX, n = new S(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = n.width + "px", i.xaxisTooltip.style.left = e + "px", i.xaxisTooltip.style.top = a + "px"
                          }
                      }
                  }, {
                      key: "moveYAxisTooltip",
                      value: function(e) {
                          var t = this.w,
                              i = this.ttCtx;
                          null === i.yaxisTTEls && (i.yaxisTTEls = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                          var n = parseInt(i.ycrosshairsHidden.getAttribute("y1"), 10),
                              a = t.globals.translateY + n,
                              r = i.yaxisTTEls[e].getBoundingClientRect().height,
                              s = t.globals.translateYAxisX[e] - 2;
                          t.config.yaxis[e].opposite && (s -= 26), a -= r / 2, -1 === t.globals.ignoreYAxisIndexes.indexOf(e) ? (i.yaxisTTEls[e].classList.add("apexcharts-active"), i.yaxisTTEls[e].style.top = a + "px", i.yaxisTTEls[e].style.left = s + t.config.yaxis[e].tooltip.offsetX + "px") : i.yaxisTTEls[e].classList.remove("apexcharts-active")
                      }
                  }, {
                      key: "moveTooltip",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                              n = this.w,
                              a = this.ttCtx,
                              r = a.getElTooltip(),
                              s = a.tooltipRect,
                              o = null !== i ? parseFloat(i) : 1,
                              l = parseFloat(e) + o + 5,
                              c = parseFloat(t) + o / 2;
                          if (l > n.globals.gridWidth / 2 && (l = l - s.ttWidth - o - 15), l > n.globals.gridWidth - s.ttWidth - 10 && (l = n.globals.gridWidth - s.ttWidth), l < -20 && (l = -20), n.config.tooltip.followCursor) {
                              var h = a.getElGrid(),
                                  u = h.getBoundingClientRect();
                              c = a.e.clientY + n.globals.translateY - u.top - s.ttHeight / 2
                          } else n.globals.isBarHorizontal || (s.ttHeight / 2 + c > n.globals.gridHeight && (c = n.globals.gridHeight - s.ttHeight + n.globals.translateY), c < 0 && (c = 0));
                          isNaN(l) || (l += n.globals.translateX, r.style.left = l + "px", r.style.top = c + "px")
                      }
                  }, {
                      key: "moveMarkers",
                      value: function(e, t) {
                          var i = this.w,
                              n = this.ttCtx;
                          if (i.globals.markers.size[e] > 0)
                              for (var a = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-marker")), r = 0; r < a.length; r++) parseInt(a[r].getAttribute("rel"), 10) === t && (n.marker.resetPointsSize(), n.marker.enlargeCurrentPoint(t, a[r]));
                          else n.marker.resetPointsSize(), this.moveDynamicPointOnHover(t, e)
                      }
                  }, {
                      key: "moveDynamicPointOnHover",
                      value: function(e, t) {
                          var i, n, a = this.w,
                              r = this.ttCtx,
                              s = a.globals.pointsArray,
                              o = r.tooltipUtil.getHoverMarkerSize(t),
                              l = a.config.series[t].type;
                          if (!l || "column" !== l && "candlestick" !== l && "boxPlot" !== l) {
                              i = s[t][e][0], n = s[t][e][1] ? s[t][e][1] : 0;
                              var c = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-series-markers circle"));
                              c && n < a.globals.gridHeight && n > 0 && (c.setAttribute("r", o), c.setAttribute("cx", i), c.setAttribute("cy", n)), this.moveXCrosshairs(i), r.fixedTooltip || this.moveTooltip(i, n, o)
                          }
                      }
                  }, {
                      key: "moveDynamicPointsOnHover",
                      value: function(e) {
                          var t, i = this.ttCtx,
                              n = i.w,
                              a = 0,
                              r = 0,
                              s = n.globals.pointsArray;
                          t = new z(this.ctx).getActiveConfigSeriesIndex(!0);
                          var o = i.tooltipUtil.getHoverMarkerSize(t);
                          s[t] && (a = s[t][e][0], r = s[t][e][1]);
                          var l = i.tooltipUtil.getAllMarkers();
                          if (null !== l)
                              for (var c = 0; c < n.globals.series.length; c++) {
                                  var h = s[c];
                                  if (n.globals.comboCharts && void 0 === h && l.splice(c, 0, null), h && h.length) {
                                      var u = s[c][e][1];
                                      l[c].setAttribute("cx", a), null !== u && !isNaN(u) && u < n.globals.gridHeight + o && u + o > 0 ? (l[c] && l[c].setAttribute("r", o), l[c] && l[c].setAttribute("cy", u)) : l[c] && l[c].setAttribute("r", 0)
                                  }
                              }
                          if (this.moveXCrosshairs(a), !i.fixedTooltip) {
                              var d = r || n.globals.gridHeight;
                              this.moveTooltip(a, d, o)
                          }
                      }
                  }, {
                      key: "moveStickyTooltipOverBars",
                      value: function(e) {
                          var t = this.w,
                              i = this.ttCtx,
                              n = t.globals.columnSeries ? t.globals.columnSeries.length : t.globals.series.length,
                              a = n >= 2 && n % 2 == 0 ? Math.floor(n / 2) : Math.floor(n / 2) + 1;
                          t.globals.isBarHorizontal && (a = new z(this.ctx).getActiveConfigSeriesIndex(!1, "desc") + 1);
                          var r = t.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(a, "'] path[j='").concat(e, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(a, "'] path[j='").concat(e, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(a, "'] path[j='").concat(e, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(a, "'] path[j='").concat(e, "']")),
                              s = r ? parseFloat(r.getAttribute("cx")) : 0,
                              o = r ? parseFloat(r.getAttribute("cy")) : 0,
                              l = r ? parseFloat(r.getAttribute("barWidth")) : 0,
                              c = r ? parseFloat(r.getAttribute("barHeight")) : 0,
                              h = i.getElGrid().getBoundingClientRect(),
                              u = r.classList.contains("apexcharts-candlestick-area") || r.classList.contains("apexcharts-boxPlot-area");
                          if (t.globals.isXNumeric ? (r && !u && (s -= n % 2 != 0 ? l / 2 : 0), r && u && t.globals.comboCharts && (s -= l / 2)) : t.globals.isBarHorizontal || (s = i.xAxisTicksPositions[e - 1] + i.dataPointsDividedWidth / 2, isNaN(s) && (s = i.xAxisTicksPositions[e] - i.dataPointsDividedWidth / 2)), t.globals.isBarHorizontal ? (o = o + t.config.grid.padding.top + c / 3) + c > t.globals.gridHeight && (o = t.globals.gridHeight - c) : t.config.tooltip.followCursor && (o = i.e.clientY - h.top - i.tooltipRect.ttHeight / 2), t.globals.isBarHorizontal || this.moveXCrosshairs(s), !i.fixedTooltip) {
                              var d = o || t.globals.gridHeight;
                              this.moveTooltip(s, d)
                          }
                      }
                  }]), e
              }(),
              ye = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.ttCtx = t, this.ctx = t.ctx, this.tooltipPosition = new be(t)
                  }
                  return c(e, [{
                      key: "drawDynamicPoints",
                      value: function() {
                          var e = this.w,
                              t = new S(this.ctx),
                              i = new _(this.ctx),
                              n = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                          n = v(n), e.config.chart.stacked && n.sort((function(e, t) {
                              return parseFloat(e.getAttribute("data:realIndex")) - parseFloat(t.getAttribute("data:realIndex"))
                          }));
                          for (var a = 0; a < n.length; a++) {
                              var r = n[a].querySelector(".apexcharts-series-markers-wrap");
                              if (null !== r) {
                                  var s = void 0,
                                      o = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
                                  "line" !== e.config.chart.type && "area" !== e.config.chart.type || e.globals.comboCharts || e.config.tooltip.intersect || (o += " no-pointer-events");
                                  var l = i.getMarkerConfig({
                                      cssClass: o,
                                      seriesIndex: Number(r.getAttribute("data:realIndex"))
                                  });
                                  (s = t.drawMarker(0, 0, l)).node.setAttribute("default-marker-size", 0);
                                  var c = document.createElementNS(e.globals.SVGNS, "g");
                                  c.classList.add("apexcharts-series-markers"), c.appendChild(s.node), r.appendChild(c)
                              }
                          }
                      }
                  }, {
                      key: "enlargeCurrentPoint",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                              n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                              a = this.w;
                          "bubble" !== a.config.chart.type && this.newPointSize(e, t);
                          var r = t.getAttribute("cx"),
                              s = t.getAttribute("cy");
                          if (null !== i && null !== n && (r = i, s = n), this.tooltipPosition.moveXCrosshairs(r), !this.fixedTooltip) {
                              if ("radar" === a.config.chart.type) {
                                  var o = this.ttCtx.getElGrid(),
                                      l = o.getBoundingClientRect();
                                  r = this.ttCtx.e.clientX - l.left
                              }
                              this.tooltipPosition.moveTooltip(r, s, a.config.markers.hover.size)
                          }
                      }
                  }, {
                      key: "enlargePoints",
                      value: function(e) {
                          for (var t = this.w, i = this, n = this.ttCtx, a = e, r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), s = t.config.markers.hover.size, o = 0; o < r.length; o++) {
                              var l = r[o].getAttribute("rel"),
                                  c = r[o].getAttribute("index");
                              if (void 0 === s && (s = t.globals.markers.size[c] + t.config.markers.hover.sizeOffset), a === parseInt(l, 10)) {
                                  i.newPointSize(a, r[o]);
                                  var h = r[o].getAttribute("cx"),
                                      u = r[o].getAttribute("cy");
                                  i.tooltipPosition.moveXCrosshairs(h), n.fixedTooltip || i.tooltipPosition.moveTooltip(h, u, s)
                              } else i.oldPointSize(r[o])
                          }
                      }
                  }, {
                      key: "newPointSize",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.config.markers.hover.size,
                              a = 0 === e ? t.parentNode.firstChild : t.parentNode.lastChild;
                          if ("0" !== a.getAttribute("default-marker-size")) {
                              var r = parseInt(a.getAttribute("index"), 10);
                              void 0 === n && (n = i.globals.markers.size[r] + i.config.markers.hover.sizeOffset), n < 0 && (n = 0), a.setAttribute("r", n)
                          }
                      }
                  }, {
                      key: "oldPointSize",
                      value: function(e) {
                          var t = parseFloat(e.getAttribute("default-marker-size"));
                          e.setAttribute("r", t)
                      }
                  }, {
                      key: "resetPointsSize",
                      value: function() {
                          for (var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), t = 0; t < e.length; t++) {
                              var i = parseFloat(e[t].getAttribute("default-marker-size"));
                              y.isNumber(i) && i >= 0 ? e[t].setAttribute("r", i) : e[t].setAttribute("r", 0)
                          }
                      }
                  }]), e
              }(),
              we = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.ttCtx = t
                  }
                  return c(e, [{
                      key: "getAttr",
                      value: function(e, t) {
                          return parseFloat(e.target.getAttribute(t))
                      }
                  }, {
                      key: "handleHeatTreeTooltip",
                      value: function(e) {
                          var t = e.e,
                              i = e.opt,
                              n = e.x,
                              a = e.y,
                              r = e.type,
                              s = this.ttCtx,
                              o = this.w;
                          if (t.target.classList.contains("apexcharts-".concat(r, "-rect"))) {
                              var l = this.getAttr(t, "i"),
                                  c = this.getAttr(t, "j"),
                                  h = this.getAttr(t, "cx"),
                                  u = this.getAttr(t, "cy"),
                                  d = this.getAttr(t, "width"),
                                  f = this.getAttr(t, "height");
                              if (s.tooltipLabels.drawSeriesTexts({
                                      ttItems: i.ttItems,
                                      i: l,
                                      j: c,
                                      shared: !1,
                                      e: t
                                  }), o.globals.capturedSeriesIndex = l, o.globals.capturedDataPointIndex = c, n = h + s.tooltipRect.ttWidth / 2 + d, a = u + s.tooltipRect.ttHeight / 2 - f / 2, s.tooltipPosition.moveXCrosshairs(h + d / 2), n > o.globals.gridWidth / 2 && (n = h - s.tooltipRect.ttWidth / 2 + d), s.w.config.tooltip.followCursor) {
                                  var p = o.globals.dom.elWrap.getBoundingClientRect();
                                  n = o.globals.clientX - p.left - (n > o.globals.gridWidth / 2 ? s.tooltipRect.ttWidth : 0), a = o.globals.clientY - p.top
                              }
                          }
                          return {
                              x: n,
                              y: a
                          }
                      }
                  }, {
                      key: "handleMarkerTooltip",
                      value: function(e) {
                          var t, i, n = e.e,
                              a = e.opt,
                              r = e.x,
                              s = e.y,
                              o = this.w,
                              l = this.ttCtx;
                          if (n.target.classList.contains("apexcharts-marker")) {
                              var c = parseInt(a.paths.getAttribute("cx"), 10),
                                  h = parseInt(a.paths.getAttribute("cy"), 10),
                                  u = parseFloat(a.paths.getAttribute("val"));
                              if (i = parseInt(a.paths.getAttribute("rel"), 10), t = parseInt(a.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l.intersect) {
                                  var d = y.findAncestor(a.paths, "apexcharts-series");
                                  d && (t = parseInt(d.getAttribute("data:realIndex"), 10))
                              }
                              if (l.tooltipLabels.drawSeriesTexts({
                                      ttItems: a.ttItems,
                                      i: t,
                                      j: i,
                                      shared: !l.showOnIntersect && o.config.tooltip.shared,
                                      e: n
                                  }), "mouseup" === n.type && l.markerClick(n, t, i), o.globals.capturedSeriesIndex = t, o.globals.capturedDataPointIndex = i, r = c, s = h + o.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
                                  var f = l.getElGrid().getBoundingClientRect();
                                  s = l.e.clientY + o.globals.translateY - f.top
                              }
                              u < 0 && (s = h), l.marker.enlargeCurrentPoint(i, a.paths, r, s)
                          }
                          return {
                              x: r,
                              y: s
                          }
                      }
                  }, {
                      key: "handleBarTooltip",
                      value: function(e) {
                          var t, i, n = e.e,
                              a = e.opt,
                              r = this.w,
                              s = this.ttCtx,
                              o = s.getElTooltip(),
                              l = 0,
                              c = 0,
                              h = 0,
                              u = this.getBarTooltipXY({
                                  e: n,
                                  opt: a
                              });
                          t = u.i;
                          var d = u.barHeight,
                              f = u.j;
                          r.globals.capturedSeriesIndex = t, r.globals.capturedDataPointIndex = f, r.globals.isBarHorizontal && s.tooltipUtil.hasBars() || !r.config.tooltip.shared ? (c = u.x, h = u.y, i = Array.isArray(r.config.stroke.width) ? r.config.stroke.width[t] : r.config.stroke.width, l = c) : r.globals.comboCharts || r.config.tooltip.shared || (l /= 2), isNaN(h) ? h = r.globals.svgHeight - s.tooltipRect.ttHeight : h < 0 && (h = 0);
                          var p = parseInt(a.paths.parentNode.getAttribute("data:realIndex"), 10),
                              g = r.globals.isMultipleYAxis ? r.config.yaxis[p] && r.config.yaxis[p].reversed : r.config.yaxis[0].reversed;
                          if (c + s.tooltipRect.ttWidth > r.globals.gridWidth && !g ? c -= s.tooltipRect.ttWidth : c < 0 && (c = 0), s.w.config.tooltip.followCursor) {
                              var x = s.getElGrid().getBoundingClientRect();
                              h = s.e.clientY - x.top
                          }
                          null === s.tooltip && (s.tooltip = r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r.config.tooltip.shared || (r.globals.comboBarCount > 0 ? s.tooltipPosition.moveXCrosshairs(l + i / 2) : s.tooltipPosition.moveXCrosshairs(l)), !s.fixedTooltip && (!r.config.tooltip.shared || r.globals.isBarHorizontal && s.tooltipUtil.hasBars()) && (g && (c -= s.tooltipRect.ttWidth) < 0 && (c = 0), !g || r.globals.isBarHorizontal && s.tooltipUtil.hasBars() || (h = h + d - 2 * (r.globals.series[t][f] < 0 ? d : 0)), s.tooltipRect.ttHeight + h > r.globals.gridHeight ? h = r.globals.gridHeight - s.tooltipRect.ttHeight + r.globals.translateY : (h = h + r.globals.translateY - s.tooltipRect.ttHeight / 2) < 0 && (h = 0), o.style.left = c + r.globals.translateX + "px", o.style.top = h + "px")
                      }
                  }, {
                      key: "getBarTooltipXY",
                      value: function(e) {
                          var t = e.e,
                              i = e.opt,
                              n = this.w,
                              a = null,
                              r = this.ttCtx,
                              s = 0,
                              o = 0,
                              l = 0,
                              c = 0,
                              h = 0,
                              u = t.target.classList;
                          if (u.contains("apexcharts-bar-area") || u.contains("apexcharts-candlestick-area") || u.contains("apexcharts-boxPlot-area") || u.contains("apexcharts-rangebar-area")) {
                              var d = t.target,
                                  f = d.getBoundingClientRect(),
                                  p = i.elGrid.getBoundingClientRect(),
                                  g = f.height;
                              h = f.height;
                              var x = f.width,
                                  v = parseInt(d.getAttribute("cx"), 10),
                                  m = parseInt(d.getAttribute("cy"), 10);
                              c = parseFloat(d.getAttribute("barWidth"));
                              var b = "touchmove" === t.type ? t.touches[0].clientX : t.clientX;
                              a = parseInt(d.getAttribute("j"), 10), s = parseInt(d.parentNode.getAttribute("rel"), 10) - 1;
                              var y = d.getAttribute("data-range-y1"),
                                  w = d.getAttribute("data-range-y2");
                              n.globals.comboCharts && (s = parseInt(d.parentNode.getAttribute("data:realIndex"), 10)), r.tooltipLabels.drawSeriesTexts({
                                  ttItems: i.ttItems,
                                  i: s,
                                  j: a,
                                  y1: y ? parseInt(y, 10) : null,
                                  y2: w ? parseInt(w, 10) : null,
                                  shared: !r.showOnIntersect && n.config.tooltip.shared,
                                  e: t
                              }), n.config.tooltip.followCursor ? n.globals.isBarHorizontal ? (o = b - p.left + 15, l = m - r.dataPointsDividedHeight + g / 2 - r.tooltipRect.ttHeight / 2) : (o = n.globals.isXNumeric ? v - x / 2 : v - r.dataPointsDividedWidth + x / 2, l = t.clientY - p.top - r.tooltipRect.ttHeight / 2 - 15) : n.globals.isBarHorizontal ? ((o = v) < r.xyRatios.baseLineInvertedY && (o = v - r.tooltipRect.ttWidth), l = m - r.dataPointsDividedHeight + g / 2 - r.tooltipRect.ttHeight / 2) : (o = n.globals.isXNumeric ? v - x / 2 : v - r.dataPointsDividedWidth + x / 2, l = m)
                          }
                          return {
                              x: o,
                              y: l,
                              barHeight: h,
                              barWidth: c,
                              i: s,
                              j: a
                          }
                      }
                  }]), e
              }(),
              ke = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.ttCtx = t
                  }
                  return c(e, [{
                      key: "drawXaxisTooltip",
                      value: function() {
                          var e = this.w,
                              t = this.ttCtx,
                              i = "bottom" === e.config.xaxis.position;
                          t.xaxisOffY = i ? e.globals.gridHeight + 1 : -e.globals.xAxisHeight - e.config.xaxis.axisTicks.height + 3;
                          var n = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                              a = e.globals.dom.elWrap;
                          t.isXAxisTooltipEnabled && null === e.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (t.xaxisTooltip = document.createElement("div"), t.xaxisTooltip.setAttribute("class", n + " apexcharts-theme-" + e.config.tooltip.theme), a.appendChild(t.xaxisTooltip), t.xaxisTooltipText = document.createElement("div"), t.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), t.xaxisTooltipText.style.fontFamily = e.config.xaxis.tooltip.style.fontFamily || e.config.chart.fontFamily, t.xaxisTooltipText.style.fontSize = e.config.xaxis.tooltip.style.fontSize, t.xaxisTooltip.appendChild(t.xaxisTooltipText))
                      }
                  }, {
                      key: "drawYaxisTooltip",
                      value: function() {
                          for (var e = this.w, t = this.ttCtx, i = function(i) {
                                  var n = e.config.yaxis[i].opposite || e.config.yaxis[i].crosshairs.opposite;
                                  t.yaxisOffX = n ? e.globals.gridWidth + 1 : 1;
                                  var a = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i, n ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
                                  e.globals.yAxisSameScaleIndices.map((function(t, n) {
                                      t.map((function(t, n) {
                                          n === i && (a += e.config.yaxis[n].show ? " " : " apexcharts-yaxistooltip-hidden")
                                      }))
                                  }));
                                  var r = e.globals.dom.elWrap;
                                  null === e.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i)) && (t.yaxisTooltip = document.createElement("div"), t.yaxisTooltip.setAttribute("class", a + " apexcharts-theme-" + e.config.tooltip.theme), r.appendChild(t.yaxisTooltip), 0 === i && (t.yaxisTooltipText = []), t.yaxisTooltipText[i] = document.createElement("div"), t.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"), t.yaxisTooltip.appendChild(t.yaxisTooltipText[i]))
                              }, n = 0; n < e.config.yaxis.length; n++) i(n)
                      }
                  }, {
                      key: "setXCrosshairWidth",
                      value: function() {
                          var e = this.w,
                              t = this.ttCtx,
                              i = t.getElXCrosshairs();
                          if (t.xcrosshairsWidth = parseInt(e.config.xaxis.crosshairs.width, 10), e.globals.comboCharts) {
                              var n = e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                              if (null !== n && "barWidth" === e.config.xaxis.crosshairs.width) {
                                  var a = parseFloat(n.getAttribute("barWidth"));
                                  t.xcrosshairsWidth = a
                              } else if ("tickWidth" === e.config.xaxis.crosshairs.width) {
                                  var r = e.globals.labels.length;
                                  t.xcrosshairsWidth = e.globals.gridWidth / r
                              }
                          } else if ("tickWidth" === e.config.xaxis.crosshairs.width) {
                              var s = e.globals.labels.length;
                              t.xcrosshairsWidth = e.globals.gridWidth / s
                          } else if ("barWidth" === e.config.xaxis.crosshairs.width) {
                              var o = e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                              if (null !== o) {
                                  var l = parseFloat(o.getAttribute("barWidth"));
                                  t.xcrosshairsWidth = l
                              } else t.xcrosshairsWidth = 1
                          }
                          e.globals.isBarHorizontal && (t.xcrosshairsWidth = 0), null !== i && t.xcrosshairsWidth > 0 && i.setAttribute("width", t.xcrosshairsWidth)
                      }
                  }, {
                      key: "handleYCrosshair",
                      value: function() {
                          var e = this.w,
                              t = this.ttCtx;
                          t.ycrosshairs = e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), t.ycrosshairsHidden = e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")
                      }
                  }, {
                      key: "drawYaxisTooltipText",
                      value: function(e, t, i) {
                          var n = this.ttCtx,
                              a = this.w,
                              r = a.globals.yLabelFormatters[e];
                          if (n.yaxisTooltips[e]) {
                              var s = n.getElGrid().getBoundingClientRect(),
                                  o = (t - s.top) * i.yRatio[e],
                                  l = a.globals.maxYArr[e] - a.globals.minYArr[e],
                                  c = a.globals.minYArr[e] + (l - o);
                              n.tooltipPosition.moveYCrosshairs(t - s.top), n.yaxisTooltipText[e].innerHTML = r(c), n.tooltipPosition.moveYAxisTooltip(e)
                          }
                      }
                  }]), e
              }(),
              Se = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.tConfig = i.config.tooltip, this.tooltipUtil = new ve(this), this.tooltipLabels = new me(this), this.tooltipPosition = new be(this), this.marker = new ye(this), this.intersect = new we(this), this.axesTooltip = new ke(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !i.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now()
                  }
                  return c(e, [{
                      key: "getElTooltip",
                      value: function(e) {
                          return e || (e = this), e.w.globals.dom.baseEl ? e.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null
                      }
                  }, {
                      key: "getElXCrosshairs",
                      value: function() {
                          return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")
                      }
                  }, {
                      key: "getElGrid",
                      value: function() {
                          return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")
                      }
                  }, {
                      key: "drawTooltip",
                      value: function(e) {
                          var t = this.w;
                          this.xyRatios = e, this.isXAxisTooltipEnabled = t.config.xaxis.tooltip.enabled && t.globals.axisCharts, this.yaxisTooltips = t.config.yaxis.map((function(e, i) {
                              return !!(e.show && e.tooltip.enabled && t.globals.axisCharts)
                          })), this.allTooltipSeriesGroups = [], t.globals.axisCharts || (this.showTooltipTitle = !1);
                          var i = document.createElement("div");
                          if (i.classList.add("apexcharts-tooltip"), i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), t.globals.dom.elWrap.appendChild(i), t.globals.axisCharts) {
                              this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
                              var n = new Z(this.ctx);
                              this.xAxisTicksPositions = n.getXAxisTicksPositions()
                          }
                          if (!t.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== t.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== t.config.markers.size && 0 !== t.globals.markers.largestSize || this.marker.drawDynamicPoints(this), t.globals.collapsedSeries.length !== t.globals.series.length) {
                              this.dataPointsDividedHeight = t.globals.gridHeight / t.globals.dataPoints, this.dataPointsDividedWidth = t.globals.gridWidth / t.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || t.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
                              var a = t.globals.series.length;
                              (t.globals.xyCharts || t.globals.comboCharts) && this.tConfig.shared && (a = this.showOnIntersect ? 1 : t.globals.series.length), this.legendLabels = t.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(a), this.addSVGEvents()
                          }
                      }
                  }, {
                      key: "createTTElements",
                      value: function(e) {
                          for (var t = this, i = this.w, n = [], a = this.getElTooltip(), r = function(r) {
                                  var s = document.createElement("div");
                                  s.classList.add("apexcharts-tooltip-series-group"), s.style.order = i.config.tooltip.inverseOrder ? e - r : r + 1, t.tConfig.shared && t.tConfig.enabledOnSeries && Array.isArray(t.tConfig.enabledOnSeries) && t.tConfig.enabledOnSeries.indexOf(r) < 0 && s.classList.add("apexcharts-tooltip-series-group-hidden");
                                  var o = document.createElement("span");
                                  o.classList.add("apexcharts-tooltip-marker"), o.style.backgroundColor = i.globals.colors[r], s.appendChild(o);
                                  var l = document.createElement("div");
                                  l.classList.add("apexcharts-tooltip-text"), l.style.fontFamily = t.tConfig.style.fontFamily || i.config.chart.fontFamily, l.style.fontSize = t.tConfig.style.fontSize, ["y", "goals", "z"].forEach((function(e) {
                                      var t = document.createElement("div");
                                      t.classList.add("apexcharts-tooltip-".concat(e, "-group"));
                                      var i = document.createElement("span");
                                      i.classList.add("apexcharts-tooltip-text-".concat(e, "-label")), t.appendChild(i);
                                      var n = document.createElement("span");
                                      n.classList.add("apexcharts-tooltip-text-".concat(e, "-value")), t.appendChild(n), l.appendChild(t)
                                  })), s.appendChild(l), a.appendChild(s), n.push(s)
                              }, s = 0; s < e; s++) r(s);
                          return n
                      }
                  }, {
                      key: "addSVGEvents",
                      value: function() {
                          var e = this.w,
                              t = e.config.chart.type,
                              i = this.getElTooltip(),
                              n = !("bar" !== t && "candlestick" !== t && "boxPlot" !== t && "rangeBar" !== t),
                              a = "area" === t || "line" === t || "scatter" === t || "bubble" === t || "radar" === t,
                              r = e.globals.dom.Paper.node,
                              s = this.getElGrid();
                          s && (this.seriesBound = s.getBoundingClientRect());
                          var o, l = [],
                              c = [],
                              h = {
                                  hoverArea: r,
                                  elGrid: s,
                                  tooltipEl: i,
                                  tooltipY: l,
                                  tooltipX: c,
                                  ttItems: this.ttItems
                              };
                          if (e.globals.axisCharts && (a ? o = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : n ? o = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== t && "treemap" !== t || (o = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), o && o.length))
                              for (var u = 0; u < o.length; u++) l.push(o[u].getAttribute("cy")), c.push(o[u].getAttribute("cx"));
                          if (e.globals.xyCharts && !this.showOnIntersect || e.globals.comboCharts && !this.showOnIntersect || n && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([r], h);
                          else if (n && !e.globals.comboCharts || a && this.showOnIntersect) this.addDatapointEventsListeners(h);
                          else if (!e.globals.axisCharts || "heatmap" === t || "treemap" === t) {
                              var d = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                              this.addPathsEventListeners(d, h)
                          }
                          if (this.showOnIntersect) {
                              var f = e.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
                              f.length > 0 && this.addPathsEventListeners(f, h), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(h)
                          }
                      }
                  }, {
                      key: "drawFixedTooltipRect",
                      value: function() {
                          var e = this.w,
                              t = this.getElTooltip(),
                              i = t.getBoundingClientRect(),
                              n = i.width + 10,
                              a = i.height + 10,
                              r = this.tConfig.fixed.offsetX,
                              s = this.tConfig.fixed.offsetY,
                              o = this.tConfig.fixed.position.toLowerCase();
                          return o.indexOf("right") > -1 && (r = r + e.globals.svgWidth - n + 10), o.indexOf("bottom") > -1 && (s = s + e.globals.svgHeight - a - 10), t.style.left = r + "px", t.style.top = s + "px", {
                              x: r,
                              y: s,
                              ttWidth: n,
                              ttHeight: a
                          }
                      }
                  }, {
                      key: "addDatapointEventsListeners",
                      value: function(e) {
                          var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
                          this.addPathsEventListeners(t, e)
                      }
                  }, {
                      key: "addPathsEventListeners",
                      value: function(e, t) {
                          for (var i = this, n = function(n) {
                                  var a = {
                                      paths: e[n],
                                      tooltipEl: t.tooltipEl,
                                      tooltipY: t.tooltipY,
                                      tooltipX: t.tooltipX,
                                      elGrid: t.elGrid,
                                      hoverArea: t.hoverArea,
                                      ttItems: t.ttItems
                                  };
                                  ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map((function(t) {
                                      return e[n].addEventListener(t, i.onSeriesHover.bind(i, a), {
                                          capture: !1,
                                          passive: !0
                                      })
                                  }))
                              }, a = 0; a < e.length; a++) n(a)
                      }
                  }, {
                      key: "onSeriesHover",
                      value: function(e, t) {
                          var i = this,
                              n = Date.now() - this.lastHoverTime;
                          n >= 100 ? this.seriesHover(e, t) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout((function() {
                              i.seriesHover(e, t)
                          }), 100 - n))
                      }
                  }, {
                      key: "seriesHover",
                      value: function(e, t) {
                          var i = this;
                          this.lastHoverTime = Date.now();
                          var n = [],
                              a = this.w;
                          a.config.chart.group && (n = this.ctx.getGroupedCharts()), a.globals.axisCharts && (a.globals.minX === -1 / 0 && a.globals.maxX === 1 / 0 || 0 === a.globals.dataPoints) || (n.length ? n.forEach((function(n) {
                              var a = i.getElTooltip(n),
                                  r = {
                                      paths: e.paths,
                                      tooltipEl: a,
                                      tooltipY: e.tooltipY,
                                      tooltipX: e.tooltipX,
                                      elGrid: e.elGrid,
                                      hoverArea: e.hoverArea,
                                      ttItems: n.w.globals.tooltip.ttItems
                                  };
                              n.w.globals.minX === i.w.globals.minX && n.w.globals.maxX === i.w.globals.maxX && n.w.globals.tooltip.seriesHoverByContext({
                                  chartCtx: n,
                                  ttCtx: n.w.globals.tooltip,
                                  opt: r,
                                  e: t
                              })
                          })) : this.seriesHoverByContext({
                              chartCtx: this.ctx,
                              ttCtx: this.w.globals.tooltip,
                              opt: e,
                              e: t
                          }))
                      }
                  }, {
                      key: "seriesHoverByContext",
                      value: function(e) {
                          var t = e.chartCtx,
                              i = e.ttCtx,
                              n = e.opt,
                              a = e.e,
                              r = t.w,
                              s = this.getElTooltip();
                          s && (i.tooltipRect = {
                              x: 0,
                              y: 0,
                              ttWidth: s.getBoundingClientRect().width,
                              ttHeight: s.getBoundingClientRect().height
                          }, i.e = a, !i.tooltipUtil.hasBars() || r.globals.comboCharts || i.isBarShared || this.tConfig.onDatasetHover.highlightDataSeries && new z(t).toggleSeriesOnHover(a, a.target.parentNode), i.fixedTooltip && i.drawFixedTooltipRect(), r.globals.axisCharts ? i.axisChartsTooltips({
                              e: a,
                              opt: n,
                              tooltipRect: i.tooltipRect
                          }) : i.nonAxisChartsTooltips({
                              e: a,
                              opt: n,
                              tooltipRect: i.tooltipRect
                          }))
                      }
                  }, {
                      key: "axisChartsTooltips",
                      value: function(e) {
                          var t, i, n = e.e,
                              a = e.opt,
                              r = this.w,
                              s = a.elGrid.getBoundingClientRect(),
                              o = "touchmove" === n.type ? n.touches[0].clientX : n.clientX,
                              l = "touchmove" === n.type ? n.touches[0].clientY : n.clientY;
                          if (this.clientY = l, this.clientX = o, r.globals.capturedSeriesIndex = -1, r.globals.capturedDataPointIndex = -1, l < s.top || l > s.top + s.height) this.handleMouseOut(a);
                          else {
                              if (Array.isArray(this.tConfig.enabledOnSeries) && !r.config.tooltip.shared) {
                                  var c = parseInt(a.paths.getAttribute("index"), 10);
                                  if (this.tConfig.enabledOnSeries.indexOf(c) < 0) return void this.handleMouseOut(a)
                              }
                              var h = this.getElTooltip(),
                                  u = this.getElXCrosshairs(),
                                  d = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.tooltipUtil.hasBars();
                              if ("mousemove" === n.type || "touchmove" === n.type || "mouseup" === n.type) {
                                  if (r.globals.collapsedSeries.length + r.globals.ancillaryCollapsedSeries.length === r.globals.series.length) return;
                                  null !== u && u.classList.add("apexcharts-active");
                                  var f = this.yaxisTooltips.filter((function(e) {
                                      return !0 === e
                                  }));
                                  if (null !== this.ycrosshairs && f.length && this.ycrosshairs.classList.add("apexcharts-active"), d && !this.showOnIntersect) this.handleStickyTooltip(n, o, l, a);
                                  else if ("heatmap" === r.config.chart.type || "treemap" === r.config.chart.type) {
                                      var p = this.intersect.handleHeatTreeTooltip({
                                          e: n,
                                          opt: a,
                                          x: t,
                                          y: i,
                                          type: r.config.chart.type
                                      });
                                      t = p.x, i = p.y, h.style.left = t + "px", h.style.top = i + "px"
                                  } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
                                      e: n,
                                      opt: a
                                  }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
                                      e: n,
                                      opt: a,
                                      x: t,
                                      y: i
                                  });
                                  if (this.yaxisTooltips.length)
                                      for (var g = 0; g < r.config.yaxis.length; g++) this.axesTooltip.drawYaxisTooltipText(g, l, this.xyRatios);
                                  a.tooltipEl.classList.add("apexcharts-active")
                              } else "mouseout" !== n.type && "touchend" !== n.type || this.handleMouseOut(a)
                          }
                      }
                  }, {
                      key: "nonAxisChartsTooltips",
                      value: function(e) {
                          var t = e.e,
                              i = e.opt,
                              n = e.tooltipRect,
                              a = this.w,
                              r = i.paths.getAttribute("rel"),
                              s = this.getElTooltip(),
                              o = a.globals.dom.elWrap.getBoundingClientRect();
                          if ("mousemove" === t.type || "touchmove" === t.type) {
                              s.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
                                  ttItems: i.ttItems,
                                  i: parseInt(r, 10) - 1,
                                  shared: !1
                              });
                              var l = a.globals.clientX - o.left - n.ttWidth / 2,
                                  c = a.globals.clientY - o.top - n.ttHeight - 10;
                              if (s.style.left = l + "px", s.style.top = c + "px", a.config.legend.tooltipHoverFormatter) {
                                  var h = r - 1,
                                      u = (0, a.config.legend.tooltipHoverFormatter)(this.legendLabels[h].getAttribute("data:default-text"), {
                                          seriesIndex: h,
                                          dataPointIndex: h,
                                          w: a
                                      });
                                  this.legendLabels[h].innerHTML = u
                              }
                          } else "mouseout" !== t.type && "touchend" !== t.type || (s.classList.remove("apexcharts-active"), a.config.legend.tooltipHoverFormatter && this.legendLabels.forEach((function(e) {
                              var t = e.getAttribute("data:default-text");
                              e.innerHTML = decodeURIComponent(t)
                          })))
                      }
                  }, {
                      key: "handleStickyTooltip",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = this.tooltipUtil.getNearestValues({
                                  context: this,
                                  hoverArea: n.hoverArea,
                                  elGrid: n.elGrid,
                                  clientX: t,
                                  clientY: i
                              }),
                              s = r.j,
                              o = r.capturedSeries,
                              l = n.elGrid.getBoundingClientRect();
                          r.hoverX < 0 || r.hoverX > l.width ? this.handleMouseOut(n) : null !== o ? this.handleStickyCapturedSeries(e, o, n, s) : (this.tooltipUtil.isXoverlap(s) || a.globals.isBarHorizontal) && this.create(e, this, 0, s, n.ttItems)
                      }
                  }, {
                      key: "handleStickyCapturedSeries",
                      value: function(e, t, i, n) {
                          var a = this.w;
                          this.tConfig.shared || null !== a.globals.series[t][n] ? void 0 !== a.globals.series[t][n] ? this.tConfig.shared && this.tooltipUtil.isXoverlap(n) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(e, this, t, n, i.ttItems) : this.create(e, this, t, n, i.ttItems, !1) : this.tooltipUtil.isXoverlap(n) && this.create(e, this, 0, n, i.ttItems) : this.handleMouseOut(i)
                      }
                  }, {
                      key: "deactivateHoverFilter",
                      value: function() {
                          for (var e = this.w, t = new S(this.ctx), i = e.globals.dom.Paper.select(".apexcharts-bar-area"), n = 0; n < i.length; n++) t.pathMouseLeave(i[n])
                      }
                  }, {
                      key: "handleMouseOut",
                      value: function(e) {
                          var t = this.w,
                              i = this.getElXCrosshairs();
                          if (e.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== t.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
                              null === this.yaxisTTEls && (this.yaxisTTEls = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                              for (var n = 0; n < this.yaxisTTEls.length; n++) this.yaxisTTEls[n].classList.remove("apexcharts-active")
                          }
                          t.config.legend.tooltipHoverFormatter && this.legendLabels.forEach((function(e) {
                              var t = e.getAttribute("data:default-text");
                              e.innerHTML = decodeURIComponent(t)
                          }))
                      }
                  }, {
                      key: "markerClick",
                      value: function(e, t, i) {
                          var n = this.w;
                          "function" == typeof n.config.chart.events.markerClick && n.config.chart.events.markerClick(e, this.ctx, {
                              seriesIndex: t,
                              dataPointIndex: i,
                              w: n
                          }), this.ctx.events.fireEvent("markerClick", [e, this.ctx, {
                              seriesIndex: t,
                              dataPointIndex: i,
                              w: n
                          }])
                      }
                  }, {
                      key: "create",
                      value: function(e, t, i, n, a) {
                          var r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                              s = this.w,
                              o = t;
                          "mouseup" === e.type && this.markerClick(e, i, n), null === r && (r = this.tConfig.shared);
                          var l = this.tooltipUtil.hasMarkers(),
                              c = this.tooltipUtil.getElBars();
                          if (s.config.legend.tooltipHoverFormatter) {
                              var h = s.config.legend.tooltipHoverFormatter,
                                  u = Array.from(this.legendLabels);
                              u.forEach((function(e) {
                                  var t = e.getAttribute("data:default-text");
                                  e.innerHTML = decodeURIComponent(t)
                              }));
                              for (var d = 0; d < u.length; d++) {
                                  var f = u[d],
                                      p = parseInt(f.getAttribute("i"), 10),
                                      g = decodeURIComponent(f.getAttribute("data:default-text")),
                                      x = h(g, {
                                          seriesIndex: r ? p : i,
                                          dataPointIndex: n,
                                          w: s
                                      });
                                  if (r) f.innerHTML = s.globals.collapsedSeriesIndices.indexOf(p) < 0 ? x : g;
                                  else if (f.innerHTML = p === i ? x : g, i === p) break
                              }
                          }
                          if (r) {
                              if (o.tooltipLabels.drawSeriesTexts({
                                      ttItems: a,
                                      i,
                                      j: n,
                                      shared: !this.showOnIntersect && this.tConfig.shared
                                  }), l && (s.globals.markers.largestSize > 0 ? o.marker.enlargePoints(n) : o.tooltipPosition.moveDynamicPointsOnHover(n)), this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(c), this.barSeriesHeight > 0)) {
                                  var v = new S(this.ctx),
                                      m = s.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(n, "']"));
                                  this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(n);
                                  for (var b = 0; b < m.length; b++) v.pathMouseEnter(m[b])
                              }
                          } else o.tooltipLabels.drawSeriesTexts({
                              shared: !1,
                              ttItems: a,
                              i,
                              j: n
                          }), this.tooltipUtil.hasBars() && o.tooltipPosition.moveStickyTooltipOverBars(n), l && o.tooltipPosition.moveMarkers(i, n)
                      }
                  }]), e
              }(),
              Ae = function(e) {
                  u(i, H);
                  var t = g(i);

                  function i() {
                      return o(this, i), t.apply(this, arguments)
                  }
                  return c(i, [{
                      key: "draw",
                      value: function(e, t) {
                          var i = this,
                              n = this.w;
                          this.graphics = new S(this.ctx), this.bar = new H(this.ctx, this.xyRatios);
                          var a = new T(this.ctx, n);
                          e = a.getLogSeries(e), this.yRatio = a.getLogYRatios(this.yRatio), this.barHelpers.initVariables(e), "100%" === n.config.chart.stackType && (e = n.globals.seriesPercent.slice()), this.series = e, this.totalItems = 0, this.prevY = [], this.prevX = [], this.prevYF = [], this.prevXF = [], this.prevYVal = [], this.prevXVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [], this.yArrj = [], this.yArrjF = [], this.yArrjVal = [];
                          for (var s = 0; s < e.length; s++) e[s].length > 0 && (this.totalItems += e[s].length);
                          for (var o = this.graphics.group({
                                  class: "apexcharts-bar-series apexcharts-plot-series"
                              }), l = 0, c = 0, h = function(a, s) {
                                  var h = void 0,
                                      u = void 0,
                                      d = void 0,
                                      f = void 0,
                                      p = [],
                                      g = [],
                                      x = n.globals.comboCharts ? t[a] : a;
                                  i.yRatio.length > 1 && (i.yaxisIndex = x), i.isReversed = n.config.yaxis[i.yaxisIndex] && n.config.yaxis[i.yaxisIndex].reversed;
                                  var v = i.graphics.group({
                                      class: "apexcharts-series",
                                      seriesName: y.escapeString(n.globals.seriesNames[x]),
                                      rel: a + 1,
                                      "data:realIndex": x
                                  });
                                  i.ctx.series.addCollapsedClassToSeries(v, x);
                                  var m = i.graphics.group({
                                          class: "apexcharts-datalabels",
                                          "data:realIndex": x
                                      }),
                                      b = 0,
                                      w = 0,
                                      k = i.initialPositions(l, c, h, u, d, f);
                                  c = k.y, b = k.barHeight, u = k.yDivision, f = k.zeroW, l = k.x, w = k.barWidth, h = k.xDivision, d = k.zeroH, i.yArrj = [], i.yArrjF = [], i.yArrjVal = [], i.xArrj = [], i.xArrjF = [], i.xArrjVal = [], 1 === i.prevY.length && i.prevY[0].every((function(e) {
                                      return isNaN(e)
                                  })) && (i.prevY[0] = i.prevY[0].map((function(e) {
                                      return d
                                  })), i.prevYF[0] = i.prevYF[0].map((function(e) {
                                      return 0
                                  })));
                                  for (var S = 0; S < n.globals.dataPoints; S++) {
                                      var A = i.barHelpers.getStrokeWidth(a, S, x),
                                          C = {
                                              indexes: {
                                                  i: a,
                                                  j: S,
                                                  realIndex: x,
                                                  bc: s
                                              },
                                              strokeWidth: A,
                                              x: l,
                                              y: c,
                                              elSeries: v
                                          },
                                          T = null;
                                      i.isHorizontal ? (T = i.drawStackedBarPaths(r(r({}, C), {}, {
                                          zeroW: f,
                                          barHeight: b,
                                          yDivision: u
                                      })), w = i.series[a][S] / i.invertedYRatio) : (T = i.drawStackedColumnPaths(r(r({}, C), {}, {
                                          xDivision: h,
                                          barWidth: w,
                                          zeroH: d
                                      })), b = i.series[a][S] / i.yRatio[i.yaxisIndex]), c = T.y, l = T.x, p.push(l), g.push(c);
                                      var E = i.barHelpers.getPathFillColor(e, a, S, x);
                                      v = i.renderSeries({
                                          realIndex: x,
                                          pathFill: E,
                                          j: S,
                                          i: a,
                                          pathFrom: T.pathFrom,
                                          pathTo: T.pathTo,
                                          strokeWidth: A,
                                          elSeries: v,
                                          x: l,
                                          y: c,
                                          series: e,
                                          barHeight: b,
                                          barWidth: w,
                                          elDataLabelsWrap: m,
                                          type: "bar",
                                          visibleSeries: 0
                                      })
                                  }
                                  n.globals.seriesXvalues[x] = p, n.globals.seriesYvalues[x] = g, i.prevY.push(i.yArrj), i.prevYF.push(i.yArrjF), i.prevYVal.push(i.yArrjVal), i.prevX.push(i.xArrj), i.prevXF.push(i.xArrjF), i.prevXVal.push(i.xArrjVal), o.add(v)
                              }, u = 0, d = 0; u < e.length; u++, d++) h(u, d);
                          return o
                      }
                  }, {
                      key: "initialPositions",
                      value: function(e, t, i, n, a, r) {
                          var s, o, l = this.w;
                          return this.isHorizontal ? (s = (s = n = l.globals.gridHeight / l.globals.dataPoints) * parseInt(l.config.plotOptions.bar.barHeight, 10) / 100, r = this.baseLineInvertedY + l.globals.padHorizontal + (this.isReversed ? l.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), t = (n - s) / 2) : (o = i = l.globals.gridWidth / l.globals.dataPoints, o = l.globals.isXNumeric && l.globals.dataPoints > 1 ? (i = l.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : o * parseInt(l.config.plotOptions.bar.columnWidth, 10) / 100, a = this.baseLineY[this.yaxisIndex] + (this.isReversed ? l.globals.gridHeight : 0) - (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), e = l.globals.padHorizontal + (i - o) / 2), {
                              x: e,
                              y: t,
                              yDivision: n,
                              xDivision: i,
                              barHeight: s,
                              barWidth: o,
                              zeroH: a,
                              zeroW: r
                          }
                      }
                  }, {
                      key: "drawStackedBarPaths",
                      value: function(e) {
                          for (var t, i = e.indexes, n = e.barHeight, a = e.strokeWidth, r = e.zeroW, s = e.x, o = e.y, l = e.yDivision, c = e.elSeries, h = this.w, u = o, d = i.i, f = i.j, p = 0, g = 0; g < this.prevXF.length; g++) p += this.prevXF[g][f];
                          if (d > 0) {
                              var x = r;
                              this.prevXVal[d - 1][f] < 0 ? x = this.series[d][f] >= 0 ? this.prevX[d - 1][f] + p - 2 * (this.isReversed ? p : 0) : this.prevX[d - 1][f] : this.prevXVal[d - 1][f] >= 0 && (x = this.series[d][f] >= 0 ? this.prevX[d - 1][f] : this.prevX[d - 1][f] - p + 2 * (this.isReversed ? p : 0)), t = x
                          } else t = r;
                          s = null === this.series[d][f] ? t : t + this.series[d][f] / this.invertedYRatio - 2 * (this.isReversed ? this.series[d][f] / this.invertedYRatio : 0);
                          var v = this.barHelpers.getBarpaths({
                              barYPosition: u,
                              barHeight: n,
                              x1: t,
                              x2: s,
                              strokeWidth: a,
                              series: this.series,
                              realIndex: i.realIndex,
                              i: d,
                              j: f,
                              w: h
                          });
                          return this.barHelpers.barBackground({
                              j: f,
                              i: d,
                              y1: u,
                              y2: n,
                              elSeries: c
                          }), o += l, {
                              pathTo: v.pathTo,
                              pathFrom: v.pathFrom,
                              x: s,
                              y: o
                          }
                      }
                  }, {
                      key: "drawStackedColumnPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.x,
                              n = e.y,
                              a = e.xDivision,
                              r = e.barWidth,
                              s = e.zeroH;
                          e.strokeWidth;
                          var o = e.elSeries,
                              l = this.w,
                              c = t.i,
                              h = t.j,
                              u = t.bc;
                          if (l.globals.isXNumeric) {
                              var d = l.globals.seriesX[c][h];
                              d || (d = 0), i = (d - l.globals.minX) / this.xRatio - r / 2
                          }
                          for (var f, p = i, g = 0, x = 0; x < this.prevYF.length; x++) g += isNaN(this.prevYF[x][h]) ? 0 : this.prevYF[x][h];
                          if (c > 0 && !l.globals.isXNumeric || c > 0 && l.globals.isXNumeric && l.globals.seriesX[c - 1][h] === l.globals.seriesX[c][h]) {
                              var v, m, b = Math.min(this.yRatio.length + 1, c + 1);
                              if (void 0 !== this.prevY[c - 1])
                                  for (var y = 1; y < b; y++)
                                      if (!isNaN(this.prevY[c - y][h])) {
                                          m = this.prevY[c - y][h];
                                          break
                                      } for (var w = 1; w < b; w++) {
                                  if (this.prevYVal[c - w][h] < 0) {
                                      v = this.series[c][h] >= 0 ? m - g + 2 * (this.isReversed ? g : 0) : m;
                                      break
                                  }
                                  if (this.prevYVal[c - w][h] >= 0) {
                                      v = this.series[c][h] >= 0 ? m : m + g - 2 * (this.isReversed ? g : 0);
                                      break
                                  }
                              }
                              void 0 === v && (v = l.globals.gridHeight), f = this.prevYF[0].every((function(e) {
                                  return 0 === e
                              })) && this.prevYF.slice(1, c).every((function(e) {
                                  return e.every((function(e) {
                                      return isNaN(e)
                                  }))
                              })) ? l.globals.gridHeight - s : v
                          } else f = l.globals.gridHeight - s;
                          n = f - this.series[c][h] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[c][h] / this.yRatio[this.yaxisIndex] : 0);
                          var k = this.barHelpers.getColumnPaths({
                              barXPosition: p,
                              barWidth: r,
                              y1: f,
                              y2: n,
                              yRatio: this.yRatio[this.yaxisIndex],
                              strokeWidth: this.strokeWidth,
                              series: this.series,
                              realIndex: t.realIndex,
                              i: c,
                              j: h,
                              w: l
                          });
                          return this.barHelpers.barBackground({
                              bc: u,
                              j: h,
                              i: c,
                              x1: p,
                              x2: r,
                              elSeries: o
                          }), i += a, {
                              pathTo: k.pathTo,
                              pathFrom: k.pathFrom,
                              x: l.globals.isXNumeric ? i - a : i,
                              y: n
                          }
                      }
                  }]), i
              }(),
              Ce = function(e) {
                  u(i, H);
                  var t = g(i);

                  function i() {
                      return o(this, i), t.apply(this, arguments)
                  }
                  return c(i, [{
                      key: "draw",
                      value: function(e, t) {
                          var i = this,
                              n = this.w,
                              a = new S(this.ctx),
                              s = new R(this.ctx);
                          this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = n.config.plotOptions.bar.horizontal;
                          var o = new T(this.ctx, n);
                          e = o.getLogSeries(e), this.series = e, this.yRatio = o.getLogYRatios(this.yRatio), this.barHelpers.initVariables(e);
                          for (var l = a.group({
                                  class: "apexcharts-".concat(n.config.chart.type, "-series apexcharts-plot-series")
                              }), c = function(o) {
                                  i.isBoxPlot = "boxPlot" === n.config.chart.type || "boxPlot" === n.config.series[o].type;
                                  var c, h, u, d, f, p, g = void 0,
                                      x = void 0,
                                      v = [],
                                      m = [],
                                      b = n.globals.comboCharts ? t[o] : o,
                                      w = a.group({
                                          class: "apexcharts-series",
                                          seriesName: y.escapeString(n.globals.seriesNames[b]),
                                          rel: o + 1,
                                          "data:realIndex": b
                                      });
                                  i.ctx.series.addCollapsedClassToSeries(w, b), e[o].length > 0 && (i.visibleI = i.visibleI + 1), i.yRatio.length > 1 && (i.yaxisIndex = b);
                                  var k = i.barHelpers.initialPositions();
                                  x = k.y, f = k.barHeight, h = k.yDivision, d = k.zeroW, g = k.x, p = k.barWidth, c = k.xDivision, u = k.zeroH, m.push(g + p / 2);
                                  for (var S = a.group({
                                          class: "apexcharts-datalabels",
                                          "data:realIndex": b
                                      }), A = function(t) {
                                          var a = i.barHelpers.getStrokeWidth(o, t, b),
                                              l = null,
                                              y = {
                                                  indexes: {
                                                      i: o,
                                                      j: t,
                                                      realIndex: b
                                                  },
                                                  x: g,
                                                  y: x,
                                                  strokeWidth: a,
                                                  elSeries: w
                                              };
                                          l = i.isHorizontal ? i.drawHorizontalBoxPaths(r(r({}, y), {}, {
                                              yDivision: h,
                                              barHeight: f,
                                              zeroW: d
                                          })) : i.drawVerticalBoxPaths(r(r({}, y), {}, {
                                              xDivision: c,
                                              barWidth: p,
                                              zeroH: u
                                          })), x = l.y, g = l.x, t > 0 && m.push(g + p / 2), v.push(x), l.pathTo.forEach((function(r, c) {
                                              var h = !i.isBoxPlot && i.candlestickOptions.wick.useFillColor ? l.color[c] : n.globals.stroke.colors[o],
                                                  u = s.fillPath({
                                                      seriesNumber: b,
                                                      dataPointIndex: t,
                                                      color: l.color[c],
                                                      value: e[o][t]
                                                  });
                                              i.renderSeries({
                                                  realIndex: b,
                                                  pathFill: u,
                                                  lineFill: h,
                                                  j: t,
                                                  i: o,
                                                  pathFrom: l.pathFrom,
                                                  pathTo: r,
                                                  strokeWidth: a,
                                                  elSeries: w,
                                                  x: g,
                                                  y: x,
                                                  series: e,
                                                  barHeight: f,
                                                  barWidth: p,
                                                  elDataLabelsWrap: S,
                                                  visibleSeries: i.visibleI,
                                                  type: n.config.chart.type
                                              })
                                          }))
                                      }, C = 0; C < n.globals.dataPoints; C++) A(C);
                                  n.globals.seriesXvalues[b] = m, n.globals.seriesYvalues[b] = v, l.add(w)
                              }, h = 0; h < e.length; h++) c(h);
                          return l
                      }
                  }, {
                      key: "drawVerticalBoxPaths",
                      value: function(e) {
                          var t = e.indexes,
                              i = e.x;
                          e.y;
                          var n = e.xDivision,
                              a = e.barWidth,
                              r = e.zeroH,
                              s = e.strokeWidth,
                              o = this.w,
                              l = new S(this.ctx),
                              c = t.i,
                              h = t.j,
                              u = !0,
                              d = o.config.plotOptions.candlestick.colors.upward,
                              f = o.config.plotOptions.candlestick.colors.downward,
                              p = "";
                          this.isBoxPlot && (p = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                          var g = this.yRatio[this.yaxisIndex],
                              x = t.realIndex,
                              v = this.getOHLCValue(x, h),
                              m = r,
                              b = r;
                          v.o > v.c && (u = !1);
                          var y = Math.min(v.o, v.c),
                              w = Math.max(v.o, v.c),
                              k = v.m;
                          o.globals.isXNumeric && (i = (o.globals.seriesX[x][h] - o.globals.minX) / this.xRatio - a / 2);
                          var A = i + a * this.visibleI;
                          void 0 === this.series[c][h] || null === this.series[c][h] ? (y = r, w = r) : (y = r - y / g, w = r - w / g, m = r - v.h / g, b = r - v.l / g, k = r - v.m / g);
                          var C = l.move(A, r),
                              T = l.move(A + a / 2, y);
                          return o.globals.previousPaths.length > 0 && (T = this.getPreviousPath(x, h, !0)), C = this.isBoxPlot ? [l.move(A, y) + l.line(A + a / 2, y) + l.line(A + a / 2, m) + l.line(A + a / 4, m) + l.line(A + a - a / 4, m) + l.line(A + a / 2, m) + l.line(A + a / 2, y) + l.line(A + a, y) + l.line(A + a, k) + l.line(A, k) + l.line(A, y + s / 2), l.move(A, k) + l.line(A + a, k) + l.line(A + a, w) + l.line(A + a / 2, w) + l.line(A + a / 2, b) + l.line(A + a - a / 4, b) + l.line(A + a / 4, b) + l.line(A + a / 2, b) + l.line(A + a / 2, w) + l.line(A, w) + l.line(A, k) + "z"] : [l.move(A, w) + l.line(A + a / 2, w) + l.line(A + a / 2, m) + l.line(A + a / 2, w) + l.line(A + a, w) + l.line(A + a, y) + l.line(A + a / 2, y) + l.line(A + a / 2, b) + l.line(A + a / 2, y) + l.line(A, y) + l.line(A, w - s / 2)], T += l.move(A, y), o.globals.isXNumeric || (i += n), {
                              pathTo: C,
                              pathFrom: T,
                              x: i,
                              y: w,
                              barXPosition: A,
                              color: this.isBoxPlot ? p : u ? [d] : [f]
                          }
                      }
                  }, {
                      key: "drawHorizontalBoxPaths",
                      value: function(e) {
                          var t = e.indexes;
                          e.x;
                          var i = e.y,
                              n = e.yDivision,
                              a = e.barHeight,
                              r = e.zeroW,
                              s = e.strokeWidth,
                              o = this.w,
                              l = new S(this.ctx),
                              c = t.i,
                              h = t.j,
                              u = this.boxOptions.colors.lower;
                          this.isBoxPlot && (u = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                          var d = this.invertedYRatio,
                              f = t.realIndex,
                              p = this.getOHLCValue(f, h),
                              g = r,
                              x = r,
                              v = Math.min(p.o, p.c),
                              m = Math.max(p.o, p.c),
                              b = p.m;
                          o.globals.isXNumeric && (i = (o.globals.seriesX[f][h] - o.globals.minX) / this.invertedXRatio - a / 2);
                          var y = i + a * this.visibleI;
                          void 0 === this.series[c][h] || null === this.series[c][h] ? (v = r, m = r) : (v = r + v / d, m = r + m / d, g = r + p.h / d, x = r + p.l / d, b = r + p.m / d);
                          var w = l.move(r, y),
                              k = l.move(v, y + a / 2);
                          return o.globals.previousPaths.length > 0 && (k = this.getPreviousPath(f, h, !0)), w = [l.move(v, y) + l.line(v, y + a / 2) + l.line(g, y + a / 2) + l.line(g, y + a / 2 - a / 4) + l.line(g, y + a / 2 + a / 4) + l.line(g, y + a / 2) + l.line(v, y + a / 2) + l.line(v, y + a) + l.line(b, y + a) + l.line(b, y) + l.line(v + s / 2, y), l.move(b, y) + l.line(b, y + a) + l.line(m, y + a) + l.line(m, y + a / 2) + l.line(x, y + a / 2) + l.line(x, y + a - a / 4) + l.line(x, y + a / 4) + l.line(x, y + a / 2) + l.line(m, y + a / 2) + l.line(m, y) + l.line(b, y) + "z"], k += l.move(v, y), o.globals.isXNumeric || (i += n), {
                              pathTo: w,
                              pathFrom: k,
                              x: m,
                              y: i,
                              barYPosition: y,
                              color: u
                          }
                      }
                  }, {
                      key: "getOHLCValue",
                      value: function(e, t) {
                          var i = this.w;
                          return {
                              o: this.isBoxPlot ? i.globals.seriesCandleH[e][t] : i.globals.seriesCandleO[e][t],
                              h: this.isBoxPlot ? i.globals.seriesCandleO[e][t] : i.globals.seriesCandleH[e][t],
                              m: i.globals.seriesCandleM[e][t],
                              l: this.isBoxPlot ? i.globals.seriesCandleC[e][t] : i.globals.seriesCandleL[e][t],
                              c: this.isBoxPlot ? i.globals.seriesCandleL[e][t] : i.globals.seriesCandleC[e][t]
                          }
                      }
                  }]), i
              }(),
              Te = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "checkColorRange",
                      value: function() {
                          var e = this.w,
                              t = !1,
                              i = e.config.plotOptions[e.config.chart.type];
                          return i.colorScale.ranges.length > 0 && i.colorScale.ranges.map((function(e, i) {
                              e.from <= 0 && (t = !0)
                          })), t
                      }
                  }, {
                      key: "getShadeColor",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = 1,
                              s = a.config.plotOptions[e].shadeIntensity,
                              o = this.determineColor(e, t, i);
                          a.globals.hasNegs || n ? r = a.config.plotOptions[e].reverseNegativeShade ? o.percent < 0 ? o.percent / 100 * (1.25 * s) : (1 - o.percent / 100) * (1.25 * s) : o.percent <= 0 ? 1 - (1 + o.percent / 100) * s : (1 - o.percent / 100) * s : (r = 1 - o.percent / 100, "treemap" === e && (r = (1 - o.percent / 100) * (1.25 * s)));
                          var l = o.color,
                              c = new y;
                          return a.config.plotOptions[e].enableShades && (l = "dark" === this.w.config.theme.mode ? y.hexToRgba(c.shadeColor(-1 * r, o.color), a.config.fill.opacity) : y.hexToRgba(c.shadeColor(r, o.color), a.config.fill.opacity)), {
                              color: l,
                              colorProps: o
                          }
                      }
                  }, {
                      key: "determineColor",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = n.globals.series[t][i],
                              r = n.config.plotOptions[e],
                              s = r.colorScale.inverse ? i : t;
                          r.distributed && "treemap" === n.config.chart.type && (s = i);
                          var o = n.globals.colors[s],
                              l = null,
                              c = Math.min.apply(Math, v(n.globals.series[t])),
                              h = Math.max.apply(Math, v(n.globals.series[t]));
                          r.distributed || "heatmap" !== e || (c = n.globals.minY, h = n.globals.maxY), void 0 !== r.colorScale.min && (c = r.colorScale.min < n.globals.minY ? r.colorScale.min : n.globals.minY, h = r.colorScale.max > n.globals.maxY ? r.colorScale.max : n.globals.maxY);
                          var u = Math.abs(h) + Math.abs(c),
                              d = 100 * a / (0 === u ? u - 1e-6 : u);
                          return r.colorScale.ranges.length > 0 && r.colorScale.ranges.map((function(e, t) {
                              if (a >= e.from && a <= e.to) {
                                  o = e.color, l = e.foreColor ? e.foreColor : null, c = e.from, h = e.to;
                                  var i = Math.abs(h) + Math.abs(c);
                                  d = 100 * a / (0 === i ? i - 1e-6 : i)
                              }
                          })), {
                              color: o,
                              foreColor: l,
                              percent: d
                          }
                      }
                  }, {
                      key: "calculateDataLabels",
                      value: function(e) {
                          var t = e.text,
                              i = e.x,
                              n = e.y,
                              a = e.i,
                              r = e.j,
                              s = e.colorProps,
                              o = e.fontSize,
                              l = this.w.config.dataLabels,
                              c = new S(this.ctx),
                              h = new F(this.ctx),
                              u = null;
                          if (l.enabled) {
                              u = c.group({
                                  class: "apexcharts-data-labels"
                              });
                              var d = l.offsetX,
                                  f = l.offsetY,
                                  p = i + d,
                                  g = n + parseFloat(l.style.fontSize) / 3 + f;
                              h.plotDataLabelsText({
                                  x: p,
                                  y: g,
                                  text: t,
                                  i: a,
                                  j: r,
                                  color: s.foreColor,
                                  parent: u,
                                  fontSize: o,
                                  dataLabelsConfig: l
                              })
                          }
                          return u
                      }
                  }, {
                      key: "addListeners",
                      value: function(e) {
                          var t = new S(this.ctx);
                          e.node.addEventListener("mouseenter", t.pathMouseEnter.bind(this, e)), e.node.addEventListener("mouseleave", t.pathMouseLeave.bind(this, e)), e.node.addEventListener("mousedown", t.pathMouseDown.bind(this, e))
                      }
                  }]), e
              }(),
              Ee = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = t, this.w = t.w, this.xRatio = i.xRatio, this.yRatio = i.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new Te(t), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = i.group({
                                  class: "apexcharts-heatmap"
                              });
                          n.attr("clip-path", "url(#gridRectMask".concat(t.globals.cuid, ")"));
                          var a = t.globals.gridWidth / t.globals.dataPoints,
                              r = t.globals.gridHeight / t.globals.series.length,
                              s = 0,
                              o = !1;
                          this.negRange = this.helpers.checkColorRange();
                          var l = e.slice();
                          t.config.yaxis[0].reversed && (o = !0, l.reverse());
                          for (var c = o ? 0 : l.length - 1; o ? c < l.length : c >= 0; o ? c++ : c--) {
                              var h = i.group({
                                  class: "apexcharts-series apexcharts-heatmap-series",
                                  seriesName: y.escapeString(t.globals.seriesNames[c]),
                                  rel: c + 1,
                                  "data:realIndex": c
                              });
                              if (this.ctx.series.addCollapsedClassToSeries(h, c), t.config.chart.dropShadow.enabled) {
                                  var u = t.config.chart.dropShadow;
                                  new k(this.ctx).dropShadow(h, u, c)
                              }
                              for (var d = 0, f = t.config.plotOptions.heatmap.shadeIntensity, p = 0; p < l[c].length; p++) {
                                  var g = this.helpers.getShadeColor(t.config.chart.type, c, p, this.negRange),
                                      x = g.color,
                                      v = g.colorProps;
                                  "image" === t.config.fill.type && (x = new R(this.ctx).fillPath({
                                      seriesNumber: c,
                                      dataPointIndex: p,
                                      opacity: t.globals.hasNegs ? v.percent < 0 ? 1 - (1 + v.percent / 100) : f + v.percent / 100 : v.percent / 100,
                                      patternID: y.randomId(),
                                      width: t.config.fill.image.width ? t.config.fill.image.width : a,
                                      height: t.config.fill.image.height ? t.config.fill.image.height : r
                                  }));
                                  var m = this.rectRadius,
                                      b = i.drawRect(d, s, a, r, m);
                                  if (b.attr({
                                          cx: d,
                                          cy: s
                                      }), b.node.classList.add("apexcharts-heatmap-rect"), h.add(b), b.attr({
                                          fill: x,
                                          i: c,
                                          index: c,
                                          j: p,
                                          val: l[c][p],
                                          "stroke-width": this.strokeWidth,
                                          stroke: t.config.plotOptions.heatmap.useFillColorAsStroke ? x : t.globals.stroke.colors[0],
                                          color: x
                                      }), this.helpers.addListeners(b), t.config.chart.animations.enabled && !t.globals.dataChanged) {
                                      var w = 1;
                                      t.globals.resized || (w = t.config.chart.animations.speed), this.animateHeatMap(b, d, s, a, r, w)
                                  }
                                  if (t.globals.dataChanged) {
                                      var A = 1;
                                      if (this.dynamicAnim.enabled && t.globals.shouldAnimate) {
                                          A = this.dynamicAnim.speed;
                                          var C = t.globals.previousPaths[c] && t.globals.previousPaths[c][p] && t.globals.previousPaths[c][p].color;
                                          C || (C = "rgba(255, 255, 255, 0)"), this.animateHeatColor(b, y.isColorHex(C) ? C : y.rgb2hex(C), y.isColorHex(x) ? x : y.rgb2hex(x), A)
                                      }
                                  }
                                  var T = (0, t.config.dataLabels.formatter)(t.globals.series[c][p], {
                                          value: t.globals.series[c][p],
                                          seriesIndex: c,
                                          dataPointIndex: p,
                                          w: t
                                      }),
                                      E = this.helpers.calculateDataLabels({
                                          text: T,
                                          x: d + a / 2,
                                          y: s + r / 2,
                                          i: c,
                                          j: p,
                                          colorProps: v,
                                          series: l
                                      });
                                  null !== E && h.add(E), d += a
                              }
                              s += r, n.add(h)
                          }
                          var L = t.globals.yAxisScale[0].result.slice();
                          t.config.yaxis[0].reversed ? L.unshift("") : L.push(""), t.globals.yAxisScale[0].result = L;
                          var P = t.globals.gridHeight / t.globals.series.length;
                          return t.config.yaxis[0].labels.offsetY = -P / 2, n
                      }
                  }, {
                      key: "animateHeatMap",
                      value: function(e, t, i, n, a, r) {
                          var s = new w(this.ctx);
                          s.animateRect(e, {
                              x: t + n / 2,
                              y: i + a / 2,
                              width: 0,
                              height: 0
                          }, {
                              x: t,
                              y: i,
                              width: n,
                              height: a
                          }, r, (function() {
                              s.animationCompleted(e)
                          }))
                      }
                  }, {
                      key: "animateHeatColor",
                      value: function(e, t, i, n) {
                          e.attr({
                              fill: t
                          }).animate(n).attr({
                              fill: i
                          })
                      }
                  }]), e
              }(),
              Le = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "drawYAxisTexts",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = a.config.yaxis[0],
                              s = a.globals.yLabelFormatters[0];
                          return new S(this.ctx).drawText({
                              x: e + r.labels.offsetX,
                              y: t + r.labels.offsetY,
                              text: s(n, i),
                              textAnchor: "middle",
                              fontSize: r.labels.style.fontSize,
                              fontFamily: r.labels.style.fontFamily,
                              foreColor: Array.isArray(r.labels.style.colors) ? r.labels.style.colors[i] : r.labels.style.colors
                          })
                      }
                  }]), e
              }(),
              Pe = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w;
                      var i = this.w;
                      this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = Math.min(i.globals.gridWidth, i.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = i.globals.gridWidth / 2, "radialBar" === i.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(i.config.plotOptions.pie.endAngle - i.config.plotOptions.pie.startAngle), this.initialAngle = i.config.plotOptions.pie.startAngle % this.fullAngle, i.globals.radialSize = this.defaultSize / 2.05 - i.config.stroke.width - (i.config.chart.sparkline.enabled ? 0 : i.config.chart.dropShadow.blur), this.donutSize = i.globals.radialSize * parseInt(i.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = []
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = new S(this.ctx);
                          if (this.ret = n.group({
                                  class: "apexcharts-pie"
                              }), i.globals.noData) return this.ret;
                          for (var a = 0, r = 0; r < e.length; r++) a += y.negToZero(e[r]);
                          var s = [],
                              o = n.group();
                          0 === a && (a = 1e-5), e.forEach((function(e) {
                              t.maxY = Math.max(t.maxY, e)
                          })), i.config.yaxis[0].max && (this.maxY = i.config.yaxis[0].max), "back" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
                          for (var l = 0; l < e.length; l++) {
                              var c = this.fullAngle * y.negToZero(e[l]) / a;
                              s.push(c), "polarArea" === this.chartType ? (s[l] = this.fullAngle / e.length, this.sliceSizes.push(i.globals.radialSize * e[l] / this.maxY)) : this.sliceSizes.push(i.globals.radialSize)
                          }
                          if (i.globals.dataChanged) {
                              for (var h, u = 0, d = 0; d < i.globals.previousPaths.length; d++) u += y.negToZero(i.globals.previousPaths[d]);
                              for (var f = 0; f < i.globals.previousPaths.length; f++) h = this.fullAngle * y.negToZero(i.globals.previousPaths[f]) / u, this.prevSectorAngleArr.push(h)
                          }
                          this.donutSize < 0 && (this.donutSize = 0);
                          var p = i.config.plotOptions.pie.customScale,
                              g = i.globals.gridWidth / 2,
                              x = i.globals.gridHeight / 2,
                              v = g - i.globals.gridWidth / 2 * p,
                              m = x - i.globals.gridHeight / 2 * p;
                          if ("donut" === this.chartType) {
                              var b = n.drawCircle(this.donutSize);
                              b.attr({
                                  cx: this.centerX,
                                  cy: this.centerY,
                                  fill: i.config.plotOptions.pie.donut.background ? i.config.plotOptions.pie.donut.background : "transparent"
                              }), o.add(b)
                          }
                          var w = this.drawArcs(s, e);
                          if (this.sliceLabels.forEach((function(e) {
                                  w.add(e)
                              })), o.attr({
                                  transform: "translate(".concat(v, ", ").concat(m, ") scale(").concat(p, ")")
                              }), o.add(w), this.ret.add(o), this.donutDataLabels.show) {
                              var k = this.renderInnerDataLabels(this.donutDataLabels, {
                                  hollowSize: this.donutSize,
                                  centerX: this.centerX,
                                  centerY: this.centerY,
                                  opacity: this.donutDataLabels.show,
                                  translateX: v,
                                  translateY: m
                              });
                              this.ret.add(k)
                          }
                          return "front" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret
                      }
                  }, {
                      key: "drawArcs",
                      value: function(e, t) {
                          var i = this.w,
                              n = new k(this.ctx),
                              a = new S(this.ctx),
                              r = new R(this.ctx),
                              s = a.group({
                                  class: "apexcharts-slices"
                              }),
                              o = this.initialAngle,
                              l = this.initialAngle,
                              c = this.initialAngle,
                              h = this.initialAngle;
                          this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;
                          for (var u = 0; u < e.length; u++) {
                              var d = a.group({
                                  class: "apexcharts-series apexcharts-pie-series",
                                  seriesName: y.escapeString(i.globals.seriesNames[u]),
                                  rel: u + 1,
                                  "data:realIndex": u
                              });
                              s.add(d), l = h, c = (o = c) + e[u], h = l + this.prevSectorAngleArr[u];
                              var f = c < o ? this.fullAngle + c - o : c - o,
                                  p = r.fillPath({
                                      seriesNumber: u,
                                      size: this.sliceSizes[u],
                                      value: t[u]
                                  }),
                                  g = this.getChangedPath(l, h),
                                  x = a.drawPath({
                                      d: g,
                                      stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[u] : this.lineColorArr,
                                      strokeWidth: 0,
                                      fill: p,
                                      fillOpacity: i.config.fill.opacity,
                                      classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(u)
                                  });
                              if (x.attr({
                                      index: 0,
                                      j: u
                                  }), n.setSelectionFilter(x, 0, u), i.config.chart.dropShadow.enabled) {
                                  var v = i.config.chart.dropShadow;
                                  n.dropShadow(x, v, u)
                              }
                              this.addListeners(x, this.donutDataLabels), S.setAttrs(x.node, {
                                  "data:angle": f,
                                  "data:startAngle": o,
                                  "data:strokeWidth": this.strokeWidth,
                                  "data:value": t[u]
                              });
                              var m = {
                                  x: 0,
                                  y: 0
                              };
                              "pie" === this.chartType || "polarArea" === this.chartType ? m = y.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize / 1.25 + i.config.plotOptions.pie.dataLabels.offset, (o + f / 2) % this.fullAngle) : "donut" === this.chartType && (m = y.polarToCartesian(this.centerX, this.centerY, (i.globals.radialSize + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, (o + f / 2) % this.fullAngle)), d.add(x);
                              var b = 0;
                              if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (b = f / this.fullAngle * i.config.chart.animations.speed) && (b = 1), this.animDur = b + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(x, {
                                      size: this.sliceSizes[u],
                                      endAngle: c,
                                      startAngle: o,
                                      prevStartAngle: l,
                                      prevEndAngle: h,
                                      animateStartingPos: !0,
                                      i: u,
                                      animBeginArr: this.animBeginArr,
                                      shouldSetPrevPaths: !0,
                                      dur: i.config.chart.animations.dynamicAnimation.speed
                                  }) : this.animatePaths(x, {
                                      size: this.sliceSizes[u],
                                      endAngle: c,
                                      startAngle: o,
                                      i: u,
                                      totalItems: e.length - 1,
                                      animBeginArr: this.animBeginArr,
                                      dur: b
                                  }), i.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && x.click(this.pieClicked.bind(this, u)), void 0 !== i.globals.selectedDataPoints[0] && i.globals.selectedDataPoints[0].indexOf(u) > -1 && this.pieClicked(u), i.config.dataLabels.enabled) {
                                  var w = m.x,
                                      A = m.y,
                                      C = 100 * f / this.fullAngle + "%";
                                  if (0 !== f && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < e[u]) {
                                      var T = i.config.dataLabels.formatter;
                                      void 0 !== T && (C = T(i.globals.seriesPercent[u][0], {
                                          seriesIndex: u,
                                          w: i
                                      }));
                                      var E = i.globals.dataLabels.style.colors[u],
                                          L = a.group({
                                              class: "apexcharts-datalabels"
                                          }),
                                          P = a.drawText({
                                              x: w,
                                              y: A,
                                              text: C,
                                              textAnchor: "middle",
                                              fontSize: i.config.dataLabels.style.fontSize,
                                              fontFamily: i.config.dataLabels.style.fontFamily,
                                              fontWeight: i.config.dataLabels.style.fontWeight,
                                              foreColor: E
                                          });
                                      if (L.add(P), i.config.dataLabels.dropShadow.enabled) {
                                          var M = i.config.dataLabels.dropShadow;
                                          n.dropShadow(P, M)
                                      }
                                      P.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (P.node.classList.add("apexcharts-pie-label-delay"), P.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(L)
                                  }
                              }
                          }
                          return s
                      }
                  }, {
                      key: "addListeners",
                      value: function(e, t) {
                          var i = new S(this.ctx);
                          e.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, e)), e.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, e)), e.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, e.node, t)), e.node.addEventListener("mousedown", i.pathMouseDown.bind(this, e)), this.donutDataLabels.total.showAlways || (e.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, e.node, t)), e.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, e.node, t)))
                      }
                  }, {
                      key: "animatePaths",
                      value: function(e, t) {
                          var i = this.w,
                              n = t.endAngle < t.startAngle ? this.fullAngle + t.endAngle - t.startAngle : t.endAngle - t.startAngle,
                              a = n,
                              r = t.startAngle,
                              s = t.startAngle;
                          void 0 !== t.prevStartAngle && void 0 !== t.prevEndAngle && (r = t.prevEndAngle, a = t.prevEndAngle < t.prevStartAngle ? this.fullAngle + t.prevEndAngle - t.prevStartAngle : t.prevEndAngle - t.prevStartAngle), t.i === i.config.series.length - 1 && (n + s > this.fullAngle ? t.endAngle = t.endAngle - (n + s) : n + s < this.fullAngle && (t.endAngle = t.endAngle + (this.fullAngle - (n + s)))), n === this.fullAngle && (n = this.fullAngle - .01), this.animateArc(e, r, s, n, a, t)
                      }
                  }, {
                      key: "animateArc",
                      value: function(e, t, i, n, a, r) {
                          var s, o = this,
                              l = this.w,
                              c = new w(this.ctx),
                              h = r.size;
                          (isNaN(t) || isNaN(a)) && (t = i, a = n, r.dur = 0);
                          var u = n,
                              d = i,
                              f = t < i ? this.fullAngle + t - i : t - i;
                          l.globals.dataChanged && r.shouldSetPrevPaths && r.prevEndAngle && (s = o.getPiePath({
                              me: o,
                              startAngle: r.prevStartAngle,
                              angle: r.prevEndAngle < r.prevStartAngle ? this.fullAngle + r.prevEndAngle - r.prevStartAngle : r.prevEndAngle - r.prevStartAngle,
                              size: h
                          }), e.attr({
                              d: s
                          })), 0 !== r.dur ? e.animate(r.dur, l.globals.easing, r.animBeginArr[r.i]).afterAll((function() {
                              "pie" !== o.chartType && "donut" !== o.chartType && "polarArea" !== o.chartType || this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({
                                  "stroke-width": o.strokeWidth
                              }), r.i === l.config.series.length - 1 && c.animationCompleted(e)
                          })).during((function(l) {
                              u = f + (n - f) * l, r.animateStartingPos && (u = a + (n - a) * l, d = t - a + (i - (t - a)) * l), s = o.getPiePath({
                                  me: o,
                                  startAngle: d,
                                  angle: u,
                                  size: h
                              }), e.node.setAttribute("data:pathOrig", s), e.attr({
                                  d: s
                              })
                          })) : (s = o.getPiePath({
                              me: o,
                              startAngle: d,
                              angle: n,
                              size: h
                          }), r.isTrack || (l.globals.animationEnded = !0), e.node.setAttribute("data:pathOrig", s), e.attr({
                              d: s,
                              "stroke-width": o.strokeWidth
                          }))
                      }
                  }, {
                      key: "pieClicked",
                      value: function(e) {
                          var t, i = this.w,
                              n = this,
                              a = n.sliceSizes[e] + (i.config.plotOptions.pie.expandOnClick ? 4 : 0),
                              r = i.globals.dom.Paper.select(".apexcharts-".concat(n.chartType.toLowerCase(), "-slice-").concat(e)).members[0];
                          if ("true" !== r.attr("data:pieClicked")) {
                              var s = i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
                              Array.prototype.forEach.call(s, (function(e) {
                                  e.setAttribute("data:pieClicked", "false");
                                  var t = e.getAttribute("data:pathOrig");
                                  e.setAttribute("d", t)
                              })), r.attr("data:pieClicked", "true");
                              var o = parseInt(r.attr("data:startAngle"), 10),
                                  l = parseInt(r.attr("data:angle"), 10);
                              t = n.getPiePath({
                                  me: n,
                                  startAngle: o,
                                  angle: l,
                                  size: a
                              }), 360 !== l && r.plot(t)
                          } else {
                              r.attr({
                                  "data:pieClicked": "false"
                              }), this.revertDataLabelsInner(r.node, this.donutDataLabels);
                              var c = r.attr("data:pathOrig");
                              r.attr({
                                  d: c
                              })
                          }
                      }
                  }, {
                      key: "getChangedPath",
                      value: function(e, t) {
                          var i = "";
                          return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
                              me: this,
                              startAngle: e,
                              angle: t - e,
                              size: this.size
                          })), i
                      }
                  }, {
                      key: "getPiePath",
                      value: function(e) {
                          var t = e.me,
                              i = e.startAngle,
                              n = e.angle,
                              a = e.size,
                              r = i,
                              s = Math.PI * (r - 90) / 180,
                              o = n + i;
                          Math.ceil(o) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (o = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(o) > this.fullAngle && (o -= this.fullAngle);
                          var l = Math.PI * (o - 90) / 180,
                              c = t.centerX + a * Math.cos(s),
                              h = t.centerY + a * Math.sin(s),
                              u = t.centerX + a * Math.cos(l),
                              d = t.centerY + a * Math.sin(l),
                              f = y.polarToCartesian(t.centerX, t.centerY, t.donutSize, o),
                              p = y.polarToCartesian(t.centerX, t.centerY, t.donutSize, r),
                              g = n > 180 ? 1 : 0,
                              x = ["M", c, h, "A", a, a, 0, g, 1, u, d];
                          return "donut" === t.chartType ? [].concat(x, ["L", f.x, f.y, "A", t.donutSize, t.donutSize, 0, g, 0, p.x, p.y, "L", c, h, "z"]).join(" ") : "pie" === t.chartType || "polarArea" === t.chartType ? [].concat(x, ["L", t.centerX, t.centerY, "L", c, h]).join(" ") : [].concat(x).join(" ")
                      }
                  }, {
                      key: "drawPolarElements",
                      value: function(e) {
                          var t = this.w,
                              i = new K(this.ctx),
                              n = new S(this.ctx),
                              a = new Le(this.ctx),
                              r = n.group(),
                              s = n.group(),
                              o = i.niceScale(0, Math.ceil(this.maxY), t.config.yaxis[0].tickAmount, 0, !0),
                              l = o.result.reverse(),
                              c = o.result.length;
                          this.maxY = o.niceMax;
                          for (var h = t.globals.radialSize, u = h / (c - 1), d = 0; d < c - 1; d++) {
                              var f = n.drawCircle(h);
                              if (f.attr({
                                      cx: this.centerX,
                                      cy: this.centerY,
                                      fill: "none",
                                      "stroke-width": t.config.plotOptions.polarArea.rings.strokeWidth,
                                      stroke: t.config.plotOptions.polarArea.rings.strokeColor
                                  }), t.config.yaxis[0].show) {
                                  var p = a.drawYAxisTexts(this.centerX, this.centerY - h + parseInt(t.config.yaxis[0].labels.style.fontSize, 10) / 2, d, l[d]);
                                  s.add(p)
                              }
                              r.add(f), h -= u
                          }
                          this.drawSpokes(e), e.add(r), e.add(s)
                      }
                  }, {
                      key: "renderInnerDataLabels",
                      value: function(e, t) {
                          var i = this.w,
                              n = new S(this.ctx),
                              a = n.group({
                                  class: "apexcharts-datalabels-group",
                                  transform: "translate(".concat(t.translateX ? t.translateX : 0, ", ").concat(t.translateY ? t.translateY : 0, ") scale(").concat(i.config.plotOptions.pie.customScale, ")")
                              }),
                              r = e.total.show;
                          a.node.style.opacity = t.opacity;
                          var s, o, l = t.centerX,
                              c = t.centerY;
                          s = void 0 === e.name.color ? i.globals.colors[0] : e.name.color;
                          var h = e.name.fontSize,
                              u = e.name.fontFamily,
                              d = e.name.fontWeight;
                          o = void 0 === e.value.color ? i.config.chart.foreColor : e.value.color;
                          var f = e.value.formatter,
                              p = "",
                              g = "";
                          if (r ? (s = e.total.color, h = e.total.fontSize, u = e.total.fontFamily, d = e.total.fontWeight, g = e.total.label, p = e.total.formatter(i)) : 1 === i.globals.series.length && (p = f(i.globals.series[0], i), g = i.globals.seriesNames[0]), g && (g = e.name.formatter(g, e.total.show, i)), e.name.show) {
                              var x = n.drawText({
                                  x: l,
                                  y: c + parseFloat(e.name.offsetY),
                                  text: g,
                                  textAnchor: "middle",
                                  foreColor: s,
                                  fontSize: h,
                                  fontWeight: d,
                                  fontFamily: u
                              });
                              x.node.classList.add("apexcharts-datalabel-label"), a.add(x)
                          }
                          if (e.value.show) {
                              var v = e.name.show ? parseFloat(e.value.offsetY) + 16 : e.value.offsetY,
                                  m = n.drawText({
                                      x: l,
                                      y: c + v,
                                      text: p,
                                      textAnchor: "middle",
                                      foreColor: o,
                                      fontWeight: e.value.fontWeight,
                                      fontSize: e.value.fontSize,
                                      fontFamily: e.value.fontFamily
                                  });
                              m.node.classList.add("apexcharts-datalabel-value"), a.add(m)
                          }
                          return a
                      }
                  }, {
                      key: "printInnerLabels",
                      value: function(e, t, i, n) {
                          var a, r = this.w;
                          n ? a = void 0 === e.name.color ? r.globals.colors[parseInt(n.parentNode.getAttribute("rel"), 10) - 1] : e.name.color : r.globals.series.length > 1 && e.total.show && (a = e.total.color);
                          var s = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
                              o = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
                          i = (0, e.value.formatter)(i, r), n || "function" != typeof e.total.formatter || (i = e.total.formatter(r));
                          var l = t === e.total.label;
                          t = e.name.formatter(t, l, r), null !== s && (s.textContent = t), null !== o && (o.textContent = i), null !== s && (s.style.fill = a)
                      }
                  }, {
                      key: "printDataLabelsInner",
                      value: function(e, t) {
                          var i = this.w,
                              n = e.getAttribute("data:value"),
                              a = i.globals.seriesNames[parseInt(e.parentNode.getAttribute("rel"), 10) - 1];
                          i.globals.series.length > 1 && this.printInnerLabels(t, a, n, e);
                          var r = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                          null !== r && (r.style.opacity = 1)
                      }
                  }, {
                      key: "drawSpokes",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = new S(this.ctx),
                              a = i.config.plotOptions.polarArea.spokes;
                          if (0 !== a.strokeWidth) {
                              for (var r = [], s = 360 / i.globals.series.length, o = 0; o < i.globals.series.length; o++) r.push(y.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize, i.config.plotOptions.pie.startAngle + s * o));
                              r.forEach((function(i, r) {
                                  var s = n.drawLine(i.x, i.y, t.centerX, t.centerY, Array.isArray(a.connectorColors) ? a.connectorColors[r] : a.connectorColors);
                                  e.add(s)
                              }))
                          }
                      }
                  }, {
                      key: "revertDataLabelsInner",
                      value: function(e, t, i) {
                          var n = this,
                              a = this.w,
                              r = a.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
                              s = !1,
                              o = a.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
                              l = function(e) {
                                  var i = e.makeSliceOut,
                                      a = e.printLabel;
                                  Array.prototype.forEach.call(o, (function(e) {
                                      "true" === e.getAttribute("data:pieClicked") && (i && (s = !0), a && n.printDataLabelsInner(e, t))
                                  }))
                              };
                          if (l({
                                  makeSliceOut: !0,
                                  printLabel: !1
                              }), t.total.show && a.globals.series.length > 1) s && !t.total.showAlways ? l({
                              makeSliceOut: !1,
                              printLabel: !0
                          }) : this.printInnerLabels(t, t.total.label, t.total.formatter(a));
                          else if (l({
                                  makeSliceOut: !1,
                                  printLabel: !0
                              }), !s)
                              if (a.globals.selectedDataPoints.length && a.globals.series.length > 1)
                                  if (a.globals.selectedDataPoints[0].length > 0) {
                                      var c = a.globals.selectedDataPoints[0],
                                          h = a.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(c));
                                      this.printDataLabelsInner(h, t)
                                  } else r && a.globals.selectedDataPoints.length && 0 === a.globals.selectedDataPoints[0].length && (r.style.opacity = 0);
                          else r && a.globals.series.length > 1 && (r.style.opacity = 0)
                      }
                  }]), e
              }(),
              Me = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
                      var i = this.w;
                      this.graphics = new S(this.ctx), this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = i.globals.svgHeight < i.globals.svgWidth ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding : i.globals.gridWidth, this.isLog = i.config.yaxis[0].logarithmic, this.coreUtils = new T(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(i.globals.maxY, 0) : i.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : i.globals.minY, this.polygons = i.config.plotOptions.radar.polygons, this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - i.config.chart.dropShadow.blur, i.config.xaxis.labels.show && (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75), void 0 !== i.config.plotOptions.radar.size && (this.size = i.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = []
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = new R(this.ctx),
                              a = [],
                              s = new F(this.ctx);
                          e.length && (this.dataPointsLen = e[i.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
                          var o = i.globals.gridWidth / 2,
                              l = i.globals.gridHeight / 2,
                              c = o + i.config.plotOptions.radar.offsetX,
                              h = l + i.config.plotOptions.radar.offsetY,
                              u = this.graphics.group({
                                  class: "apexcharts-radar-series apexcharts-plot-series",
                                  transform: "translate(".concat(c || 0, ", ").concat(h || 0, ")")
                              }),
                              d = [],
                              f = null,
                              p = null;
                          if (this.yaxisLabels = this.graphics.group({
                                  class: "apexcharts-yaxis"
                              }), e.forEach((function(e, o) {
                                  var l = e.length === i.globals.dataPoints,
                                      c = t.graphics.group().attr({
                                          class: "apexcharts-series",
                                          "data:longestSeries": l,
                                          seriesName: y.escapeString(i.globals.seriesNames[o]),
                                          rel: o + 1,
                                          "data:realIndex": o
                                      });
                                  t.dataRadiusOfPercent[o] = [], t.dataRadius[o] = [], t.angleArr[o] = [], e.forEach((function(e, i) {
                                      var n = Math.abs(t.maxValue - t.minValue);
                                      e += Math.abs(t.minValue), t.isLog && (e = t.coreUtils.getLogVal(e, 0)), t.dataRadiusOfPercent[o][i] = e / n, t.dataRadius[o][i] = t.dataRadiusOfPercent[o][i] * t.size, t.angleArr[o][i] = i * t.disAngle
                                  })), d = t.getDataPointsPos(t.dataRadius[o], t.angleArr[o]);
                                  var h = t.createPaths(d, {
                                      x: 0,
                                      y: 0
                                  });
                                  f = t.graphics.group({
                                      class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
                                  }), p = t.graphics.group({
                                      class: "apexcharts-datalabels",
                                      "data:realIndex": o
                                  }), i.globals.delayedElements.push({
                                      el: f.node,
                                      index: o
                                  });
                                  var u = {
                                          i: o,
                                          realIndex: o,
                                          animationDelay: o,
                                          initialSpeed: i.config.chart.animations.speed,
                                          dataChangeSpeed: i.config.chart.animations.dynamicAnimation.speed,
                                          className: "apexcharts-radar",
                                          shouldClipToGrid: !1,
                                          bindEventsOnPaths: !1,
                                          stroke: i.globals.stroke.colors[o],
                                          strokeLineCap: i.config.stroke.lineCap
                                      },
                                      g = null;
                                  i.globals.previousPaths.length > 0 && (g = t.getPreviousPath(o));
                                  for (var x = 0; x < h.linePathsTo.length; x++) {
                                      var v = t.graphics.renderPaths(r(r({}, u), {}, {
                                          pathFrom: null === g ? h.linePathsFrom[x] : g,
                                          pathTo: h.linePathsTo[x],
                                          strokeWidth: Array.isArray(t.strokeWidth) ? t.strokeWidth[o] : t.strokeWidth,
                                          fill: "none",
                                          drawShadow: !1
                                      }));
                                      c.add(v);
                                      var m = n.fillPath({
                                              seriesNumber: o
                                          }),
                                          b = t.graphics.renderPaths(r(r({}, u), {}, {
                                              pathFrom: null === g ? h.areaPathsFrom[x] : g,
                                              pathTo: h.areaPathsTo[x],
                                              strokeWidth: 0,
                                              fill: m,
                                              drawShadow: !1
                                          }));
                                      if (i.config.chart.dropShadow.enabled) {
                                          var w = new k(t.ctx),
                                              S = i.config.chart.dropShadow;
                                          w.dropShadow(b, Object.assign({}, S, {
                                              noUserSpaceOnUse: !0
                                          }), o)
                                      }
                                      c.add(b)
                                  }
                                  e.forEach((function(e, n) {
                                      var a = new _(t.ctx).getMarkerConfig({
                                              cssClass: "apexcharts-marker",
                                              seriesIndex: o,
                                              dataPointIndex: n
                                          }),
                                          l = t.graphics.drawMarker(d[n].x, d[n].y, a);
                                      l.attr("rel", n), l.attr("j", n), l.attr("index", o), l.node.setAttribute("default-marker-size", a.pSize);
                                      var h = t.graphics.group({
                                          class: "apexcharts-series-markers"
                                      });
                                      h && h.add(l), f.add(h), c.add(f);
                                      var u = i.config.dataLabels;
                                      if (u.enabled) {
                                          var g = u.formatter(i.globals.series[o][n], {
                                              seriesIndex: o,
                                              dataPointIndex: n,
                                              w: i
                                          });
                                          s.plotDataLabelsText({
                                              x: d[n].x,
                                              y: d[n].y,
                                              text: g,
                                              textAnchor: "middle",
                                              i: o,
                                              j: o,
                                              parent: p,
                                              offsetCorrection: !1,
                                              dataLabelsConfig: r({}, u)
                                          })
                                      }
                                      c.add(p)
                                  })), a.push(c)
                              })), this.drawPolygons({
                                  parent: u
                              }), i.config.xaxis.labels.show) {
                              var g = this.drawXAxisTexts();
                              u.add(g)
                          }
                          return a.forEach((function(e) {
                              u.add(e)
                          })), u.add(this.yaxisLabels), u
                      }
                  }, {
                      key: "drawPolygons",
                      value: function(e) {
                          for (var t = this, i = this.w, n = e.parent, a = new Le(this.ctx), r = i.globals.yAxisScale[0].result.reverse(), s = r.length, o = [], l = this.size / (s - 1), c = 0; c < s; c++) o[c] = l * c;
                          o.reverse();
                          var h = [],
                              u = [];
                          o.forEach((function(e, i) {
                              var n = y.getPolygonPos(e, t.dataPointsLen),
                                  a = "";
                              n.forEach((function(e, n) {
                                  if (0 === i) {
                                      var r = t.graphics.drawLine(e.x, e.y, 0, 0, Array.isArray(t.polygons.connectorColors) ? t.polygons.connectorColors[n] : t.polygons.connectorColors);
                                      u.push(r)
                                  }
                                  0 === n && t.yaxisLabelsTextsPos.push({
                                      x: e.x,
                                      y: e.y
                                  }), a += e.x + "," + e.y + " "
                              })), h.push(a)
                          })), h.forEach((function(e, a) {
                              var r = t.polygons.strokeColors,
                                  s = t.polygons.strokeWidth,
                                  o = t.graphics.drawPolygon(e, Array.isArray(r) ? r[a] : r, Array.isArray(s) ? s[a] : s, i.globals.radarPolygons.fill.colors[a]);
                              n.add(o)
                          })), u.forEach((function(e) {
                              n.add(e)
                          })), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach((function(e, i) {
                              var n = a.drawYAxisTexts(e.x, e.y, i, r[i]);
                              t.yaxisLabels.add(n)
                          }))
                      }
                  }, {
                      key: "drawXAxisTexts",
                      value: function() {
                          var e = this,
                              t = this.w,
                              i = t.config.xaxis.labels,
                              n = this.graphics.group({
                                  class: "apexcharts-xaxis"
                              }),
                              a = y.getPolygonPos(this.size, this.dataPointsLen);
                          return t.globals.labels.forEach((function(s, o) {
                              var l = t.config.xaxis.labels.formatter,
                                  c = new F(e.ctx);
                              if (a[o]) {
                                  var h = e.getTextPos(a[o], e.size),
                                      u = l(s, {
                                          seriesIndex: -1,
                                          dataPointIndex: o,
                                          w: t
                                      });
                                  c.plotDataLabelsText({
                                      x: h.newX,
                                      y: h.newY,
                                      text: u,
                                      textAnchor: h.textAnchor,
                                      i: o,
                                      j: o,
                                      parent: n,
                                      color: Array.isArray(i.style.colors) && i.style.colors[o] ? i.style.colors[o] : "#a8a8a8",
                                      dataLabelsConfig: r({
                                          textAnchor: h.textAnchor,
                                          dropShadow: {
                                              enabled: !1
                                          }
                                      }, i),
                                      offsetCorrection: !1
                                  })
                              }
                          })), n
                      }
                  }, {
                      key: "createPaths",
                      value: function(e, t) {
                          var i = this,
                              n = [],
                              a = [],
                              r = [],
                              s = [];
                          if (e.length) {
                              a = [this.graphics.move(t.x, t.y)], s = [this.graphics.move(t.x, t.y)];
                              var o = this.graphics.move(e[0].x, e[0].y),
                                  l = this.graphics.move(e[0].x, e[0].y);
                              e.forEach((function(t, n) {
                                  o += i.graphics.line(t.x, t.y), l += i.graphics.line(t.x, t.y), n === e.length - 1 && (o += "Z", l += "Z")
                              })), n.push(o), r.push(l)
                          }
                          return {
                              linePathsFrom: a,
                              linePathsTo: n,
                              areaPathsFrom: s,
                              areaPathsTo: r
                          }
                      }
                  }, {
                      key: "getTextPos",
                      value: function(e, t) {
                          var i = "middle",
                              n = e.x,
                              a = e.y;
                          return Math.abs(e.x) >= 10 ? e.x > 0 ? (i = "start", n += 10) : e.x < 0 && (i = "end", n -= 10) : i = "middle", Math.abs(e.y) >= t - 10 && (e.y < 0 ? a -= 10 : e.y > 0 && (a += 10)), {
                              textAnchor: i,
                              newX: n,
                              newY: a
                          }
                      }
                  }, {
                      key: "getPreviousPath",
                      value: function(e) {
                          for (var t = this.w, i = null, n = 0; n < t.globals.previousPaths.length; n++) {
                              var a = t.globals.previousPaths[n];
                              a.paths.length > 0 && parseInt(a.realIndex, 10) === parseInt(e, 10) && void 0 !== t.globals.previousPaths[n].paths[0] && (i = t.globals.previousPaths[n].paths[0].d)
                          }
                          return i
                      }
                  }, {
                      key: "getDataPointsPos",
                      value: function(e, t) {
                          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
                          e = e || [], t = t || [];
                          for (var n = [], a = 0; a < i; a++) {
                              var r = {};
                              r.x = e[a] * Math.sin(t[a]), r.y = -e[a] * Math.cos(t[a]), n.push(r)
                          }
                          return n
                      }
                  }]), e
              }(),
              Ie = function(e) {
                  u(i, Pe);
                  var t = g(i);

                  function i(e) {
                      var n;
                      o(this, i), (n = t.call(this, e)).ctx = e, n.w = e.w, n.animBeginArr = [0], n.animDur = 0;
                      var a = n.w;
                      return n.startAngle = a.config.plotOptions.radialBar.startAngle, n.endAngle = a.config.plotOptions.radialBar.endAngle, n.totalAngle = Math.abs(a.config.plotOptions.radialBar.endAngle - a.config.plotOptions.radialBar.startAngle), n.trackStartAngle = a.config.plotOptions.radialBar.track.startAngle, n.trackEndAngle = a.config.plotOptions.radialBar.track.endAngle, n.donutDataLabels = n.w.config.plotOptions.radialBar.dataLabels, n.radialDataLabels = n.donutDataLabels, n.trackStartAngle || (n.trackStartAngle = n.startAngle), n.trackEndAngle || (n.trackEndAngle = n.endAngle), 360 === n.endAngle && (n.endAngle = 359.99), n.margin = parseInt(a.config.plotOptions.radialBar.track.margin, 10), n
                  }
                  return c(i, [{
                      key: "draw",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = i.group({
                                  class: "apexcharts-radialbar"
                              });
                          if (t.globals.noData) return n;
                          var a = i.group(),
                              r = this.defaultSize / 2,
                              s = t.globals.gridWidth / 2,
                              o = this.defaultSize / 2.05;
                          t.config.chart.sparkline.enabled || (o = o - t.config.stroke.width - t.config.chart.dropShadow.blur);
                          var l = t.globals.fill.colors;
                          if (t.config.plotOptions.radialBar.track.show) {
                              var c = this.drawTracks({
                                  size: o,
                                  centerX: s,
                                  centerY: r,
                                  colorArr: l,
                                  series: e
                              });
                              a.add(c)
                          }
                          var h = this.drawArcs({
                                  size: o,
                                  centerX: s,
                                  centerY: r,
                                  colorArr: l,
                                  series: e
                              }),
                              u = 360;
                          t.config.plotOptions.radialBar.startAngle < 0 && (u = this.totalAngle);
                          var d = (360 - u) / 360;
                          if (t.globals.radialSize = o - o * d, this.radialDataLabels.value.show) {
                              var f = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
                              t.globals.radialSize += f * d
                          }
                          return a.add(h.g), "front" === t.config.plotOptions.radialBar.hollow.position && (h.g.add(h.elHollow), h.dataLabels && h.g.add(h.dataLabels)), n.add(a), n
                      }
                  }, {
                      key: "drawTracks",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = i.group({
                                  class: "apexcharts-tracks"
                              }),
                              a = new k(this.ctx),
                              r = new R(this.ctx),
                              s = this.getStrokeWidth(e);
                          e.size = e.size - s / 2;
                          for (var o = 0; o < e.series.length; o++) {
                              var l = i.group({
                                  class: "apexcharts-radialbar-track apexcharts-track"
                              });
                              n.add(l), l.attr({
                                  rel: o + 1
                              }), e.size = e.size - s - this.margin;
                              var c = t.config.plotOptions.radialBar.track,
                                  h = r.fillPath({
                                      seriesNumber: 0,
                                      size: e.size,
                                      fillColors: Array.isArray(c.background) ? c.background[o] : c.background,
                                      solid: !0
                                  }),
                                  u = this.trackStartAngle,
                                  d = this.trackEndAngle;
                              Math.abs(d) + Math.abs(u) >= 360 && (d = 360 - Math.abs(this.startAngle) - .1);
                              var f = i.drawPath({
                                  d: "",
                                  stroke: h,
                                  strokeWidth: s * parseInt(c.strokeWidth, 10) / 100,
                                  fill: "none",
                                  strokeOpacity: c.opacity,
                                  classes: "apexcharts-radialbar-area"
                              });
                              if (c.dropShadow.enabled) {
                                  var p = c.dropShadow;
                                  a.dropShadow(f, p)
                              }
                              l.add(f), f.attr("id", "apexcharts-radialbarTrack-" + o), this.animatePaths(f, {
                                  centerX: e.centerX,
                                  centerY: e.centerY,
                                  endAngle: d,
                                  startAngle: u,
                                  size: e.size,
                                  i: o,
                                  totalItems: 2,
                                  animBeginArr: 0,
                                  dur: 0,
                                  isTrack: !0,
                                  easing: t.globals.easing
                              })
                          }
                          return n
                      }
                  }, {
                      key: "drawArcs",
                      value: function(e) {
                          var t = this.w,
                              i = new S(this.ctx),
                              n = new R(this.ctx),
                              a = new k(this.ctx),
                              r = i.group(),
                              s = this.getStrokeWidth(e);
                          e.size = e.size - s / 2;
                          var o = t.config.plotOptions.radialBar.hollow.background,
                              l = e.size - s * e.series.length - this.margin * e.series.length - s * parseInt(t.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
                              c = l - t.config.plotOptions.radialBar.hollow.margin;
                          void 0 !== t.config.plotOptions.radialBar.hollow.image && (o = this.drawHollowImage(e, r, l, o));
                          var h = this.drawHollow({
                              size: c,
                              centerX: e.centerX,
                              centerY: e.centerY,
                              fill: o || "transparent"
                          });
                          if (t.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                              var u = t.config.plotOptions.radialBar.hollow.dropShadow;
                              a.dropShadow(h, u)
                          }
                          var d = 1;
                          !this.radialDataLabels.total.show && t.globals.series.length > 1 && (d = 0);
                          var f = null;
                          this.radialDataLabels.show && (f = this.renderInnerDataLabels(this.radialDataLabels, {
                              hollowSize: l,
                              centerX: e.centerX,
                              centerY: e.centerY,
                              opacity: d
                          })), "back" === t.config.plotOptions.radialBar.hollow.position && (r.add(h), f && r.add(f));
                          var p = !1;
                          t.config.plotOptions.radialBar.inverseOrder && (p = !0);
                          for (var g = p ? e.series.length - 1 : 0; p ? g >= 0 : g < e.series.length; p ? g-- : g++) {
                              var x = i.group({
                                  class: "apexcharts-series apexcharts-radial-series",
                                  seriesName: y.escapeString(t.globals.seriesNames[g])
                              });
                              r.add(x), x.attr({
                                  rel: g + 1,
                                  "data:realIndex": g
                              }), this.ctx.series.addCollapsedClassToSeries(x, g), e.size = e.size - s - this.margin;
                              var v = n.fillPath({
                                      seriesNumber: g,
                                      size: e.size,
                                      value: e.series[g]
                                  }),
                                  m = this.startAngle,
                                  b = void 0,
                                  w = y.negToZero(e.series[g] > 100 ? 100 : e.series[g]) / 100,
                                  A = Math.round(this.totalAngle * w) + this.startAngle,
                                  C = void 0;
                              t.globals.dataChanged && (b = this.startAngle, C = Math.round(this.totalAngle * y.negToZero(t.globals.previousPaths[g]) / 100) + b), Math.abs(A) + Math.abs(m) >= 360 && (A -= .01), Math.abs(C) + Math.abs(b) >= 360 && (C -= .01);
                              var T = A - m,
                                  E = Array.isArray(t.config.stroke.dashArray) ? t.config.stroke.dashArray[g] : t.config.stroke.dashArray,
                                  L = i.drawPath({
                                      d: "",
                                      stroke: v,
                                      strokeWidth: s,
                                      fill: "none",
                                      fillOpacity: t.config.fill.opacity,
                                      classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + g,
                                      strokeDashArray: E
                                  });
                              if (S.setAttrs(L.node, {
                                      "data:angle": T,
                                      "data:value": e.series[g]
                                  }), t.config.chart.dropShadow.enabled) {
                                  var P = t.config.chart.dropShadow;
                                  a.dropShadow(L, P, g)
                              }
                              a.setSelectionFilter(L, 0, g), this.addListeners(L, this.radialDataLabels), x.add(L), L.attr({
                                  index: 0,
                                  j: g
                              });
                              var M = 0;
                              !this.initialAnim || t.globals.resized || t.globals.dataChanged || (M = t.config.chart.animations.speed), t.globals.dataChanged && (M = t.config.chart.animations.dynamicAnimation.speed), this.animDur = M / (1.2 * e.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(L, {
                                  centerX: e.centerX,
                                  centerY: e.centerY,
                                  endAngle: A,
                                  startAngle: m,
                                  prevEndAngle: C,
                                  prevStartAngle: b,
                                  size: e.size,
                                  i: g,
                                  totalItems: 2,
                                  animBeginArr: this.animBeginArr,
                                  dur: M,
                                  shouldSetPrevPaths: !0,
                                  easing: t.globals.easing
                              })
                          }
                          return {
                              g: r,
                              elHollow: h,
                              dataLabels: f
                          }
                      }
                  }, {
                      key: "drawHollow",
                      value: function(e) {
                          var t = new S(this.ctx).drawCircle(2 * e.size);
                          return t.attr({
                              class: "apexcharts-radialbar-hollow",
                              cx: e.centerX,
                              cy: e.centerY,
                              r: e.size,
                              fill: e.fill
                          }), t
                      }
                  }, {
                      key: "drawHollowImage",
                      value: function(e, t, i, n) {
                          var a = this.w,
                              r = new R(this.ctx),
                              s = y.randomId(),
                              o = a.config.plotOptions.radialBar.hollow.image;
                          if (a.config.plotOptions.radialBar.hollow.imageClipped) r.clippedImgArea({
                              width: i,
                              height: i,
                              image: o,
                              patternID: "pattern".concat(a.globals.cuid).concat(s)
                          }), n = "url(#pattern".concat(a.globals.cuid).concat(s, ")");
                          else {
                              var l = a.config.plotOptions.radialBar.hollow.imageWidth,
                                  c = a.config.plotOptions.radialBar.hollow.imageHeight;
                              if (void 0 === l && void 0 === c) {
                                  var h = a.globals.dom.Paper.image(o).loaded((function(t) {
                                      this.move(e.centerX - t.width / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetX, e.centerY - t.height / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetY)
                                  }));
                                  t.add(h)
                              } else {
                                  var u = a.globals.dom.Paper.image(o).loaded((function(t) {
                                      this.move(e.centerX - l / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetX, e.centerY - c / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, c)
                                  }));
                                  t.add(u)
                              }
                          }
                          return n
                      }
                  }, {
                      key: "getStrokeWidth",
                      value: function(e) {
                          var t = this.w;
                          return e.size * (100 - parseInt(t.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (e.series.length + 1) - this.margin
                      }
                  }]), i
              }(),
              Re = function() {
                  function e(t) {
                      o(this, e), this.w = t.w, this.lineCtx = t
                  }
                  return c(e, [{
                      key: "sameValueSeriesFix",
                      value: function(e, t) {
                          var i = this.w;
                          if ("line" === i.config.chart.type && ("gradient" === i.config.fill.type || "gradient" === i.config.fill.type[e]) && new T(this.lineCtx.ctx, i).seriesHaveSameValues(e)) {
                              var n = t[e].slice();
                              n[n.length - 1] = n[n.length - 1] + 1e-6, t[e] = n
                          }
                          return t
                      }
                  }, {
                      key: "calculatePoints",
                      value: function(e) {
                          var t = e.series,
                              i = e.realIndex,
                              n = e.x,
                              a = e.y,
                              r = e.i,
                              s = e.j,
                              o = e.prevY,
                              l = this.w,
                              c = [],
                              h = [];
                          if (0 === s) {
                              var u = this.lineCtx.categoryAxisCorrection + l.config.markers.offsetX;
                              l.globals.isXNumeric && (u = (l.globals.seriesX[i][0] - l.globals.minX) / this.lineCtx.xRatio + l.config.markers.offsetX), c.push(u), h.push(y.isNumber(t[r][0]) ? o + l.config.markers.offsetY : null), c.push(n + l.config.markers.offsetX), h.push(y.isNumber(t[r][s + 1]) ? a + l.config.markers.offsetY : null)
                          } else c.push(n + l.config.markers.offsetX), h.push(y.isNumber(t[r][s + 1]) ? a + l.config.markers.offsetY : null);
                          return {
                              x: c,
                              y: h
                          }
                      }
                  }, {
                      key: "checkPreviousPaths",
                      value: function(e) {
                          for (var t = e.pathFromLine, i = e.pathFromArea, n = e.realIndex, a = this.w, r = 0; r < a.globals.previousPaths.length; r++) {
                              var s = a.globals.previousPaths[r];
                              ("line" === s.type || "area" === s.type) && s.paths.length > 0 && parseInt(s.realIndex, 10) === parseInt(n, 10) && ("line" === s.type ? (this.lineCtx.appendPathFrom = !1, t = a.globals.previousPaths[r].paths[0].d) : "area" === s.type && (this.lineCtx.appendPathFrom = !1, i = a.globals.previousPaths[r].paths[0].d, a.config.stroke.show && a.globals.previousPaths[r].paths[1] && (t = a.globals.previousPaths[r].paths[1].d)))
                          }
                          return {
                              pathFromLine: t,
                              pathFromArea: i
                          }
                      }
                  }, {
                      key: "determineFirstPrevY",
                      value: function(e) {
                          var t = e.i,
                              i = e.series,
                              n = e.prevY,
                              a = e.lineYPosition,
                              r = this.w;
                          if (void 0 !== i[t][0]) n = (a = r.config.chart.stacked && t > 0 ? this.lineCtx.prevSeriesY[t - 1][0] : this.lineCtx.zeroY) - i[t][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? i[t][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);
                          else if (r.config.chart.stacked && t > 0 && void 0 === i[t][0])
                              for (var s = t - 1; s >= 0; s--)
                                  if (null !== i[s][0] && void 0 !== i[s][0]) {
                                      n = a = this.lineCtx.prevSeriesY[s][0];
                                      break
                                  } return {
                              prevY: n,
                              lineYPosition: a
                          }
                      }
                  }]), e
              }(),
              _e = function() {
                  function e(t, i, n) {
                      o(this, e), this.ctx = t, this.w = t.w, this.xyRatios = i, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || n, this.scatter = new O(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Re(this), this.markers = new _(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = new S(this.ctx),
                              r = n.globals.comboCharts ? t : n.config.chart.type,
                              s = a.group({
                                  class: "apexcharts-".concat(r, "-series apexcharts-plot-series")
                              }),
                              o = new T(this.ctx, n);
                          this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, e = o.getLogSeries(e), this.yRatio = o.getLogYRatios(this.yRatio);
                          for (var l = [], c = 0; c < e.length; c++) {
                              e = this.lineHelpers.sameValueSeriesFix(c, e);
                              var h = n.globals.comboCharts ? i[c] : c;
                              this._initSerieVariables(e, c, h);
                              var u = [],
                                  d = [],
                                  f = n.globals.padHorizontal + this.categoryAxisCorrection;
                              this.ctx.series.addCollapsedClassToSeries(this.elSeries, h), n.globals.isXNumeric && n.globals.seriesX.length > 0 && (f = (n.globals.seriesX[h][0] - n.globals.minX) / this.xRatio), d.push(f);
                              var p, g = f,
                                  x = g,
                                  v = this.zeroY;
                              v = this.lineHelpers.determineFirstPrevY({
                                  i: c,
                                  series: e,
                                  prevY: v,
                                  lineYPosition: 0
                              }).prevY, u.push(v), p = v;
                              var m = this._calculatePathsFrom({
                                      series: e,
                                      i: c,
                                      realIndex: h,
                                      prevX: x,
                                      prevY: v
                                  }),
                                  b = this._iterateOverDataPoints({
                                      series: e,
                                      realIndex: h,
                                      i: c,
                                      x: f,
                                      y: 1,
                                      pX: g,
                                      pY: p,
                                      pathsFrom: m,
                                      linePaths: [],
                                      areaPaths: [],
                                      seriesIndex: i,
                                      lineYPosition: 0,
                                      xArrj: d,
                                      yArrj: u
                                  });
                              this._handlePaths({
                                  type: r,
                                  realIndex: h,
                                  i: c,
                                  paths: b
                              }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), l.push(this.elSeries)
                          }
                          if (n.config.chart.stacked)
                              for (var y = l.length; y > 0; y--) s.add(l[y - 1]);
                          else
                              for (var w = 0; w < l.length; w++) s.add(l[w]);
                          return s
                      }
                  }, {
                      key: "_initSerieVariables",
                      value: function(e, t, i) {
                          var n = this.w,
                              a = new S(this.ctx);
                          this.xDivision = n.globals.gridWidth / (n.globals.dataPoints - ("on" === n.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(n.config.stroke.width) ? n.config.stroke.width[i] : n.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = i), this.isReversed = n.config.yaxis[this.yaxisIndex] && n.config.yaxis[this.yaxisIndex].reversed, this.zeroY = n.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? n.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > n.globals.gridHeight || "end" === n.config.plotOptions.area.fillTo) && (this.areaBottomY = n.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = a.group({
                              class: "apexcharts-series",
                              seriesName: y.escapeString(n.globals.seriesNames[i])
                          }), this.elPointsMain = a.group({
                              class: "apexcharts-series-markers-wrap",
                              "data:realIndex": i
                          }), this.elDataLabelsWrap = a.group({
                              class: "apexcharts-datalabels",
                              "data:realIndex": i
                          });
                          var r = e[t].length === n.globals.dataPoints;
                          this.elSeries.attr({
                              "data:longestSeries": r,
                              rel: t + 1,
                              "data:realIndex": i
                          }), this.appendPathFrom = !0
                      }
                  }, {
                      key: "_calculatePathsFrom",
                      value: function(e) {
                          var t, i, n, a, r = e.series,
                              s = e.i,
                              o = e.realIndex,
                              l = e.prevX,
                              c = e.prevY,
                              h = this.w,
                              u = new S(this.ctx);
                          if (null === r[s][0]) {
                              for (var d = 0; d < r[s].length; d++)
                                  if (null !== r[s][d]) {
                                      l = this.xDivision * d, c = this.zeroY - r[s][d] / this.yRatio[this.yaxisIndex], t = u.move(l, c), i = u.move(l, this.areaBottomY);
                                      break
                                  }
                          } else t = u.move(l, c), i = u.move(l, this.areaBottomY) + u.line(l, c);
                          if (n = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), a = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), h.globals.previousPaths.length > 0) {
                              var f = this.lineHelpers.checkPreviousPaths({
                                  pathFromLine: n,
                                  pathFromArea: a,
                                  realIndex: o
                              });
                              n = f.pathFromLine, a = f.pathFromArea
                          }
                          return {
                              prevX: l,
                              prevY: c,
                              linePath: t,
                              areaPath: i,
                              pathFromLine: n,
                              pathFromArea: a
                          }
                      }
                  }, {
                      key: "_handlePaths",
                      value: function(e) {
                          var t = e.type,
                              i = e.realIndex,
                              n = e.i,
                              a = e.paths,
                              s = this.w,
                              o = new S(this.ctx),
                              l = new R(this.ctx);
                          this.prevSeriesY.push(a.yArrj), s.globals.seriesXvalues[i] = a.xArrj, s.globals.seriesYvalues[i] = a.yArrj;
                          var c = s.config.forecastDataPoints;
                          if (c.count > 0) {
                              var h = s.globals.seriesXvalues[i][s.globals.seriesXvalues[i].length - c.count - 1],
                                  u = o.drawRect(h, 0, s.globals.gridWidth, s.globals.gridHeight, 0);
                              s.globals.dom.elForecastMask.appendChild(u.node);
                              var d = o.drawRect(0, 0, h, s.globals.gridHeight, 0);
                              s.globals.dom.elNonForecastMask.appendChild(d.node)
                          }
                          this.pointsChart || s.globals.delayedElements.push({
                              el: this.elPointsMain.node,
                              index: i
                          });
                          var f = {
                              i: n,
                              realIndex: i,
                              animationDelay: n,
                              initialSpeed: s.config.chart.animations.speed,
                              dataChangeSpeed: s.config.chart.animations.dynamicAnimation.speed,
                              className: "apexcharts-".concat(t)
                          };
                          if ("area" === t)
                              for (var p = l.fillPath({
                                      seriesNumber: i
                                  }), g = 0; g < a.areaPaths.length; g++) {
                                  var x = o.renderPaths(r(r({}, f), {}, {
                                      pathFrom: a.pathFromArea,
                                      pathTo: a.areaPaths[g],
                                      stroke: "none",
                                      strokeWidth: 0,
                                      strokeLineCap: null,
                                      fill: p
                                  }));
                                  this.elSeries.add(x)
                              }
                          if (s.config.stroke.show && !this.pointsChart) {
                              var v = null;
                              v = "line" === t ? l.fillPath({
                                  seriesNumber: i,
                                  i: n
                              }) : s.globals.stroke.colors[i];
                              for (var m = 0; m < a.linePaths.length; m++) {
                                  var b = r(r({}, f), {}, {
                                          pathFrom: a.pathFromLine,
                                          pathTo: a.linePaths[m],
                                          stroke: v,
                                          strokeWidth: this.strokeWidth,
                                          strokeLineCap: s.config.stroke.lineCap,
                                          fill: "none"
                                      }),
                                      y = o.renderPaths(b);
                                  if (this.elSeries.add(y), c.count > 0) {
                                      var w = o.renderPaths(b);
                                      w.node.setAttribute("stroke-dasharray", c.dashArray), c.strokeWidth && w.node.setAttribute("stroke-width", c.strokeWidth), this.elSeries.add(w), w.attr("clip-path", "url(#forecastMask".concat(s.globals.cuid, ")")), y.attr("clip-path", "url(#nonForecastMask".concat(s.globals.cuid, ")"))
                                  }
                              }
                          }
                      }
                  }, {
                      key: "_iterateOverDataPoints",
                      value: function(e) {
                          for (var t = e.series, i = e.realIndex, n = e.i, a = e.x, r = e.y, s = e.pX, o = e.pY, l = e.pathsFrom, c = e.linePaths, h = e.areaPaths, u = e.seriesIndex, d = e.lineYPosition, f = e.xArrj, p = e.yArrj, g = this.w, x = new S(this.ctx), v = this.yRatio, m = l.prevY, b = l.linePath, w = l.areaPath, k = l.pathFromLine, A = l.pathFromArea, C = y.isNumber(g.globals.minYArr[i]) ? g.globals.minYArr[i] : g.globals.minY, T = g.globals.dataPoints > 1 ? g.globals.dataPoints - 1 : g.globals.dataPoints, E = 0; E < T; E++) {
                              var L = void 0 === t[n][E + 1] || null === t[n][E + 1];
                              if (g.globals.isXNumeric) {
                                  var P = g.globals.seriesX[i][E + 1];
                                  void 0 === g.globals.seriesX[i][E + 1] && (P = g.globals.seriesX[i][T - 1]), a = (P - g.globals.minX) / this.xRatio
                              } else a += this.xDivision;
                              d = g.config.chart.stacked && n > 0 && g.globals.collapsedSeries.length < g.config.series.length - 1 ? this.prevSeriesY[function(e) {
                                  for (var t = e, i = 0; i < g.globals.series.length; i++)
                                      if (g.globals.collapsedSeriesIndices.indexOf(e) > -1) {
                                          t--;
                                          break
                                      } return t >= 0 ? t : 0
                              }(n - 1)][E + 1] : this.zeroY, r = L ? d - C / v[this.yaxisIndex] + 2 * (this.isReversed ? C / v[this.yaxisIndex] : 0) : d - t[n][E + 1] / v[this.yaxisIndex] + 2 * (this.isReversed ? t[n][E + 1] / v[this.yaxisIndex] : 0), f.push(a), p.push(r);
                              var M = this.lineHelpers.calculatePoints({
                                      series: t,
                                      x: a,
                                      y: r,
                                      realIndex: i,
                                      i: n,
                                      j: E,
                                      prevY: m
                                  }),
                                  I = this._createPaths({
                                      series: t,
                                      i: n,
                                      realIndex: i,
                                      j: E,
                                      x: a,
                                      y: r,
                                      pX: s,
                                      pY: o,
                                      linePath: b,
                                      areaPath: w,
                                      linePaths: c,
                                      areaPaths: h,
                                      seriesIndex: u
                                  });
                              h = I.areaPaths, c = I.linePaths, s = I.pX, o = I.pY, w = I.areaPath, b = I.linePath, this.appendPathFrom && (k += x.line(a, this.zeroY), A += x.line(a, this.zeroY)), this.handleNullDataPoints(t, M, n, E, i), this._handleMarkersAndLabels({
                                  pointsPos: M,
                                  series: t,
                                  x: a,
                                  y: r,
                                  prevY: m,
                                  i: n,
                                  j: E,
                                  realIndex: i
                              })
                          }
                          return {
                              yArrj: p,
                              xArrj: f,
                              pathFromArea: A,
                              areaPaths: h,
                              pathFromLine: k,
                              linePaths: c
                          }
                      }
                  }, {
                      key: "_handleMarkersAndLabels",
                      value: function(e) {
                          var t = e.pointsPos;
                          e.series, e.x, e.y, e.prevY;
                          var i = e.i,
                              n = e.j,
                              a = e.realIndex,
                              r = this.w,
                              s = new F(this.ctx);
                          if (this.pointsChart) this.scatter.draw(this.elSeries, n, {
                              realIndex: a,
                              pointsPos: t,
                              zRatio: this.zRatio,
                              elParent: this.elPointsMain
                          });
                          else {
                              r.globals.series[i].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
                              var o = this.markers.plotChartMarkers(t, a, n + 1);
                              null !== o && this.elPointsMain.add(o)
                          }
                          var l = s.drawDataLabel(t, a, n + 1, null);
                          null !== l && this.elDataLabelsWrap.add(l)
                      }
                  }, {
                      key: "_createPaths",
                      value: function(e) {
                          var t = e.series,
                              i = e.i,
                              n = e.realIndex,
                              a = e.j,
                              r = e.x,
                              s = e.y,
                              o = e.pX,
                              l = e.pY,
                              c = e.linePath,
                              h = e.areaPath,
                              u = e.linePaths,
                              d = e.areaPaths,
                              f = e.seriesIndex,
                              p = this.w,
                              g = new S(this.ctx),
                              x = p.config.stroke.curve,
                              v = this.areaBottomY;
                          if (Array.isArray(p.config.stroke.curve) && (x = Array.isArray(f) ? p.config.stroke.curve[f[i]] : p.config.stroke.curve[i]), "smooth" === x) {
                              var m = .35 * (r - o);
                              p.globals.hasNullValues ? (null !== t[i][a] && (null !== t[i][a + 1] ? (c = g.move(o, l) + g.curve(o + m, l, r - m, s, r + 1, s), h = g.move(o + 1, l) + g.curve(o + m, l, r - m, s, r + 1, s) + g.line(r, v) + g.line(o, v) + "z") : (c = g.move(o, l), h = g.move(o, l) + "z")), u.push(c), d.push(h)) : (c += g.curve(o + m, l, r - m, s, r, s), h += g.curve(o + m, l, r - m, s, r, s)), o = r, l = s, a === t[i].length - 2 && (h = h + g.curve(o, l, r, s, r, v) + g.move(r, s) + "z", p.globals.hasNullValues || (u.push(c), d.push(h)))
                          } else {
                              if (null === t[i][a + 1]) {
                                  c += g.move(r, s);
                                  var b = p.globals.isXNumeric ? (p.globals.seriesX[n][a] - p.globals.minX) / this.xRatio : r - this.xDivision;
                                  h = h + g.line(b, v) + g.move(r, s) + "z"
                              }
                              null === t[i][a] && (c += g.move(r, s), h += g.move(r, v)), "stepline" === x ? (c = c + g.line(r, null, "H") + g.line(null, s, "V"), h = h + g.line(r, null, "H") + g.line(null, s, "V")) : "straight" === x && (c += g.line(r, s), h += g.line(r, s)), a === t[i].length - 2 && (h = h + g.line(r, v) + g.move(r, s) + "z", u.push(c), d.push(h))
                          }
                          return {
                              linePaths: u,
                              areaPaths: d,
                              pX: o,
                              pY: l,
                              linePath: c,
                              areaPath: h
                          }
                      }
                  }, {
                      key: "handleNullDataPoints",
                      value: function(e, t, i, n, a) {
                          var r = this.w;
                          if (null === e[i][n] && r.config.markers.showNullDataPoints || 1 === e[i].length) {
                              var s = this.markers.plotChartMarkers(t, a, n + 1, this.strokeWidth - r.config.markers.strokeWidth / 2, !0);
                              null !== s && this.elPointsMain.add(s)
                          }
                      }
                  }]), e
              }();
          window.TreemapSquared = {}, window.TreemapSquared.generate = function() {
              function e(t, i, n, a) {
                  this.xoffset = t, this.yoffset = i, this.height = a, this.width = n, this.shortestEdge = function() {
                      return Math.min(this.height, this.width)
                  }, this.getCoordinates = function(e) {
                      var t, i = [],
                          n = this.xoffset,
                          a = this.yoffset,
                          s = r(e) / this.height,
                          o = r(e) / this.width;
                      if (this.width >= this.height)
                          for (t = 0; t < e.length; t++) i.push([n, a, n + s, a + e[t] / s]), a += e[t] / s;
                      else
                          for (t = 0; t < e.length; t++) i.push([n, a, n + e[t] / o, a + o]), n += e[t] / o;
                      return i
                  }, this.cutArea = function(t) {
                      var i;
                      if (this.width >= this.height) {
                          var n = t / this.height,
                              a = this.width - n;
                          i = new e(this.xoffset + n, this.yoffset, a, this.height)
                      } else {
                          var r = t / this.width,
                              s = this.height - r;
                          i = new e(this.xoffset, this.yoffset + r, this.width, s)
                      }
                      return i
                  }
              }

              function t(t, n, a, s, o) {
                  return s = void 0 === s ? 0 : s, o = void 0 === o ? 0 : o,
                      function(e) {
                          var t, i, n = [];
                          for (t = 0; t < e.length; t++)
                              for (i = 0; i < e[t].length; i++) n.push(e[t][i]);
                          return n
                      }(i(function(e, t) {
                          var i, n = [],
                              a = t / r(e);
                          for (i = 0; i < e.length; i++) n[i] = e[i] * a;
                          return n
                      }(t, n * a), [], new e(s, o, n, a), []))
              }

              function i(e, t, a, s) {
                  var o, l, c;
                  if (0 !== e.length) return o = a.shortestEdge(),
                      function(e, t, i) {
                          var a;
                          if (0 === e.length) return !0;
                          (a = e.slice()).push(t);
                          var r = n(e, i),
                              s = n(a, i);
                          return r >= s
                      }(t, l = e[0], o) ? (t.push(l), i(e.slice(1), t, a, s)) : (c = a.cutArea(r(t), s), s.push(a.getCoordinates(t)), i(e, [], c, s)), s;
                  s.push(a.getCoordinates(t))
              }

              function n(e, t) {
                  var i = Math.min.apply(Math, e),
                      n = Math.max.apply(Math, e),
                      a = r(e);
                  return Math.max(Math.pow(t, 2) * n / Math.pow(a, 2), Math.pow(a, 2) / (Math.pow(t, 2) * i))
              }

              function a(e) {
                  return e && e.constructor === Array
              }

              function r(e) {
                  var t, i = 0;
                  for (t = 0; t < e.length; t++) i += e[t];
                  return i
              }

              function s(e) {
                  var t, i = 0;
                  if (a(e[0]))
                      for (t = 0; t < e.length; t++) i += s(e[t]);
                  else i = r(e);
                  return i
              }
              return function e(i, n, r, o, l) {
                  o = void 0 === o ? 0 : o, l = void 0 === l ? 0 : l;
                  var c, h, u = [],
                      d = [];
                  if (a(i[0])) {
                      for (h = 0; h < i.length; h++) u[h] = s(i[h]);
                      for (c = t(u, n, r, o, l), h = 0; h < i.length; h++) d.push(e(i[h], c[h][2] - c[h][0], c[h][3] - c[h][1], c[h][0], c[h][1]))
                  } else d = t(i, n, r, o, l);
                  return d
              }
          }();
          var Oe, Fe, Ne = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = t, this.w = t.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new Te(t), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = []
                  }
                  return c(e, [{
                      key: "draw",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = new S(this.ctx),
                              a = new R(this.ctx),
                              r = n.group({
                                  class: "apexcharts-treemap"
                              });
                          if (i.globals.noData) return r;
                          var s = [];
                          return e.forEach((function(e) {
                              var t = e.map((function(e) {
                                  return Math.abs(e)
                              }));
                              s.push(t)
                          })), this.negRange = this.helpers.checkColorRange(), i.config.series.forEach((function(e, i) {
                              e.data.forEach((function(e) {
                                  Array.isArray(t.labels[i]) || (t.labels[i] = []), t.labels[i].push(e.x)
                              }))
                          })), window.TreemapSquared.generate(s, i.globals.gridWidth, i.globals.gridHeight).forEach((function(s, o) {
                              var l = n.group({
                                  class: "apexcharts-series apexcharts-treemap-series",
                                  seriesName: y.escapeString(i.globals.seriesNames[o]),
                                  rel: o + 1,
                                  "data:realIndex": o
                              });
                              if (i.config.chart.dropShadow.enabled) {
                                  var c = i.config.chart.dropShadow;
                                  new k(t.ctx).dropShadow(r, c, o)
                              }
                              var h = n.group({
                                  class: "apexcharts-data-labels"
                              });
                              s.forEach((function(r, s) {
                                  var c = r[0],
                                      h = r[1],
                                      u = r[2],
                                      d = r[3],
                                      f = n.drawRect(c, h, u - c, d - h, 0, "#fff", 1, t.strokeWidth, i.config.plotOptions.treemap.useFillColorAsStroke ? g : i.globals.stroke.colors[o]);
                                  f.attr({
                                      cx: c,
                                      cy: h,
                                      index: o,
                                      i: o,
                                      j: s,
                                      width: u - c,
                                      height: d - h
                                  });
                                  var p = t.helpers.getShadeColor(i.config.chart.type, o, s, t.negRange),
                                      g = p.color;
                                  void 0 !== i.config.series[o].data[s] && i.config.series[o].data[s].fillColor && (g = i.config.series[o].data[s].fillColor);
                                  var x = a.fillPath({
                                      color: g,
                                      seriesNumber: o,
                                      dataPointIndex: s
                                  });
                                  f.node.classList.add("apexcharts-treemap-rect"), f.attr({
                                      fill: x
                                  }), t.helpers.addListeners(f);
                                  var v = {
                                          x: c + (u - c) / 2,
                                          y: h + (d - h) / 2,
                                          width: 0,
                                          height: 0
                                      },
                                      m = {
                                          x: c,
                                          y: h,
                                          width: u - c,
                                          height: d - h
                                      };
                                  if (i.config.chart.animations.enabled && !i.globals.dataChanged) {
                                      var b = 1;
                                      i.globals.resized || (b = i.config.chart.animations.speed), t.animateTreemap(f, v, m, b)
                                  }
                                  if (i.globals.dataChanged) {
                                      var y = 1;
                                      t.dynamicAnim.enabled && i.globals.shouldAnimate && (y = t.dynamicAnim.speed, i.globals.previousPaths[o] && i.globals.previousPaths[o][s] && i.globals.previousPaths[o][s].rect && (v = i.globals.previousPaths[o][s].rect), t.animateTreemap(f, v, m, y))
                                  }
                                  var w = t.getFontSize(r),
                                      k = i.config.dataLabels.formatter(t.labels[o][s], {
                                          value: i.globals.series[o][s],
                                          seriesIndex: o,
                                          dataPointIndex: s,
                                          w: i
                                      }),
                                      S = t.helpers.calculateDataLabels({
                                          text: k,
                                          x: (c + u) / 2,
                                          y: (h + d) / 2 + t.strokeWidth / 2 + w / 3,
                                          i: o,
                                          j: s,
                                          colorProps: p,
                                          fontSize: w,
                                          series: e
                                      });
                                  i.config.dataLabels.enabled && S && t.rotateToFitLabel(S, k, c, h, u, d), l.add(f), null !== S && l.add(S)
                              })), l.add(h), r.add(l)
                          })), r
                      }
                  }, {
                      key: "getFontSize",
                      value: function(e) {
                          var t, i, n, a, r = this.w,
                              s = function e(t) {
                                  var i, n = 0;
                                  if (Array.isArray(t[0]))
                                      for (i = 0; i < t.length; i++) n += e(t[i]);
                                  else
                                      for (i = 0; i < t.length; i++) n += t[i].length;
                                  return n
                              }(this.labels) / function e(t) {
                                  var i, n = 0;
                                  if (Array.isArray(t[0]))
                                      for (i = 0; i < t.length; i++) n += e(t[i]);
                                  else
                                      for (i = 0; i < t.length; i++) n += 1;
                                  return n
                              }(this.labels);
                          return t = e[2] - e[0], i = e[3] - e[1], n = t * i, a = Math.pow(n, .5), Math.min(a / s, parseInt(r.config.dataLabels.style.fontSize, 10))
                      }
                  }, {
                      key: "rotateToFitLabel",
                      value: function(e, t, i, n, a, r) {
                          var s = new S(this.ctx),
                              o = s.getTextRects(t);
                          if (o.width + 5 > a - i && o.width <= r - n) {
                              var l = s.rotateAroundCenter(e.node);
                              e.node.setAttribute("transform", "rotate(-90 ".concat(l.x, " ").concat(l.y, ")"))
                          }
                      }
                  }, {
                      key: "animateTreemap",
                      value: function(e, t, i, n) {
                          var a = new w(this.ctx);
                          a.animateRect(e, {
                              x: t.x,
                              y: t.y,
                              width: t.width,
                              height: t.height
                          }, {
                              x: i.x,
                              y: i.y,
                              width: i.width,
                              height: i.height
                          }, n, (function() {
                              a.animationCompleted(e)
                          }))
                      }
                  }]), e
              }(),
              ze = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC
                  }
                  return c(e, [{
                      key: "calculateTimeScaleTicks",
                      value: function(e, t) {
                          var i = this,
                              n = this.w;
                          if (n.globals.allSeriesCollapsed) return n.globals.labels = [], n.globals.timescaleLabels = [], [];
                          var a = new X(this.ctx),
                              s = (t - e) / 864e5;
                          this.determineInterval(s), n.globals.disableZoomIn = !1, n.globals.disableZoomOut = !1, s < .00011574074074074075 ? n.globals.disableZoomIn = !0 : s > 5e4 && (n.globals.disableZoomOut = !0);
                          var o = a.getTimeUnitsfromTimestamp(e, t, this.utc),
                              l = n.globals.gridWidth / s,
                              c = l / 24,
                              h = c / 60,
                              u = h / 60,
                              d = Math.floor(24 * s),
                              f = Math.floor(1440 * s),
                              p = Math.floor(86400 * s),
                              g = Math.floor(s),
                              x = Math.floor(s / 30),
                              v = Math.floor(s / 365),
                              m = {
                                  minMillisecond: o.minMillisecond,
                                  minSecond: o.minSecond,
                                  minMinute: o.minMinute,
                                  minHour: o.minHour,
                                  minDate: o.minDate,
                                  minMonth: o.minMonth,
                                  minYear: o.minYear
                              },
                              b = {
                                  firstVal: m,
                                  currentMillisecond: m.minMillisecond,
                                  currentSecond: m.minSecond,
                                  currentMinute: m.minMinute,
                                  currentHour: m.minHour,
                                  currentMonthDate: m.minDate,
                                  currentDate: m.minDate,
                                  currentMonth: m.minMonth,
                                  currentYear: m.minYear,
                                  daysWidthOnXAxis: l,
                                  hoursWidthOnXAxis: c,
                                  minutesWidthOnXAxis: h,
                                  secondsWidthOnXAxis: u,
                                  numberOfSeconds: p,
                                  numberOfMinutes: f,
                                  numberOfHours: d,
                                  numberOfDays: g,
                                  numberOfMonths: x,
                                  numberOfYears: v
                              };
                          switch (this.tickInterval) {
                              case "years":
                                  this.generateYearScale(b);
                                  break;
                              case "months":
                              case "half_year":
                                  this.generateMonthScale(b);
                                  break;
                              case "months_days":
                              case "months_fortnight":
                              case "days":
                              case "week_days":
                                  this.generateDayScale(b);
                                  break;
                              case "hours":
                                  this.generateHourScale(b);
                                  break;
                              case "minutes_fives":
                              case "minutes":
                                  this.generateMinuteScale(b);
                                  break;
                              case "seconds_tens":
                              case "seconds_fives":
                              case "seconds":
                                  this.generateSecondScale(b)
                          }
                          var y = this.timeScaleArray.map((function(e) {
                              var t = {
                                  position: e.position,
                                  unit: e.unit,
                                  year: e.year,
                                  day: e.day ? e.day : 1,
                                  hour: e.hour ? e.hour : 0,
                                  month: e.month + 1
                              };
                              return "month" === e.unit ? r(r({}, t), {}, {
                                  day: 1,
                                  value: e.value + 1
                              }) : "day" === e.unit || "hour" === e.unit ? r(r({}, t), {}, {
                                  value: e.value
                              }) : "minute" === e.unit ? r(r({}, t), {}, {
                                  value: e.value,
                                  minute: e.value
                              }) : "second" === e.unit ? r(r({}, t), {}, {
                                  value: e.value,
                                  minute: e.minute,
                                  second: e.second
                              }) : e
                          }));
                          return y.filter((function(e) {
                              var t = 1,
                                  a = Math.ceil(n.globals.gridWidth / 120),
                                  r = e.value;
                              void 0 !== n.config.xaxis.tickAmount && (a = n.config.xaxis.tickAmount), y.length > a && (t = Math.floor(y.length / a));
                              var s = !1,
                                  o = !1;
                              switch (i.tickInterval) {
                                  case "years":
                                      "year" === e.unit && (s = !0);
                                      break;
                                  case "half_year":
                                      t = 7, "year" === e.unit && (s = !0);
                                      break;
                                  case "months":
                                      t = 1, "year" === e.unit && (s = !0);
                                      break;
                                  case "months_fortnight":
                                      t = 15, "year" !== e.unit && "month" !== e.unit || (s = !0), 30 === r && (o = !0);
                                      break;
                                  case "months_days":
                                      t = 10, "month" === e.unit && (s = !0), 30 === r && (o = !0);
                                      break;
                                  case "week_days":
                                      t = 8, "month" === e.unit && (s = !0);
                                      break;
                                  case "days":
                                      t = 1, "month" === e.unit && (s = !0);
                                      break;
                                  case "hours":
                                      "day" === e.unit && (s = !0);
                                      break;
                                  case "minutes_fives":
                                      r % 5 != 0 && (o = !0);
                                      break;
                                  case "seconds_tens":
                                      r % 10 != 0 && (o = !0);
                                      break;
                                  case "seconds_fives":
                                      r % 5 != 0 && (o = !0)
                              }
                              if ("hours" === i.tickInterval || "minutes_fives" === i.tickInterval || "seconds_tens" === i.tickInterval || "seconds_fives" === i.tickInterval) {
                                  if (!o) return !0
                              } else if ((r % t == 0 || s) && !o) return !0
                          }))
                      }
                  }, {
                      key: "recalcDimensionsBasedOnFormat",
                      value: function(e, t) {
                          var i = this.w,
                              n = this.formatDates(e),
                              a = this.removeOverlappingTS(n);
                          i.globals.timescaleLabels = a.slice(), new de(this.ctx).plotCoords()
                      }
                  }, {
                      key: "determineInterval",
                      value: function(e) {
                          var t = 24 * e,
                              i = 60 * t;
                          switch (!0) {
                              case e / 365 > 5:
                                  this.tickInterval = "years";
                                  break;
                              case e > 800:
                                  this.tickInterval = "half_year";
                                  break;
                              case e > 180:
                                  this.tickInterval = "months";
                                  break;
                              case e > 90:
                                  this.tickInterval = "months_fortnight";
                                  break;
                              case e > 60:
                                  this.tickInterval = "months_days";
                                  break;
                              case e > 30:
                                  this.tickInterval = "week_days";
                                  break;
                              case e > 2:
                                  this.tickInterval = "days";
                                  break;
                              case t > 2.4:
                                  this.tickInterval = "hours";
                                  break;
                              case i > 15:
                                  this.tickInterval = "minutes_fives";
                                  break;
                              case i > 5:
                                  this.tickInterval = "minutes";
                                  break;
                              case i > 1:
                                  this.tickInterval = "seconds_tens";
                                  break;
                              case 60 * i > 20:
                                  this.tickInterval = "seconds_fives";
                                  break;
                              default:
                                  this.tickInterval = "seconds"
                          }
                      }
                  }, {
                      key: "generateYearScale",
                      value: function(e) {
                          var t = e.firstVal,
                              i = e.currentMonth,
                              n = e.currentYear,
                              a = e.daysWidthOnXAxis,
                              r = e.numberOfYears,
                              s = t.minYear,
                              o = 0,
                              l = new X(this.ctx),
                              c = "year";
                          if (t.minDate > 1 || t.minMonth > 0) {
                              var h = l.determineRemainingDaysOfYear(t.minYear, t.minMonth, t.minDate);
                              o = (l.determineDaysOfYear(t.minYear) - h + 1) * a, s = t.minYear + 1, this.timeScaleArray.push({
                                  position: o,
                                  value: s,
                                  unit: c,
                                  year: s,
                                  month: y.monthMod(i + 1)
                              })
                          } else 1 === t.minDate && 0 === t.minMonth && this.timeScaleArray.push({
                              position: o,
                              value: s,
                              unit: c,
                              year: n,
                              month: y.monthMod(i + 1)
                          });
                          for (var u = s, d = o, f = 0; f < r; f++) u++, d = l.determineDaysOfYear(u - 1) * a + d, this.timeScaleArray.push({
                              position: d,
                              value: u,
                              unit: c,
                              year: u,
                              month: 1
                          })
                      }
                  }, {
                      key: "generateMonthScale",
                      value: function(e) {
                          var t = e.firstVal,
                              i = e.currentMonthDate,
                              n = e.currentMonth,
                              a = e.currentYear,
                              r = e.daysWidthOnXAxis,
                              s = e.numberOfMonths,
                              o = n,
                              l = 0,
                              c = new X(this.ctx),
                              h = "month",
                              u = 0;
                          if (t.minDate > 1) {
                              l = (c.determineDaysOfMonths(n + 1, t.minYear) - i + 1) * r, o = y.monthMod(n + 1);
                              var d = a + u,
                                  f = y.monthMod(o),
                                  p = o;
                              0 === o && (h = "year", p = d, f = 1, d += u += 1), this.timeScaleArray.push({
                                  position: l,
                                  value: p,
                                  unit: h,
                                  year: d,
                                  month: f
                              })
                          } else this.timeScaleArray.push({
                              position: l,
                              value: o,
                              unit: h,
                              year: a,
                              month: y.monthMod(n)
                          });
                          for (var g = o + 1, x = l, v = 0, m = 1; v < s; v++, m++) {
                              0 === (g = y.monthMod(g)) ? (h = "year", u += 1) : h = "month";
                              var b = this._getYear(a, g, u);
                              x = c.determineDaysOfMonths(g, b) * r + x;
                              var w = 0 === g ? b : g;
                              this.timeScaleArray.push({
                                  position: x,
                                  value: w,
                                  unit: h,
                                  year: b,
                                  month: 0 === g ? 1 : g
                              }), g++
                          }
                      }
                  }, {
                      key: "generateDayScale",
                      value: function(e) {
                          var t = e.firstVal,
                              i = e.currentMonth,
                              n = e.currentYear,
                              a = e.hoursWidthOnXAxis,
                              r = e.numberOfDays,
                              s = new X(this.ctx),
                              o = "day",
                              l = t.minDate + 1,
                              c = l,
                              h = function(e, t, i) {
                                  return e > s.determineDaysOfMonths(t + 1, i) ? (c = 1, o = "month", d = t += 1, t) : t
                              },
                              u = (24 - t.minHour) * a,
                              d = l,
                              f = h(c, i, n);
                          0 === t.minHour && 1 === t.minDate ? (u = 0, d = y.monthMod(t.minMonth), o = "month", c = t.minDate, r++) : 1 !== t.minDate && 0 === t.minHour && 0 === t.minMinute && (u = 0, l = t.minDate, d = l, f = h(c = l, i, n)), this.timeScaleArray.push({
                              position: u,
                              value: d,
                              unit: o,
                              year: this._getYear(n, f, 0),
                              month: y.monthMod(f),
                              day: c
                          });
                          for (var p = u, g = 0; g < r; g++) {
                              o = "day", f = h(c += 1, f, this._getYear(n, f, 0));
                              var x = this._getYear(n, f, 0);
                              p = 24 * a + p;
                              var v = 1 === c ? y.monthMod(f) : c;
                              this.timeScaleArray.push({
                                  position: p,
                                  value: v,
                                  unit: o,
                                  year: x,
                                  month: y.monthMod(f),
                                  day: v
                              })
                          }
                      }
                  }, {
                      key: "generateHourScale",
                      value: function(e) {
                          var t = e.firstVal,
                              i = e.currentDate,
                              n = e.currentMonth,
                              a = e.currentYear,
                              r = e.minutesWidthOnXAxis,
                              s = e.numberOfHours,
                              o = new X(this.ctx),
                              l = "hour",
                              c = function(e, t) {
                                  return e > o.determineDaysOfMonths(t + 1, a) && (g = 1, t += 1), {
                                      month: t,
                                      date: g
                                  }
                              },
                              h = function(e, t) {
                                  return e > o.determineDaysOfMonths(t + 1, a) ? t += 1 : t
                              },
                              u = 60 - (t.minMinute + t.minSecond / 60),
                              d = u * r,
                              f = t.minHour + 1,
                              p = f + 1;
                          60 === u && (d = 0, p = (f = t.minHour) + 1);
                          var g = i,
                              x = h(g, n);
                          this.timeScaleArray.push({
                              position: d,
                              value: f,
                              unit: l,
                              day: g,
                              hour: p,
                              year: a,
                              month: y.monthMod(x)
                          });
                          for (var v = d, m = 0; m < s; m++) {
                              l = "hour", p >= 24 && (p = 0, l = "day", x = c(g += 1, x).month, x = h(g, x));
                              var b = this._getYear(a, x, 0);
                              v = 0 === p && 0 === m ? u * r : 60 * r + v;
                              var w = 0 === p ? g : p;
                              this.timeScaleArray.push({
                                  position: v,
                                  value: w,
                                  unit: l,
                                  hour: p,
                                  day: g,
                                  year: b,
                                  month: y.monthMod(x)
                              }), p++
                          }
                      }
                  }, {
                      key: "generateMinuteScale",
                      value: function(e) {
                          for (var t = e.currentMillisecond, i = e.currentSecond, n = e.currentMinute, a = e.currentHour, r = e.currentDate, s = e.currentMonth, o = e.currentYear, l = e.minutesWidthOnXAxis, c = e.secondsWidthOnXAxis, h = e.numberOfMinutes, u = n + 1, d = r, f = s, p = o, g = a, x = (60 - i - t / 1e3) * c, v = 0; v < h; v++) u >= 60 && (u = 0, 24 === (g += 1) && (g = 0)), this.timeScaleArray.push({
                              position: x,
                              value: u,
                              unit: "minute",
                              hour: g,
                              minute: u,
                              day: d,
                              year: this._getYear(p, f, 0),
                              month: y.monthMod(f)
                          }), x += l, u++
                      }
                  }, {
                      key: "generateSecondScale",
                      value: function(e) {
                          for (var t = e.currentMillisecond, i = e.currentSecond, n = e.currentMinute, a = e.currentHour, r = e.currentDate, s = e.currentMonth, o = e.currentYear, l = e.secondsWidthOnXAxis, c = e.numberOfSeconds, h = i + 1, u = n, d = r, f = s, p = o, g = a, x = (1e3 - t) / 1e3 * l, v = 0; v < c; v++) h >= 60 && (h = 0, ++u >= 60 && (u = 0, 24 === ++g && (g = 0))), this.timeScaleArray.push({
                              position: x,
                              value: h,
                              unit: "second",
                              hour: g,
                              minute: u,
                              second: h,
                              day: d,
                              year: this._getYear(p, f, 0),
                              month: y.monthMod(f)
                          }), x += l, h++
                      }
                  }, {
                      key: "createRawDateString",
                      value: function(e, t) {
                          var i = e.year;
                          return 0 === e.month && (e.month = 1), i += "-" + ("0" + e.month.toString()).slice(-2), "day" === e.unit ? i += "day" === e.unit ? "-" + ("0" + t).slice(-2) : "-01" : i += "-" + ("0" + (e.day ? e.day : "1")).slice(-2), "hour" === e.unit ? i += "hour" === e.unit ? "T" + ("0" + t).slice(-2) : "T00" : i += "T" + ("0" + (e.hour ? e.hour : "0")).slice(-2), "minute" === e.unit ? i += ":" + ("0" + t).slice(-2) : i += ":" + (e.minute ? ("0" + e.minute).slice(-2) : "00"), "second" === e.unit ? i += ":" + ("0" + t).slice(-2) : i += ":00", this.utc && (i += ".000Z"), i
                      }
                  }, {
                      key: "formatDates",
                      value: function(e) {
                          var t = this,
                              i = this.w;
                          return e.map((function(e) {
                              var n = e.value.toString(),
                                  a = new X(t.ctx),
                                  r = t.createRawDateString(e, n),
                                  s = a.getDate(a.parseDate(r));
                              if (t.utc || (s = a.getDate(a.parseDateWithTimezone(r))), void 0 === i.config.xaxis.labels.format) {
                                  var o = "dd MMM",
                                      l = i.config.xaxis.labels.datetimeFormatter;
                                  "year" === e.unit && (o = l.year), "month" === e.unit && (o = l.month), "day" === e.unit && (o = l.day), "hour" === e.unit && (o = l.hour), "minute" === e.unit && (o = l.minute), "second" === e.unit && (o = l.second), n = a.formatDate(s, o)
                              } else n = a.formatDate(s, i.config.xaxis.labels.format);
                              return {
                                  dateString: r,
                                  position: e.position,
                                  value: n,
                                  unit: e.unit,
                                  year: e.year,
                                  month: e.month
                              }
                          }))
                      }
                  }, {
                      key: "removeOverlappingTS",
                      value: function(e) {
                          var t, i = this,
                              n = new S(this.ctx),
                              a = !1;
                          e.length > 0 && e[0].value && e.every((function(t) {
                              return t.value.length === e[0].value.length
                          })) && (a = !0, t = n.getTextRects(e[0].value).width);
                          var r = 0,
                              s = e.map((function(s, o) {
                                  if (o > 0 && i.w.config.xaxis.labels.hideOverlappingLabels) {
                                      var l = a ? t : n.getTextRects(e[r].value).width,
                                          c = e[r].position;
                                      return s.position > c + l + 10 ? (r = o, s) : null
                                  }
                                  return s
                              }));
                          return s.filter((function(e) {
                              return null !== e
                          }))
                      }
                  }, {
                      key: "_getYear",
                      value: function(e, t, i) {
                          return e + Math.floor(t / 12) + i
                      }
                  }]), e
              }(),
              De = function() {
                  function e(t, i) {
                      o(this, e), this.ctx = i, this.w = i.w, this.el = t
                  }
                  return c(e, [{
                      key: "setupElements",
                      value: function() {
                          var e = this.w.globals,
                              t = this.w.config,
                              i = t.chart.type;
                          e.axisCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i) > -1, e.xyCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i) > -1, e.isBarHorizontal = ("bar" === t.chart.type || "rangeBar" === t.chart.type || "boxPlot" === t.chart.type) && t.plotOptions.bar.horizontal, e.chartClass = ".apexcharts" + e.chartID, e.dom.baseEl = this.el, e.dom.elWrap = document.createElement("div"), S.setAttrs(e.dom.elWrap, {
                              id: e.chartClass.substring(1),
                              class: "apexcharts-canvas " + e.chartClass.substring(1)
                          }), this.el.appendChild(e.dom.elWrap), e.dom.Paper = new window.SVG.Doc(e.dom.elWrap), e.dom.Paper.attr({
                              class: "apexcharts-svg",
                              "xmlns:data": "ApexChartsNS",
                              transform: "translate(".concat(t.chart.offsetX, ", ").concat(t.chart.offsetY, ")")
                          }), e.dom.Paper.node.style.background = t.chart.background, this.setSVGDimensions(), e.dom.elGraphical = e.dom.Paper.group().attr({
                              class: "apexcharts-inner apexcharts-graphical"
                          }), e.dom.elAnnotations = e.dom.Paper.group().attr({
                              class: "apexcharts-annotations"
                          }), e.dom.elDefs = e.dom.Paper.defs(), e.dom.elLegendWrap = document.createElement("div"), e.dom.elLegendWrap.classList.add("apexcharts-legend"), e.dom.elWrap.appendChild(e.dom.elLegendWrap), e.dom.Paper.add(e.dom.elGraphical), e.dom.elGraphical.add(e.dom.elDefs)
                      }
                  }, {
                      key: "plotChartType",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.config,
                              a = i.globals,
                              r = {
                                  series: [],
                                  i: []
                              },
                              s = {
                                  series: [],
                                  i: []
                              },
                              o = {
                                  series: [],
                                  i: []
                              },
                              l = {
                                  series: [],
                                  i: []
                              },
                              c = {
                                  series: [],
                                  i: []
                              },
                              h = {
                                  series: [],
                                  i: []
                              },
                              u = {
                                  series: [],
                                  i: []
                              };
                          a.series.map((function(t, d) {
                              var f = 0;
                              void 0 !== e[d].type ? ("column" === e[d].type || "bar" === e[d].type ? (a.series.length > 1 && n.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), c.series.push(t), c.i.push(d), f++, i.globals.columnSeries = c.series) : "area" === e[d].type ? (s.series.push(t), s.i.push(d), f++) : "line" === e[d].type ? (r.series.push(t), r.i.push(d), f++) : "scatter" === e[d].type ? (o.series.push(t), o.i.push(d)) : "bubble" === e[d].type ? (l.series.push(t), l.i.push(d), f++) : "candlestick" === e[d].type ? (h.series.push(t), h.i.push(d), f++) : "boxPlot" === e[d].type ? (u.series.push(t), u.i.push(d), f++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble"), f > 1 && (a.comboCharts = !0)) : (r.series.push(t), r.i.push(d))
                          }));
                          var d = new _e(this.ctx, t),
                              f = new Ce(this.ctx, t);
                          this.ctx.pie = new Pe(this.ctx);
                          var p = new Ie(this.ctx);
                          this.ctx.rangeBar = new Y(this.ctx, t);
                          var g = new Me(this.ctx),
                              x = [];
                          if (a.comboCharts) {
                              if (s.series.length > 0 && x.push(d.draw(s.series, "area", s.i)), c.series.length > 0)
                                  if (i.config.chart.stacked) {
                                      var v = new Ae(this.ctx, t);
                                      x.push(v.draw(c.series, c.i))
                                  } else this.ctx.bar = new H(this.ctx, t), x.push(this.ctx.bar.draw(c.series, c.i));
                              if (r.series.length > 0 && x.push(d.draw(r.series, "line", r.i)), h.series.length > 0 && x.push(f.draw(h.series, h.i)), u.series.length > 0 && x.push(f.draw(u.series, u.i)), o.series.length > 0) {
                                  var m = new _e(this.ctx, t, !0);
                                  x.push(m.draw(o.series, "scatter", o.i))
                              }
                              if (l.series.length > 0) {
                                  var b = new _e(this.ctx, t, !0);
                                  x.push(b.draw(l.series, "bubble", l.i))
                              }
                          } else switch (n.chart.type) {
                              case "line":
                                  x = d.draw(a.series, "line");
                                  break;
                              case "area":
                                  x = d.draw(a.series, "area");
                                  break;
                              case "bar":
                                  n.chart.stacked ? x = new Ae(this.ctx, t).draw(a.series) : (this.ctx.bar = new H(this.ctx, t), x = this.ctx.bar.draw(a.series));
                                  break;
                              case "candlestick":
                                  x = new Ce(this.ctx, t).draw(a.series);
                                  break;
                              case "boxPlot":
                                  x = new Ce(this.ctx, t).draw(a.series);
                                  break;
                              case "rangeBar":
                                  x = this.ctx.rangeBar.draw(a.series);
                                  break;
                              case "heatmap":
                                  x = new Ee(this.ctx, t).draw(a.series);
                                  break;
                              case "treemap":
                                  x = new Ne(this.ctx, t).draw(a.series);
                                  break;
                              case "pie":
                              case "donut":
                              case "polarArea":
                                  x = this.ctx.pie.draw(a.series);
                                  break;
                              case "radialBar":
                                  x = p.draw(a.series);
                                  break;
                              case "radar":
                                  x = g.draw(a.series);
                                  break;
                              default:
                                  x = d.draw(a.series)
                          }
                          return x
                      }
                  }, {
                      key: "setSVGDimensions",
                      value: function() {
                          var e = this.w.globals,
                              t = this.w.config;
                          e.svgWidth = t.chart.width, e.svgHeight = t.chart.height;
                          var i = y.getDimensions(this.el),
                              n = t.chart.width.toString().split(/[0-9]+/g).pop();
                          "%" === n ? y.isNumber(i[0]) && (0 === i[0].width && (i = y.getDimensions(this.el.parentNode)), e.svgWidth = i[0] * parseInt(t.chart.width, 10) / 100) : "px" !== n && "" !== n || (e.svgWidth = parseInt(t.chart.width, 10));
                          var a = t.chart.height.toString().split(/[0-9]+/g).pop();
                          if ("auto" !== e.svgHeight && "" !== e.svgHeight)
                              if ("%" === a) {
                                  var r = y.getDimensions(this.el.parentNode);
                                  e.svgHeight = r[1] * parseInt(t.chart.height, 10) / 100
                              } else e.svgHeight = parseInt(t.chart.height, 10);
                          else e.axisCharts ? e.svgHeight = e.svgWidth / 1.61 : e.svgHeight = e.svgWidth / 1.2;
                          if (e.svgWidth < 0 && (e.svgWidth = 0), e.svgHeight < 0 && (e.svgHeight = 0), S.setAttrs(e.dom.Paper.node, {
                                  width: e.svgWidth,
                                  height: e.svgHeight
                              }), "%" !== a) {
                              var s = t.chart.sparkline.enabled ? 0 : e.axisCharts ? t.chart.parentHeightOffset : 0;
                              e.dom.Paper.node.parentNode.parentNode.style.minHeight = e.svgHeight + s + "px"
                          }
                          e.dom.elWrap.style.width = e.svgWidth + "px", e.dom.elWrap.style.height = e.svgHeight + "px"
                      }
                  }, {
                      key: "shiftGraphPosition",
                      value: function() {
                          var e = this.w.globals,
                              t = e.translateY,
                              i = {
                                  transform: "translate(" + e.translateX + ", " + t + ")"
                              };
                          S.setAttrs(e.dom.elGraphical.node, i)
                      }
                  }, {
                      key: "resizeNonAxisCharts",
                      value: function() {
                          var e = this.w,
                              t = e.globals,
                              i = 0,
                              n = e.config.chart.sparkline.enabled ? 1 : 15;
                          n += e.config.grid.padding.bottom, "top" !== e.config.legend.position && "bottom" !== e.config.legend.position || !e.config.legend.show || e.config.legend.floating || (i = new pe(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
                          var a = e.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
                              r = 2.05 * e.globals.radialSize;
                          if (a && !e.config.chart.sparkline.enabled && 0 !== e.config.plotOptions.radialBar.startAngle) {
                              var s = y.getBoundingClientRect(a);
                              r = s.bottom;
                              var o = s.bottom - s.top;
                              r = Math.max(2.05 * e.globals.radialSize, o)
                          }
                          var l = r + t.translateY + i + n;
                          t.dom.elLegendForeign && t.dom.elLegendForeign.setAttribute("height", l), t.dom.elWrap.style.height = l + "px", S.setAttrs(t.dom.Paper.node, {
                              height: l
                          }), t.dom.Paper.node.parentNode.parentNode.style.minHeight = l + "px"
                      }
                  }, {
                      key: "coreCalculations",
                      value: function() {
                          new Q(this.ctx).init()
                      }
                  }, {
                      key: "resetGlobals",
                      value: function() {
                          var e = this,
                              t = function() {
                                  return e.w.config.series.map((function(e) {
                                      return []
                                  }))
                              },
                              i = new W,
                              n = this.w.globals;
                          i.initGlobalVars(n), n.seriesXvalues = t(), n.seriesYvalues = t()
                      }
                  }, {
                      key: "isMultipleY",
                      value: function() {
                          if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0
                      }
                  }, {
                      key: "xySettings",
                      value: function() {
                          var e = null,
                              t = this.w;
                          if (t.globals.axisCharts) {
                              if ("back" === t.config.xaxis.crosshairs.position && new ae(this.ctx).drawXCrosshairs(), "back" === t.config.yaxis[0].crosshairs.position && new ae(this.ctx).drawYCrosshairs(), "datetime" === t.config.xaxis.type && void 0 === t.config.xaxis.labels.formatter) {
                                  this.ctx.timeScale = new ze(this.ctx);
                                  var i = [];
                                  isFinite(t.globals.minX) && isFinite(t.globals.maxX) && !t.globals.isBarHorizontal ? i = this.ctx.timeScale.calculateTimeScaleTicks(t.globals.minX, t.globals.maxX) : t.globals.isBarHorizontal && (i = this.ctx.timeScale.calculateTimeScaleTicks(t.globals.minY, t.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i)
                              }
                              e = new T(this.ctx).getCalculatedRatios()
                          }
                          return e
                      }
                  }, {
                      key: "updateSourceChart",
                      value: function(e) {
                          this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
                              chart: {
                                  selection: {
                                      xaxis: {
                                          min: e.w.globals.minX,
                                          max: e.w.globals.maxX
                                      }
                                  }
                              }
                          }, !1, !1)
                      }
                  }, {
                      key: "setupBrushHandler",
                      value: function() {
                          var e = this,
                              t = this.w;
                          if (t.config.chart.brush.enabled && "function" != typeof t.config.chart.events.selection) {
                              var i = t.config.chart.brush.targets || [t.config.chart.brush.target];
                              i.forEach((function(t) {
                                  var i = ApexCharts.getChartByID(t);
                                  i.w.globals.brushSource = e.ctx, "function" != typeof i.w.config.chart.events.zoomed && (i.w.config.chart.events.zoomed = function() {
                                      e.updateSourceChart(i)
                                  }), "function" != typeof i.w.config.chart.events.scrolled && (i.w.config.chart.events.scrolled = function() {
                                      e.updateSourceChart(i)
                                  })
                              })), t.config.chart.events.selection = function(e, n) {
                                  i.forEach((function(e) {
                                      var i = ApexCharts.getChartByID(e),
                                          a = y.clone(t.config.yaxis);
                                      if (t.config.chart.brush.autoScaleYaxis && 1 === i.w.globals.series.length) {
                                          var s = new K(i);
                                          a = s.autoScaleY(i, a, n)
                                      }
                                      var o = i.w.config.yaxis.reduce((function(e, t, n) {
                                          return [].concat(v(e), [r(r({}, i.w.config.yaxis[n]), {}, {
                                              min: a[0].min,
                                              max: a[0].max
                                          })])
                                      }), []);
                                      i.ctx.updateHelpers._updateOptions({
                                          xaxis: {
                                              min: n.xaxis.min,
                                              max: n.xaxis.max
                                          },
                                          yaxis: o
                                      }, !1, !1, !1, !1)
                                  }))
                              }
                          }
                      }
                  }]), e
              }(),
              He = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "_updateOptions",
                      value: function(e) {
                          var t = this,
                              i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                              n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              a = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                              r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                          return new Promise((function(o) {
                              var l = [t.ctx];
                              a && (l = t.ctx.getSyncedCharts()), t.ctx.w.globals.isExecCalled && (l = [t.ctx], t.ctx.w.globals.isExecCalled = !1), l.forEach((function(a, c) {
                                  var h = a.w;
                                  return h.globals.shouldAnimate = n, i || (h.globals.resized = !0, h.globals.dataChanged = !0, n && a.series.getPreviousPaths()), e && "object" === s(e) && (a.config = new j(e), e = T.extendArrayProps(a.config, e, h), a.w.globals.chartID !== t.ctx.w.globals.chartID && delete e.series, h.config = y.extend(h.config, e), r && (h.globals.lastXAxis = e.xaxis ? y.clone(e.xaxis) : [], h.globals.lastYAxis = e.yaxis ? y.clone(e.yaxis) : [], h.globals.initialConfig = y.extend({}, h.config), h.globals.initialSeries = y.clone(h.config.series))), a.update(e).then((function() {
                                      c === l.length - 1 && o(a)
                                  }))
                              }))
                          }))
                      }
                  }, {
                      key: "_updateSeries",
                      value: function(e, t) {
                          var i = this,
                              n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                          return new Promise((function(a) {
                              var r, s = i.w;
                              return s.globals.shouldAnimate = t, s.globals.dataChanged = !0, t && i.ctx.series.getPreviousPaths(), s.globals.axisCharts ? (0 === (r = e.map((function(e, t) {
                                  return i._extendSeries(e, t)
                              }))).length && (r = [{
                                  data: []
                              }]), s.config.series = r) : s.config.series = e.slice(), n && (s.globals.initialSeries = y.clone(s.config.series)), i.ctx.update().then((function() {
                                  a(i.ctx)
                              }))
                          }))
                      }
                  }, {
                      key: "_extendSeries",
                      value: function(e, t) {
                          var i = this.w,
                              n = i.config.series[t];
                          return r(r({}, i.config.series[t]), {}, {
                              name: e.name ? e.name : n && n.name,
                              color: e.color ? e.color : n && n.color,
                              type: e.type ? e.type : n && n.type,
                              data: e.data ? e.data : n && n.data
                          })
                      }
                  }, {
                      key: "toggleDataPointSelection",
                      value: function(e, t) {
                          var i = this.w,
                              n = null,
                              a = ".apexcharts-series[data\\:realIndex='".concat(e, "']");
                          return i.globals.axisCharts ? n = i.globals.dom.Paper.select("".concat(a, " path[j='").concat(t, "'], ").concat(a, " circle[j='").concat(t, "'], ").concat(a, " rect[j='").concat(t, "']")).members[0] : void 0 === t && (n = i.globals.dom.Paper.select("".concat(a, " path[j='").concat(e, "']")).members[0], "pie" !== i.config.chart.type && "polarArea" !== i.config.chart.type && "donut" !== i.config.chart.type || this.ctx.pie.pieClicked(e)), n ? (new S(this.ctx).pathMouseDown(n, null), n.node ? n.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null)
                      }
                  }, {
                      key: "forceXAxisUpdate",
                      value: function(e) {
                          var t = this.w;
                          if (["min", "max"].forEach((function(i) {
                                  void 0 !== e.xaxis[i] && (t.config.xaxis[i] = e.xaxis[i], t.globals.lastXAxis[i] = e.xaxis[i])
                              })), e.xaxis.categories && e.xaxis.categories.length && (t.config.xaxis.categories = e.xaxis.categories), t.config.xaxis.convertedCatToNumeric) {
                              var i = new B(e);
                              e = i.convertCatToNumericXaxis(e, this.ctx)
                          }
                          return e
                      }
                  }, {
                      key: "forceYAxisUpdate",
                      value: function(e) {
                          var t = this.w;
                          return t.config.chart.stacked && "100%" === t.config.chart.stackType && (Array.isArray(e.yaxis) ? e.yaxis.forEach((function(t, i) {
                              e.yaxis[i].min = 0, e.yaxis[i].max = 100
                          })) : (e.yaxis.min = 0, e.yaxis.max = 100)), e
                      }
                  }, {
                      key: "revertDefaultAxisMinMax",
                      value: function(e) {
                          var t = this,
                              i = this.w,
                              n = i.globals.lastXAxis,
                              a = i.globals.lastYAxis;
                          e && e.xaxis && (n = e.xaxis), e && e.yaxis && (a = e.yaxis), i.config.xaxis.min = n.min, i.config.xaxis.max = n.max;
                          var r = function(e) {
                              void 0 !== a[e] && (i.config.yaxis[e].min = a[e].min, i.config.yaxis[e].max = a[e].max)
                          };
                          i.config.yaxis.map((function(e, n) {
                              i.globals.zoomed || void 0 !== a[n] ? r(n) : void 0 !== t.ctx.opts.yaxis[n] && (e.min = t.ctx.opts.yaxis[n].min, e.max = t.ctx.opts.yaxis[n].max)
                          }))
                      }
                  }]), e
              }();
          Oe = "undefined" != typeof window ? window : void 0, Fe = function(e, t) {
                  var i = (void 0 !== this ? this : e).SVG = function(e) {
                      if (i.supported) return e = new i.Doc(e), i.parser.draw || i.prepare(), e
                  };
                  if (i.ns = "http://www.w3.org/2000/svg", i.xmlns = "http://www.w3.org/2000/xmlns/", i.xlink = "http://www.w3.org/1999/xlink", i.svgjs = "http://svgjs.dev", i.supported = !0, !i.supported) return !1;
                  i.did = 1e3, i.eid = function(e) {
                      return "Svgjs" + u(e) + i.did++
                  }, i.create = function(e) {
                      var i = t.createElementNS(this.ns, e);
                      return i.setAttribute("id", this.eid(e)), i
                  }, i.extend = function() {
                      var e, t;
                      t = (e = [].slice.call(arguments)).pop();
                      for (var n = e.length - 1; n >= 0; n--)
                          if (e[n])
                              for (var a in t) e[n].prototype[a] = t[a];
                      i.Set && i.Set.inherit && i.Set.inherit()
                  }, i.invent = function(e) {
                      var t = "function" == typeof e.create ? e.create : function() {
                          this.constructor.call(this, i.create(e.create))
                      };
                      return e.inherit && (t.prototype = new e.inherit), e.extend && i.extend(t, e.extend), e.construct && i.extend(e.parent || i.Container, e.construct), t
                  }, i.adopt = function(t) {
                      return t ? t.instance ? t.instance : ((n = "svg" == t.nodeName ? t.parentNode instanceof e.SVGElement ? new i.Nested : new i.Doc : "linearGradient" == t.nodeName ? new i.Gradient("linear") : "radialGradient" == t.nodeName ? new i.Gradient("radial") : i[u(t.nodeName)] ? new(i[u(t.nodeName)]) : new i.Element(t)).type = t.nodeName, n.node = t, t.instance = n, n instanceof i.Doc && n.namespace().defs(), n.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}), n) : null;
                      var n
                  }, i.prepare = function() {
                      var e = t.getElementsByTagName("body")[0],
                          n = (e ? new i.Doc(e) : i.adopt(t.documentElement).nested()).size(2, 0);
                      i.parser = {
                          body: e || t.documentElement,
                          draw: n.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                          poly: n.polyline().node,
                          path: n.path().node,
                          native: i.create("svg")
                      }
                  }, i.parser = {
                      native: i.create("svg")
                  }, t.addEventListener("DOMContentLoaded", (function() {
                      i.parser.draw || i.prepare()
                  }), !1), i.regex = {
                      numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                      hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                      rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                      reference: /#([a-z0-9\-_]+)/i,
                      transforms: /\)\s*,?\s*/,
                      whitespace: /\s/g,
                      isHex: /^#[a-f0-9]{3,6}$/i,
                      isRgb: /^rgb\(/,
                      isCss: /[^:]+:[^;]+;?/,
                      isBlank: /^(\s+)?$/,
                      isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                      isPercent: /^-?[\d\.]+%$/,
                      isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                      delimiter: /[\s,]+/,
                      hyphen: /([^e])\-/gi,
                      pathLetters: /[MLHVCSQTAZ]/gi,
                      isPathLetter: /[MLHVCSQTAZ]/i,
                      numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                      dots: /\./g
                  }, i.utils = {
                      map: function(e, t) {
                          for (var i = e.length, n = [], a = 0; a < i; a++) n.push(t(e[a]));
                          return n
                      },
                      filter: function(e, t) {
                          for (var i = e.length, n = [], a = 0; a < i; a++) t(e[a]) && n.push(e[a]);
                          return n
                      },
                      filterSVGElements: function(t) {
                          return this.filter(t, (function(t) {
                              return t instanceof e.SVGElement
                          }))
                      }
                  }, i.defaults = {
                      attrs: {
                          "fill-opacity": 1,
                          "stroke-opacity": 1,
                          "stroke-width": 0,
                          "stroke-linejoin": "miter",
                          "stroke-linecap": "butt",
                          fill: "#000000",
                          stroke: "#000000",
                          opacity: 1,
                          x: 0,
                          y: 0,
                          cx: 0,
                          cy: 0,
                          width: 0,
                          height: 0,
                          r: 0,
                          rx: 0,
                          ry: 0,
                          offset: 0,
                          "stop-opacity": 1,
                          "stop-color": "#000000",
                          "font-size": 16,
                          "font-family": "Helvetica, Arial, sans-serif",
                          "text-anchor": "start"
                      }
                  }, i.Color = function(e) {
                      var t, n;
                      this.r = 0, this.g = 0, this.b = 0, e && ("string" == typeof e ? i.regex.isRgb.test(e) ? (t = i.regex.rgb.exec(e.replace(i.regex.whitespace, "")), this.r = parseInt(t[1]), this.g = parseInt(t[2]), this.b = parseInt(t[3])) : i.regex.isHex.test(e) && (t = i.regex.hex.exec(4 == (n = e).length ? ["#", n.substring(1, 2), n.substring(1, 2), n.substring(2, 3), n.substring(2, 3), n.substring(3, 4), n.substring(3, 4)].join("") : n), this.r = parseInt(t[1], 16), this.g = parseInt(t[2], 16), this.b = parseInt(t[3], 16)) : "object" === s(e) && (this.r = e.r, this.g = e.g, this.b = e.b))
                  }, i.extend(i.Color, {
                      toString: function() {
                          return this.toHex()
                      },
                      toHex: function() {
                          return "#" + d(this.r) + d(this.g) + d(this.b)
                      },
                      toRgb: function() {
                          return "rgb(" + [this.r, this.g, this.b].join() + ")"
                      },
                      brightness: function() {
                          return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                      },
                      morph: function(e) {
                          return this.destination = new i.Color(e), this
                      },
                      at: function(e) {
                          return this.destination ? (e = e < 0 ? 0 : e > 1 ? 1 : e, new i.Color({
                              r: ~~(this.r + (this.destination.r - this.r) * e),
                              g: ~~(this.g + (this.destination.g - this.g) * e),
                              b: ~~(this.b + (this.destination.b - this.b) * e)
                          })) : this
                      }
                  }), i.Color.test = function(e) {
                      return e += "", i.regex.isHex.test(e) || i.regex.isRgb.test(e)
                  }, i.Color.isRgb = function(e) {
                      return e && "number" == typeof e.r && "number" == typeof e.g && "number" == typeof e.b
                  }, i.Color.isColor = function(e) {
                      return i.Color.isRgb(e) || i.Color.test(e)
                  }, i.Array = function(e, t) {
                      0 == (e = (e || []).valueOf()).length && t && (e = t.valueOf()), this.value = this.parse(e)
                  }, i.extend(i.Array, {
                      toString: function() {
                          return this.value.join(" ")
                      },
                      valueOf: function() {
                          return this.value
                      },
                      parse: function(e) {
                          return e = e.valueOf(), Array.isArray(e) ? e : this.split(e)
                      }
                  }), i.PointArray = function(e, t) {
                      i.Array.call(this, e, t || [
                          [0, 0]
                      ])
                  }, i.PointArray.prototype = new i.Array, i.PointArray.prototype.constructor = i.PointArray;
                  for (var n = {
                          M: function(e, t, i) {
                              return t.x = i.x = e[0], t.y = i.y = e[1], ["M", t.x, t.y]
                          },
                          L: function(e, t) {
                              return t.x = e[0], t.y = e[1], ["L", e[0], e[1]]
                          },
                          H: function(e, t) {
                              return t.x = e[0], ["H", e[0]]
                          },
                          V: function(e, t) {
                              return t.y = e[0], ["V", e[0]]
                          },
                          C: function(e, t) {
                              return t.x = e[4], t.y = e[5], ["C", e[0], e[1], e[2], e[3], e[4], e[5]]
                          },
                          Q: function(e, t) {
                              return t.x = e[2], t.y = e[3], ["Q", e[0], e[1], e[2], e[3]]
                          },
                          Z: function(e, t, i) {
                              return t.x = i.x, t.y = i.y, ["Z"]
                          }
                      }, a = "mlhvqtcsaz".split(""), r = 0, o = a.length; r < o; ++r) n[a[r]] = function(e) {
                      return function(t, i, a) {
                          if ("H" == e) t[0] = t[0] + i.x;
                          else if ("V" == e) t[0] = t[0] + i.y;
                          else if ("A" == e) t[5] = t[5] + i.x, t[6] = t[6] + i.y;
                          else
                              for (var r = 0, s = t.length; r < s; ++r) t[r] = t[r] + (r % 2 ? i.y : i.x);
                          if (n && "function" == typeof n[e]) return n[e](t, i, a)
                      }
                  }(a[r].toUpperCase());
                  i.PathArray = function(e, t) {
                      i.Array.call(this, e, t || [
                          ["M", 0, 0]
                      ])
                  }, i.PathArray.prototype = new i.Array, i.PathArray.prototype.constructor = i.PathArray, i.extend(i.PathArray, {
                      toString: function() {
                          return function(e) {
                              for (var t = 0, i = e.length, n = ""; t < i; t++) n += e[t][0], null != e[t][1] && (n += e[t][1], null != e[t][2] && (n += " ", n += e[t][2], null != e[t][3] && (n += " ", n += e[t][3], n += " ", n += e[t][4], null != e[t][5] && (n += " ", n += e[t][5], n += " ", n += e[t][6], null != e[t][7] && (n += " ", n += e[t][7])))));
                              return n + " "
                          }(this.value)
                      },
                      move: function(e, t) {
                          var i = this.bbox();
                          return i.x, i.y, this
                      },
                      at: function(e) {
                          if (!this.destination) return this;
                          for (var t = this.value, n = this.destination.value, a = [], r = new i.PathArray, s = 0, o = t.length; s < o; s++) {
                              a[s] = [t[s][0]];
                              for (var l = 1, c = t[s].length; l < c; l++) a[s][l] = t[s][l] + (n[s][l] - t[s][l]) * e;
                              "A" === a[s][0] && (a[s][4] = +(0 != a[s][4]), a[s][5] = +(0 != a[s][5]))
                          }
                          return r.value = a, r
                      },
                      parse: function(e) {
                          if (e instanceof i.PathArray) return e.valueOf();
                          var t, a = {
                              M: 2,
                              L: 2,
                              H: 1,
                              V: 1,
                              C: 6,
                              S: 4,
                              Q: 4,
                              T: 2,
                              A: 7,
                              Z: 0
                          };
                          e = "string" == typeof e ? e.replace(i.regex.numbersWithDots, c).replace(i.regex.pathLetters, " $& ").replace(i.regex.hyphen, "$1 -").trim().split(i.regex.delimiter) : e.reduce((function(e, t) {
                              return [].concat.call(e, t)
                          }), []);
                          var r = [],
                              s = new i.Point,
                              o = new i.Point,
                              l = 0,
                              h = e.length;
                          do {
                              i.regex.isPathLetter.test(e[l]) ? (t = e[l], ++l) : "M" == t ? t = "L" : "m" == t && (t = "l"), r.push(n[t].call(null, e.slice(l, l += a[t.toUpperCase()]).map(parseFloat), s, o))
                          } while (h > l);
                          return r
                      },
                      bbox: function() {
                          return i.parser.draw || i.prepare(), i.parser.path.setAttribute("d", this.toString()), i.parser.path.getBBox()
                      }
                  }), i.Number = i.invent({
                      create: function(e, t) {
                          this.value = 0, this.unit = t || "", "number" == typeof e ? this.value = isNaN(e) ? 0 : isFinite(e) ? e : e < 0 ? -34e37 : 34e37 : "string" == typeof e ? (t = e.match(i.regex.numberAndUnit)) && (this.value = parseFloat(t[1]), "%" == t[5] ? this.value /= 100 : "s" == t[5] && (this.value *= 1e3), this.unit = t[5]) : e instanceof i.Number && (this.value = e.valueOf(), this.unit = e.unit)
                      },
                      extend: {
                          toString: function() {
                              return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                          },
                          toJSON: function() {
                              return this.toString()
                          },
                          valueOf: function() {
                              return this.value
                          },
                          plus: function(e) {
                              return e = new i.Number(e), new i.Number(this + e, this.unit || e.unit)
                          },
                          minus: function(e) {
                              return e = new i.Number(e), new i.Number(this - e, this.unit || e.unit)
                          },
                          times: function(e) {
                              return e = new i.Number(e), new i.Number(this * e, this.unit || e.unit)
                          },
                          divide: function(e) {
                              return e = new i.Number(e), new i.Number(this / e, this.unit || e.unit)
                          },
                          to: function(e) {
                              var t = new i.Number(this);
                              return "string" == typeof e && (t.unit = e), t
                          },
                          morph: function(e) {
                              return this.destination = new i.Number(e), e.relative && (this.destination.value += this.value), this
                          },
                          at: function(e) {
                              return this.destination ? new i.Number(this.destination).minus(this).times(e).plus(this) : this
                          }
                      }
                  }), i.Element = i.invent({
                      create: function(e) {
                          this._stroke = i.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = e) && (this.type = e.nodeName, this.node.instance = this, this._stroke = e.getAttribute("stroke") || this._stroke)
                      },
                      extend: {
                          x: function(e) {
                              return this.attr("x", e)
                          },
                          y: function(e) {
                              return this.attr("y", e)
                          },
                          cx: function(e) {
                              return null == e ? this.x() + this.width() / 2 : this.x(e - this.width() / 2)
                          },
                          cy: function(e) {
                              return null == e ? this.y() + this.height() / 2 : this.y(e - this.height() / 2)
                          },
                          move: function(e, t) {
                              return this.x(e).y(t)
                          },
                          center: function(e, t) {
                              return this.cx(e).cy(t)
                          },
                          width: function(e) {
                              return this.attr("width", e)
                          },
                          height: function(e) {
                              return this.attr("height", e)
                          },
                          size: function(e, t) {
                              var n = f(this, e, t);
                              return this.width(new i.Number(n.width)).height(new i.Number(n.height))
                          },
                          clone: function(e) {
                              this.writeDataToDom();
                              var t = x(this.node.cloneNode(!0));
                              return e ? e.add(t) : this.after(t), t
                          },
                          remove: function() {
                              return this.parent() && this.parent().removeElement(this), this
                          },
                          replace: function(e) {
                              return this.after(e).remove(), e
                          },
                          addTo: function(e) {
                              return e.put(this)
                          },
                          putIn: function(e) {
                              return e.add(this)
                          },
                          id: function(e) {
                              return this.attr("id", e)
                          },
                          show: function() {
                              return this.style("display", "")
                          },
                          hide: function() {
                              return this.style("display", "none")
                          },
                          visible: function() {
                              return "none" != this.style("display")
                          },
                          toString: function() {
                              return this.attr("id")
                          },
                          classes: function() {
                              var e = this.attr("class");
                              return null == e ? [] : e.trim().split(i.regex.delimiter)
                          },
                          hasClass: function(e) {
                              return -1 != this.classes().indexOf(e)
                          },
                          addClass: function(e) {
                              if (!this.hasClass(e)) {
                                  var t = this.classes();
                                  t.push(e), this.attr("class", t.join(" "))
                              }
                              return this
                          },
                          removeClass: function(e) {
                              return this.hasClass(e) && this.attr("class", this.classes().filter((function(t) {
                                  return t != e
                              })).join(" ")), this
                          },
                          toggleClass: function(e) {
                              return this.hasClass(e) ? this.removeClass(e) : this.addClass(e)
                          },
                          reference: function(e) {
                              return i.get(this.attr(e))
                          },
                          parent: function(t) {
                              var n = this;
                              if (!n.node.parentNode) return null;
                              if (n = i.adopt(n.node.parentNode), !t) return n;
                              for (; n && n.node instanceof e.SVGElement;) {
                                  if ("string" == typeof t ? n.matches(t) : n instanceof t) return n;
                                  if (!n.node.parentNode || "#document" == n.node.parentNode.nodeName) return null;
                                  n = i.adopt(n.node.parentNode)
                              }
                          },
                          doc: function() {
                              return this instanceof i.Doc ? this : this.parent(i.Doc)
                          },
                          parents: function(e) {
                              var t = [],
                                  i = this;
                              do {
                                  if (!(i = i.parent(e)) || !i.node) break;
                                  t.push(i)
                              } while (i.parent);
                              return t
                          },
                          matches: function(e) {
                              return function(e, t) {
                                  return (e.matches || e.matchesSelector || e.msMatchesSelector || e.mozMatchesSelector || e.webkitMatchesSelector || e.oMatchesSelector).call(e, t)
                              }(this.node, e)
                          },
                          native: function() {
                              return this.node
                          },
                          svg: function(e) {
                              var n = t.createElement("svg");
                              if (!(e && this instanceof i.Parent)) return n.appendChild(e = t.createElement("svg")), this.writeDataToDom(), e.appendChild(this.node.cloneNode(!0)), n.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                              n.innerHTML = "<svg>" + e.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                              for (var a = 0, r = n.firstChild.childNodes.length; a < r; a++) this.node.appendChild(n.firstChild.firstChild);
                              return this
                          },
                          writeDataToDom: function() {
                              return (this.each || this.lines) && (this.each ? this : this.lines()).each((function() {
                                  this.writeDataToDom()
                              })), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this
                          },
                          setData: function(e) {
                              return this.dom = e, this
                          },
                          is: function(e) {
                              return function(e, t) {
                                  return e instanceof t
                              }(this, e)
                          }
                      }
                  }), i.easing = {
                      "-": function(e) {
                          return e
                      },
                      "<>": function(e) {
                          return -Math.cos(e * Math.PI) / 2 + .5
                      },
                      ">": function(e) {
                          return Math.sin(e * Math.PI / 2)
                      },
                      "<": function(e) {
                          return 1 - Math.cos(e * Math.PI / 2)
                      }
                  }, i.morph = function(e) {
                      return function(t, n) {
                          return new i.MorphObj(t, n).at(e)
                      }
                  }, i.Situation = i.invent({
                      create: function(e) {
                          this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new i.Number(e.duration).valueOf(), this.delay = new i.Number(e.delay).valueOf(), this.start = +new Date + this.delay, this.finish = this.start + this.duration, this.ease = e.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {}
                      }
                  }), i.FX = i.invent({
                      create: function(e) {
                          this._target = e, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1
                      },
                      extend: {
                          animate: function(e, t, n) {
                              "object" === s(e) && (t = e.ease, n = e.delay, e = e.duration);
                              var a = new i.Situation({
                                  duration: e || 1e3,
                                  delay: n || 0,
                                  ease: i.easing[t || "-"] || t
                              });
                              return this.queue(a), this
                          },
                          target: function(e) {
                              return e && e instanceof i.Element ? (this._target = e, this) : this._target
                          },
                          timeToAbsPos: function(e) {
                              return (e - this.situation.start) / (this.situation.duration / this._speed)
                          },
                          absPosToTime: function(e) {
                              return this.situation.duration / this._speed * e + this.situation.start
                          },
                          startAnimFrame: function() {
                              this.stopAnimFrame(), this.animationFrame = e.requestAnimationFrame(function() {
                                  this.step()
                              }.bind(this))
                          },
                          stopAnimFrame: function() {
                              e.cancelAnimationFrame(this.animationFrame)
                          },
                          start: function() {
                              return !this.active && this.situation && (this.active = !0, this.startCurrent()), this
                          },
                          startCurrent: function() {
                              return this.situation.start = +new Date + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step()
                          },
                          queue: function(e) {
                              return ("function" == typeof e || e instanceof i.Situation) && this.situations.push(e), this.situation || (this.situation = this.situations.shift()), this
                          },
                          dequeue: function() {
                              return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof i.Situation ? this.start() : this.situation.call(this)), this
                          },
                          initAnimations: function() {
                              var e, t = this.situation;
                              if (t.init) return this;
                              for (var n in t.animations) {
                                  e = this.target()[n](), Array.isArray(e) || (e = [e]), Array.isArray(t.animations[n]) || (t.animations[n] = [t.animations[n]]);
                                  for (var a = e.length; a--;) t.animations[n][a] instanceof i.Number && (e[a] = new i.Number(e[a])), t.animations[n][a] = e[a].morph(t.animations[n][a])
                              }
                              for (var n in t.attrs) t.attrs[n] = new i.MorphObj(this.target().attr(n), t.attrs[n]);
                              for (var n in t.styles) t.styles[n] = new i.MorphObj(this.target().style(n), t.styles[n]);
                              return t.initialTransformation = this.target().matrixify(), t.init = !0, this
                          },
                          clearQueue: function() {
                              return this.situations = [], this
                          },
                          clearCurrent: function() {
                              return this.situation = null, this
                          },
                          stop: function(e, t) {
                              var i = this.active;
                              return this.active = !1, t && this.clearQueue(), e && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent()
                          },
                          after: function(e) {
                              var t = this.last();
                              return this.target().on("finished.fx", (function i(n) {
                                  n.detail.situation == t && (e.call(this, t), this.off("finished.fx", i))
                              })), this._callStart()
                          },
                          during: function(e) {
                              var t = this.last(),
                                  n = function(n) {
                                      n.detail.situation == t && e.call(this, n.detail.pos, i.morph(n.detail.pos), n.detail.eased, t)
                                  };
                              return this.target().off("during.fx", n).on("during.fx", n), this.after((function() {
                                  this.off("during.fx", n)
                              })), this._callStart()
                          },
                          afterAll: function(e) {
                              var t = function t(i) {
                                  e.call(this), this.off("allfinished.fx", t)
                              };
                              return this.target().off("allfinished.fx", t).on("allfinished.fx", t), this._callStart()
                          },
                          last: function() {
                              return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                          },
                          add: function(e, t, i) {
                              return this.last()[i || "animations"][e] = t, this._callStart()
                          },
                          step: function(e) {
                              var t, i, n;
                              e || (this.absPos = this.timeToAbsPos(+new Date)), !1 !== this.situation.loops ? (t = Math.max(this.absPos, 0), i = Math.floor(t), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = t - i, n = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, n = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - n) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
                              var a = this.situation.ease(this.pos);
                              for (var r in this.situation.once) r > this.lastPos && r <= a && (this.situation.once[r].call(this.target(), this.pos, a), delete this.situation.once[r]);
                              return this.active && this.target().fire("during", {
                                  pos: this.pos,
                                  eased: a,
                                  fx: this,
                                  situation: this.situation
                              }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
                                  fx: this,
                                  situation: this.situation
                              }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = a, this) : this
                          },
                          eachAt: function() {
                              var e, t = this,
                                  n = this.target(),
                                  a = this.situation;
                              for (var r in a.animations) e = [].concat(a.animations[r]).map((function(e) {
                                  return "string" != typeof e && e.at ? e.at(a.ease(t.pos), t.pos) : e
                              })), n[r].apply(n, e);
                              for (var r in a.attrs) e = [r].concat(a.attrs[r]).map((function(e) {
                                  return "string" != typeof e && e.at ? e.at(a.ease(t.pos), t.pos) : e
                              })), n.attr.apply(n, e);
                              for (var r in a.styles) e = [r].concat(a.styles[r]).map((function(e) {
                                  return "string" != typeof e && e.at ? e.at(a.ease(t.pos), t.pos) : e
                              })), n.style.apply(n, e);
                              if (a.transforms.length) {
                                  e = a.initialTransformation, r = 0;
                                  for (var s = a.transforms.length; r < s; r++) {
                                      var o = a.transforms[r];
                                      o instanceof i.Matrix ? e = o.relative ? e.multiply((new i.Matrix).morph(o).at(a.ease(this.pos))) : e.morph(o).at(a.ease(this.pos)) : (o.relative || o.undo(e.extract()), e = e.multiply(o.at(a.ease(this.pos))))
                                  }
                                  n.matrix(e)
                              }
                              return this
                          },
                          once: function(e, t, i) {
                              var n = this.last();
                              return i || (e = n.ease(e)), n.once[e] = t, this
                          },
                          _callStart: function() {
                              return setTimeout(function() {
                                  this.start()
                              }.bind(this), 0), this
                          }
                      },
                      parent: i.Element,
                      construct: {
                          animate: function(e, t, n) {
                              return (this.fx || (this.fx = new i.FX(this))).animate(e, t, n)
                          },
                          delay: function(e) {
                              return (this.fx || (this.fx = new i.FX(this))).delay(e)
                          },
                          stop: function(e, t) {
                              return this.fx && this.fx.stop(e, t), this
                          },
                          finish: function() {
                              return this.fx && this.fx.finish(), this
                          }
                      }
                  }), i.MorphObj = i.invent({
                      create: function(e, t) {
                          return i.Color.isColor(t) ? new i.Color(e).morph(t) : i.regex.delimiter.test(e) ? i.regex.pathLetters.test(e) ? new i.PathArray(e).morph(t) : new i.Array(e).morph(t) : i.regex.numberAndUnit.test(t) ? new i.Number(e).morph(t) : (this.value = e, void(this.destination = t))
                      },
                      extend: {
                          at: function(e, t) {
                              return t < 1 ? this.value : this.destination
                          },
                          valueOf: function() {
                              return this.value
                          }
                      }
                  }), i.extend(i.FX, {
                      attr: function(e, t, i) {
                          if ("object" === s(e))
                              for (var n in e) this.attr(n, e[n]);
                          else this.add(e, t, "attrs");
                          return this
                      },
                      plot: function(e, t, i, n) {
                          return 4 == arguments.length ? this.plot([e, t, i, n]) : this.add("plot", new(this.target().morphArray)(e))
                      }
                  }), i.Box = i.invent({
                      create: function(e, t, n, a) {
                          if (!("object" !== s(e) || e instanceof i.Element)) return i.Box.call(this, null != e.left ? e.left : e.x, null != e.top ? e.top : e.y, e.width, e.height);
                          4 == arguments.length && (this.x = e, this.y = t, this.width = n, this.height = a), v(this)
                      }
                  }), i.BBox = i.invent({
                      create: function(e) {
                          if (i.Box.apply(this, [].slice.call(arguments)), e instanceof i.Element) {
                              var n;
                              try {
                                  if (!t.documentElement.contains) {
                                      for (var a = e.node; a.parentNode;) a = a.parentNode;
                                      if (a != t) throw new Error("Element not in the dom")
                                  }
                                  n = e.node.getBBox()
                              } catch (t) {
                                  if (e instanceof i.Shape) {
                                      i.parser.draw || i.prepare();
                                      var r = e.clone(i.parser.draw.instance).show();
                                      r && r.node && "function" == typeof r.node.getBBox && (n = r.node.getBBox()), r && "function" == typeof r.remove && r.remove()
                                  } else n = {
                                      x: e.node.clientLeft,
                                      y: e.node.clientTop,
                                      width: e.node.clientWidth,
                                      height: e.node.clientHeight
                                  }
                              }
                              i.Box.call(this, n)
                          }
                      },
                      inherit: i.Box,
                      parent: i.Element,
                      construct: {
                          bbox: function() {
                              return new i.BBox(this)
                          }
                      }
                  }), i.BBox.prototype.constructor = i.BBox, i.Matrix = i.invent({
                      create: function(e) {
                          var t = g([1, 0, 0, 1, 0, 0]);
                          e = null === e ? t : e instanceof i.Element ? e.matrixify() : "string" == typeof e ? g(e.split(i.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? g([].slice.call(arguments)) : Array.isArray(e) ? g(e) : e && "object" === s(e) ? e : t;
                          for (var n = b.length - 1; n >= 0; --n) this[b[n]] = null != e[b[n]] ? e[b[n]] : t[b[n]]
                      },
                      extend: {
                          extract: function() {
                              var e = p(this, 0, 1);
                              p(this, 1, 0);
                              var t = 180 / Math.PI * Math.atan2(e.y, e.x) - 90;
                              return {
                                  x: this.e,
                                  y: this.f,
                                  transformedX: (this.e * Math.cos(t * Math.PI / 180) + this.f * Math.sin(t * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                                  transformedY: (this.f * Math.cos(t * Math.PI / 180) + this.e * Math.sin(-t * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                                  rotation: t,
                                  a: this.a,
                                  b: this.b,
                                  c: this.c,
                                  d: this.d,
                                  e: this.e,
                                  f: this.f,
                                  matrix: new i.Matrix(this)
                              }
                          },
                          clone: function() {
                              return new i.Matrix(this)
                          },
                          morph: function(e) {
                              return this.destination = new i.Matrix(e), this
                          },
                          multiply: function(e) {
                              return new i.Matrix(this.native().multiply(function(e) {
                                  return e instanceof i.Matrix || (e = new i.Matrix(e)), e
                              }(e).native()))
                          },
                          inverse: function() {
                              return new i.Matrix(this.native().inverse())
                          },
                          translate: function(e, t) {
                              return new i.Matrix(this.native().translate(e || 0, t || 0))
                          },
                          native: function() {
                              for (var e = i.parser.native.createSVGMatrix(), t = b.length - 1; t >= 0; t--) e[b[t]] = this[b[t]];
                              return e
                          },
                          toString: function() {
                              return "matrix(" + m(this.a) + "," + m(this.b) + "," + m(this.c) + "," + m(this.d) + "," + m(this.e) + "," + m(this.f) + ")"
                          }
                      },
                      parent: i.Element,
                      construct: {
                          ctm: function() {
                              return new i.Matrix(this.node.getCTM())
                          },
                          screenCTM: function() {
                              if (this instanceof i.Nested) {
                                  var e = this.rect(1, 1),
                                      t = e.node.getScreenCTM();
                                  return e.remove(), new i.Matrix(t)
                              }
                              return new i.Matrix(this.node.getScreenCTM())
                          }
                      }
                  }), i.Point = i.invent({
                      create: function(e, t) {
                          var i;
                          i = Array.isArray(e) ? {
                              x: e[0],
                              y: e[1]
                          } : "object" === s(e) ? {
                              x: e.x,
                              y: e.y
                          } : null != e ? {
                              x: e,
                              y: null != t ? t : e
                          } : {
                              x: 0,
                              y: 0
                          }, this.x = i.x, this.y = i.y
                      },
                      extend: {
                          clone: function() {
                              return new i.Point(this)
                          },
                          morph: function(e, t) {
                              return this.destination = new i.Point(e, t), this
                          }
                      }
                  }), i.extend(i.Element, {
                      point: function(e, t) {
                          return new i.Point(e, t).transform(this.screenCTM().inverse())
                      }
                  }), i.extend(i.Element, {
                      attr: function(e, t, n) {
                          if (null == e) {
                              for (e = {}, n = (t = this.node.attributes).length - 1; n >= 0; n--) e[t[n].nodeName] = i.regex.isNumber.test(t[n].nodeValue) ? parseFloat(t[n].nodeValue) : t[n].nodeValue;
                              return e
                          }
                          if ("object" === s(e))
                              for (var a in e) this.attr(a, e[a]);
                          else if (null === t) this.node.removeAttribute(e);
                          else {
                              if (null == t) return null == (t = this.node.getAttribute(e)) ? i.defaults.attrs[e] : i.regex.isNumber.test(t) ? parseFloat(t) : t;
                              "stroke-width" == e ? this.attr("stroke", parseFloat(t) > 0 ? this._stroke : null) : "stroke" == e && (this._stroke = t), "fill" != e && "stroke" != e || (i.regex.isImage.test(t) && (t = this.doc().defs().image(t, 0, 0)), t instanceof i.Image && (t = this.doc().defs().pattern(0, 0, (function() {
                                  this.add(t)
                              })))), "number" == typeof t ? t = new i.Number(t) : i.Color.isColor(t) ? t = new i.Color(t) : Array.isArray(t) && (t = new i.Array(t)), "leading" == e ? this.leading && this.leading(t) : "string" == typeof n ? this.node.setAttributeNS(n, e, t.toString()) : this.node.setAttribute(e, t.toString()), !this.rebuild || "font-size" != e && "x" != e || this.rebuild(e, t)
                          }
                          return this
                      }
                  }), i.extend(i.Element, {
                      transform: function(e, t) {
                          var n;
                          return "object" !== s(e) ? (n = new i.Matrix(this).extract(), "string" == typeof e ? n[e] : n) : (n = new i.Matrix(this), t = !!t || !!e.relative, null != e.a && (n = t ? n.multiply(new i.Matrix(e)) : new i.Matrix(e)), this.attr("transform", n))
                      }
                  }), i.extend(i.Element, {
                      untransform: function() {
                          return this.attr("transform", null)
                      },
                      matrixify: function() {
                          return (this.attr("transform") || "").split(i.regex.transforms).slice(0, -1).map((function(e) {
                              var t = e.trim().split("(");
                              return [t[0], t[1].split(i.regex.delimiter).map((function(e) {
                                  return parseFloat(e)
                              }))]
                          })).reduce((function(e, t) {
                              return "matrix" == t[0] ? e.multiply(g(t[1])) : e[t[0]].apply(e, t[1])
                          }), new i.Matrix)
                      },
                      toParent: function(e) {
                          if (this == e) return this;
                          var t = this.screenCTM(),
                              i = e.screenCTM().inverse();
                          return this.addTo(e).untransform().transform(i.multiply(t)), this
                      },
                      toDoc: function() {
                          return this.toParent(this.doc())
                      }
                  }), i.Transformation = i.invent({
                      create: function(e, t) {
                          if (arguments.length > 1 && "boolean" != typeof t) return this.constructor.call(this, [].slice.call(arguments));
                          if (Array.isArray(e))
                              for (var i = 0, n = this.arguments.length; i < n; ++i) this[this.arguments[i]] = e[i];
                          else if (e && "object" === s(e))
                              for (i = 0, n = this.arguments.length; i < n; ++i) this[this.arguments[i]] = e[this.arguments[i]];
                          this.inversed = !1, !0 === t && (this.inversed = !0)
                      }
                  }), i.Translate = i.invent({
                      parent: i.Matrix,
                      inherit: i.Transformation,
                      create: function(e, t) {
                          this.constructor.apply(this, [].slice.call(arguments))
                      },
                      extend: {
                          arguments: ["transformedX", "transformedY"],
                          method: "translate"
                      }
                  }), i.extend(i.Element, {
                      style: function(e, t) {
                          if (0 == arguments.length) return this.node.style.cssText || "";
                          if (arguments.length < 2)
                              if ("object" === s(e))
                                  for (var n in e) this.style(n, e[n]);
                              else {
                                  if (!i.regex.isCss.test(e)) return this.node.style[h(e)];
                                  for (e = e.split(/\s*;\s*/).filter((function(e) {
                                          return !!e
                                      })).map((function(e) {
                                          return e.split(/\s*:\s*/)
                                      })); t = e.pop();) this.style(t[0], t[1])
                              }
                          else this.node.style[h(e)] = null === t || i.regex.isBlank.test(t) ? "" : t;
                          return this
                      }
                  }), i.Parent = i.invent({
                      create: function(e) {
                          this.constructor.call(this, e)
                      },
                      inherit: i.Element,
                      extend: {
                          children: function() {
                              return i.utils.map(i.utils.filterSVGElements(this.node.childNodes), (function(e) {
                                  return i.adopt(e)
                              }))
                          },
                          add: function(e, t) {
                              return null == t ? this.node.appendChild(e.node) : e.node != this.node.childNodes[t] && this.node.insertBefore(e.node, this.node.childNodes[t]), this
                          },
                          put: function(e, t) {
                              return this.add(e, t), e
                          },
                          has: function(e) {
                              return this.index(e) >= 0
                          },
                          index: function(e) {
                              return [].slice.call(this.node.childNodes).indexOf(e.node)
                          },
                          get: function(e) {
                              return i.adopt(this.node.childNodes[e])
                          },
                          first: function() {
                              return this.get(0)
                          },
                          last: function() {
                              return this.get(this.node.childNodes.length - 1)
                          },
                          each: function(e, t) {
                              for (var n = this.children(), a = 0, r = n.length; a < r; a++) n[a] instanceof i.Element && e.apply(n[a], [a, n]), t && n[a] instanceof i.Container && n[a].each(e, t);
                              return this
                          },
                          removeElement: function(e) {
                              return this.node.removeChild(e.node), this
                          },
                          clear: function() {
                              for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                              return delete this._defs, this
                          },
                          defs: function() {
                              return this.doc().defs()
                          }
                      }
                  }), i.extend(i.Parent, {
                      ungroup: function(e, t) {
                          return 0 === t || this instanceof i.Defs || this.node == i.parser.draw || (e = e || (this instanceof i.Doc ? this : this.parent(i.Parent)), t = t || 1 / 0, this.each((function() {
                              return this instanceof i.Defs ? this : this instanceof i.Parent ? this.ungroup(e, t - 1) : this.toParent(e)
                          })), this.node.firstChild || this.remove()), this
                      },
                      flatten: function(e, t) {
                          return this.ungroup(e, t)
                      }
                  }), i.Container = i.invent({
                      create: function(e) {
                          this.constructor.call(this, e)
                      },
                      inherit: i.Parent
                  }), i.ViewBox = i.invent({
                      parent: i.Container,
                      construct: {}
                  }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach((function(e) {
                      i.Element.prototype[e] = function(t) {
                          return i.on(this.node, e, t), this
                      }
                  })), i.listeners = [], i.handlerMap = [], i.listenerId = 0, i.on = function(e, t, n, a, r) {
                      var s = n.bind(a || e.instance || e),
                          o = (i.handlerMap.indexOf(e) + 1 || i.handlerMap.push(e)) - 1,
                          l = t.split(".")[0],
                          c = t.split(".")[1] || "*";
                      i.listeners[o] = i.listeners[o] || {}, i.listeners[o][l] = i.listeners[o][l] || {}, i.listeners[o][l][c] = i.listeners[o][l][c] || {}, n._svgjsListenerId || (n._svgjsListenerId = ++i.listenerId), i.listeners[o][l][c][n._svgjsListenerId] = s, e.addEventListener(l, s, r || {
                          passive: !0
                      })
                  }, i.off = function(e, t, n) {
                      var a = i.handlerMap.indexOf(e),
                          r = t && t.split(".")[0],
                          s = t && t.split(".")[1],
                          o = "";
                      if (-1 != a)
                          if (n) {
                              if ("function" == typeof n && (n = n._svgjsListenerId), !n) return;
                              i.listeners[a][r] && i.listeners[a][r][s || "*"] && (e.removeEventListener(r, i.listeners[a][r][s || "*"][n], !1), delete i.listeners[a][r][s || "*"][n])
                          } else if (s && r) {
                          if (i.listeners[a][r] && i.listeners[a][r][s]) {
                              for (var l in i.listeners[a][r][s]) i.off(e, [r, s].join("."), l);
                              delete i.listeners[a][r][s]
                          }
                      } else if (s)
                          for (var c in i.listeners[a])
                              for (var o in i.listeners[a][c]) s === o && i.off(e, [c, s].join("."));
                      else if (r) {
                          if (i.listeners[a][r]) {
                              for (var o in i.listeners[a][r]) i.off(e, [r, o].join("."));
                              delete i.listeners[a][r]
                          }
                      } else {
                          for (var c in i.listeners[a]) i.off(e, c);
                          delete i.listeners[a], delete i.handlerMap[a]
                      }
                  }, i.extend(i.Element, {
                      on: function(e, t, n, a) {
                          return i.on(this.node, e, t, n, a), this
                      },
                      off: function(e, t) {
                          return i.off(this.node, e, t), this
                      },
                      fire: function(t, n) {
                          return t instanceof e.Event ? this.node.dispatchEvent(t) : this.node.dispatchEvent(t = new i.CustomEvent(t, {
                              detail: n,
                              cancelable: !0
                          })), this._event = t, this
                      },
                      event: function() {
                          return this._event
                      }
                  }), i.Defs = i.invent({
                      create: "defs",
                      inherit: i.Container
                  }), i.G = i.invent({
                      create: "g",
                      inherit: i.Container,
                      extend: {
                          x: function(e) {
                              return null == e ? this.transform("x") : this.transform({
                                  x: e - this.x()
                              }, !0)
                          }
                      },
                      construct: {
                          group: function() {
                              return this.put(new i.G)
                          }
                      }
                  }), i.Doc = i.invent({
                      create: function(e) {
                          e && ("svg" == (e = "string" == typeof e ? t.getElementById(e) : e).nodeName ? this.constructor.call(this, e) : (this.constructor.call(this, i.create("svg")), e.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs())
                      },
                      inherit: i.Container,
                      extend: {
                          namespace: function() {
                              return this.attr({
                                  xmlns: i.ns,
                                  version: "1.1"
                              }).attr("xmlns:xlink", i.xlink, i.xmlns).attr("xmlns:svgjs", i.svgjs, i.xmlns)
                          },
                          defs: function() {
                              var e;
                              return this._defs || ((e = this.node.getElementsByTagName("defs")[0]) ? this._defs = i.adopt(e) : this._defs = new i.Defs, this.node.appendChild(this._defs.node)), this._defs
                          },
                          parent: function() {
                              return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                          },
                          remove: function() {
                              return this.parent() && this.parent().removeChild(this.node), this
                          },
                          clear: function() {
                              for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                              return delete this._defs, i.parser.draw && !i.parser.draw.parentNode && this.node.appendChild(i.parser.draw), this
                          },
                          clone: function(e) {
                              this.writeDataToDom();
                              var t = this.node,
                                  i = x(t.cloneNode(!0));
                              return e ? (e.node || e).appendChild(i.node) : t.parentNode.insertBefore(i.node, t.nextSibling), i
                          }
                      }
                  }), i.extend(i.Element, {}), i.Gradient = i.invent({
                      create: function(e) {
                          this.constructor.call(this, i.create(e + "Gradient")), this.type = e
                      },
                      inherit: i.Container,
                      extend: {
                          at: function(e, t, n) {
                              return this.put(new i.Stop).update(e, t, n)
                          },
                          update: function(e) {
                              return this.clear(), "function" == typeof e && e.call(this, this), this
                          },
                          fill: function() {
                              return "url(#" + this.id() + ")"
                          },
                          toString: function() {
                              return this.fill()
                          },
                          attr: function(e, t, n) {
                              return "transform" == e && (e = "gradientTransform"), i.Container.prototype.attr.call(this, e, t, n)
                          }
                      },
                      construct: {
                          gradient: function(e, t) {
                              return this.defs().gradient(e, t)
                          }
                      }
                  }), i.extend(i.Gradient, i.FX, {
                      from: function(e, t) {
                          return "radial" == (this._target || this).type ? this.attr({
                              fx: new i.Number(e),
                              fy: new i.Number(t)
                          }) : this.attr({
                              x1: new i.Number(e),
                              y1: new i.Number(t)
                          })
                      },
                      to: function(e, t) {
                          return "radial" == (this._target || this).type ? this.attr({
                              cx: new i.Number(e),
                              cy: new i.Number(t)
                          }) : this.attr({
                              x2: new i.Number(e),
                              y2: new i.Number(t)
                          })
                      }
                  }), i.extend(i.Defs, {
                      gradient: function(e, t) {
                          return this.put(new i.Gradient(e)).update(t)
                      }
                  }), i.Stop = i.invent({
                      create: "stop",
                      inherit: i.Element,
                      extend: {
                          update: function(e) {
                              return ("number" == typeof e || e instanceof i.Number) && (e = {
                                  offset: arguments[0],
                                  color: arguments[1],
                                  opacity: arguments[2]
                              }), null != e.opacity && this.attr("stop-opacity", e.opacity), null != e.color && this.attr("stop-color", e.color), null != e.offset && this.attr("offset", new i.Number(e.offset)), this
                          }
                      }
                  }), i.Pattern = i.invent({
                      create: "pattern",
                      inherit: i.Container,
                      extend: {
                          fill: function() {
                              return "url(#" + this.id() + ")"
                          },
                          update: function(e) {
                              return this.clear(), "function" == typeof e && e.call(this, this), this
                          },
                          toString: function() {
                              return this.fill()
                          },
                          attr: function(e, t, n) {
                              return "transform" == e && (e = "patternTransform"), i.Container.prototype.attr.call(this, e, t, n)
                          }
                      },
                      construct: {
                          pattern: function(e, t, i) {
                              return this.defs().pattern(e, t, i)
                          }
                      }
                  }), i.extend(i.Defs, {
                      pattern: function(e, t, n) {
                          return this.put(new i.Pattern).update(n).attr({
                              x: 0,
                              y: 0,
                              width: e,
                              height: t,
                              patternUnits: "userSpaceOnUse"
                          })
                      }
                  }), i.Shape = i.invent({
                      create: function(e) {
                          this.constructor.call(this, e)
                      },
                      inherit: i.Element
                  }), i.Symbol = i.invent({
                      create: "symbol",
                      inherit: i.Container,
                      construct: {
                          symbol: function() {
                              return this.put(new i.Symbol)
                          }
                      }
                  }), i.Use = i.invent({
                      create: "use",
                      inherit: i.Shape,
                      extend: {
                          element: function(e, t) {
                              return this.attr("href", (t || "") + "#" + e, i.xlink)
                          }
                      },
                      construct: {
                          use: function(e, t) {
                              return this.put(new i.Use).element(e, t)
                          }
                      }
                  }), i.Rect = i.invent({
                      create: "rect",
                      inherit: i.Shape,
                      construct: {
                          rect: function(e, t) {
                              return this.put(new i.Rect).size(e, t)
                          }
                      }
                  }), i.Circle = i.invent({
                      create: "circle",
                      inherit: i.Shape,
                      construct: {
                          circle: function(e) {
                              return this.put(new i.Circle).rx(new i.Number(e).divide(2)).move(0, 0)
                          }
                      }
                  }), i.extend(i.Circle, i.FX, {
                      rx: function(e) {
                          return this.attr("r", e)
                      },
                      ry: function(e) {
                          return this.rx(e)
                      }
                  }), i.Ellipse = i.invent({
                      create: "ellipse",
                      inherit: i.Shape,
                      construct: {
                          ellipse: function(e, t) {
                              return this.put(new i.Ellipse).size(e, t).move(0, 0)
                          }
                      }
                  }), i.extend(i.Ellipse, i.Rect, i.FX, {
                      rx: function(e) {
                          return this.attr("rx", e)
                      },
                      ry: function(e) {
                          return this.attr("ry", e)
                      }
                  }), i.extend(i.Circle, i.Ellipse, {
                      x: function(e) {
                          return null == e ? this.cx() - this.rx() : this.cx(e + this.rx())
                      },
                      y: function(e) {
                          return null == e ? this.cy() - this.ry() : this.cy(e + this.ry())
                      },
                      cx: function(e) {
                          return null == e ? this.attr("cx") : this.attr("cx", e)
                      },
                      cy: function(e) {
                          return null == e ? this.attr("cy") : this.attr("cy", e)
                      },
                      width: function(e) {
                          return null == e ? 2 * this.rx() : this.rx(new i.Number(e).divide(2))
                      },
                      height: function(e) {
                          return null == e ? 2 * this.ry() : this.ry(new i.Number(e).divide(2))
                      },
                      size: function(e, t) {
                          var n = f(this, e, t);
                          return this.rx(new i.Number(n.width).divide(2)).ry(new i.Number(n.height).divide(2))
                      }
                  }), i.Line = i.invent({
                      create: "line",
                      inherit: i.Shape,
                      extend: {
                          array: function() {
                              return new i.PointArray([
                                  [this.attr("x1"), this.attr("y1")],
                                  [this.attr("x2"), this.attr("y2")]
                              ])
                          },
                          plot: function(e, t, n, a) {
                              return null == e ? this.array() : (e = void 0 !== t ? {
                                  x1: e,
                                  y1: t,
                                  x2: n,
                                  y2: a
                              } : new i.PointArray(e).toLine(), this.attr(e))
                          },
                          move: function(e, t) {
                              return this.attr(this.array().move(e, t).toLine())
                          },
                          size: function(e, t) {
                              var i = f(this, e, t);
                              return this.attr(this.array().size(i.width, i.height).toLine())
                          }
                      },
                      construct: {
                          line: function(e, t, n, a) {
                              return i.Line.prototype.plot.apply(this.put(new i.Line), null != e ? [e, t, n, a] : [0, 0, 0, 0])
                          }
                      }
                  }), i.Polyline = i.invent({
                      create: "polyline",
                      inherit: i.Shape,
                      construct: {
                          polyline: function(e) {
                              return this.put(new i.Polyline).plot(e || new i.PointArray)
                          }
                      }
                  }), i.Polygon = i.invent({
                      create: "polygon",
                      inherit: i.Shape,
                      construct: {
                          polygon: function(e) {
                              return this.put(new i.Polygon).plot(e || new i.PointArray)
                          }
                      }
                  }), i.extend(i.Polyline, i.Polygon, {
                      array: function() {
                          return this._array || (this._array = new i.PointArray(this.attr("points")))
                      },
                      plot: function(e) {
                          return null == e ? this.array() : this.clear().attr("points", "string" == typeof e ? e : this._array = new i.PointArray(e))
                      },
                      clear: function() {
                          return delete this._array, this
                      },
                      move: function(e, t) {
                          return this.attr("points", this.array().move(e, t))
                      },
                      size: function(e, t) {
                          var i = f(this, e, t);
                          return this.attr("points", this.array().size(i.width, i.height))
                      }
                  }), i.extend(i.Line, i.Polyline, i.Polygon, {
                      morphArray: i.PointArray,
                      x: function(e) {
                          return null == e ? this.bbox().x : this.move(e, this.bbox().y)
                      },
                      y: function(e) {
                          return null == e ? this.bbox().y : this.move(this.bbox().x, e)
                      },
                      width: function(e) {
                          var t = this.bbox();
                          return null == e ? t.width : this.size(e, t.height)
                      },
                      height: function(e) {
                          var t = this.bbox();
                          return null == e ? t.height : this.size(t.width, e)
                      }
                  }), i.Path = i.invent({
                      create: "path",
                      inherit: i.Shape,
                      extend: {
                          morphArray: i.PathArray,
                          array: function() {
                              return this._array || (this._array = new i.PathArray(this.attr("d")))
                          },
                          plot: function(e) {
                              return null == e ? this.array() : this.clear().attr("d", "string" == typeof e ? e : this._array = new i.PathArray(e))
                          },
                          clear: function() {
                              return delete this._array, this
                          }
                      },
                      construct: {
                          path: function(e) {
                              return this.put(new i.Path).plot(e || new i.PathArray)
                          }
                      }
                  }), i.Image = i.invent({
                      create: "image",
                      inherit: i.Shape,
                      extend: {
                          load: function(t) {
                              if (!t) return this;
                              var n = this,
                                  a = new e.Image;
                              return i.on(a, "load", (function() {
                                  i.off(a);
                                  var e = n.parent(i.Pattern);
                                  null !== e && (0 == n.width() && 0 == n.height() && n.size(a.width, a.height), e && 0 == e.width() && 0 == e.height() && e.size(n.width(), n.height()), "function" == typeof n._loaded && n._loaded.call(n, {
                                      width: a.width,
                                      height: a.height,
                                      ratio: a.width / a.height,
                                      url: t
                                  }))
                              })), i.on(a, "error", (function(e) {
                                  i.off(a), "function" == typeof n._error && n._error.call(n, e)
                              })), this.attr("href", a.src = this.src = t, i.xlink)
                          },
                          loaded: function(e) {
                              return this._loaded = e, this
                          },
                          error: function(e) {
                              return this._error = e, this
                          }
                      },
                      construct: {
                          image: function(e, t, n) {
                              return this.put(new i.Image).load(e).size(t || 0, n || t || 0)
                          }
                      }
                  }), i.Text = i.invent({
                      create: function() {
                          this.constructor.call(this, i.create("text")), this.dom.leading = new i.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", i.defaults.attrs["font-family"])
                      },
                      inherit: i.Shape,
                      extend: {
                          x: function(e) {
                              return null == e ? this.attr("x") : this.attr("x", e)
                          },
                          text: function(e) {
                              if (void 0 === e) {
                                  e = "";
                                  for (var t = this.node.childNodes, n = 0, a = t.length; n < a; ++n) 0 != n && 3 != t[n].nodeType && 1 == i.adopt(t[n]).dom.newLined && (e += "\n"), e += t[n].textContent;
                                  return e
                              }
                              if (this.clear().build(!0), "function" == typeof e) e.call(this, this);
                              else {
                                  n = 0;
                                  for (var r = (e = e.split("\n")).length; n < r; n++) this.tspan(e[n]).newLine()
                              }
                              return this.build(!1).rebuild()
                          },
                          size: function(e) {
                              return this.attr("font-size", e).rebuild()
                          },
                          leading: function(e) {
                              return null == e ? this.dom.leading : (this.dom.leading = new i.Number(e), this.rebuild())
                          },
                          lines: function() {
                              var e = (this.textPath && this.textPath() || this).node,
                                  t = i.utils.map(i.utils.filterSVGElements(e.childNodes), (function(e) {
                                      return i.adopt(e)
                                  }));
                              return new i.Set(t)
                          },
                          rebuild: function(e) {
                              if ("boolean" == typeof e && (this._rebuild = e), this._rebuild) {
                                  var t = this,
                                      n = 0,
                                      a = this.dom.leading * new i.Number(this.attr("font-size"));
                                  this.lines().each((function() {
                                      this.dom.newLined && (t.textPath() || this.attr("x", t.attr("x")), "\n" == this.text() ? n += a : (this.attr("dy", a + n), n = 0))
                                  })), this.fire("rebuild")
                              }
                              return this
                          },
                          build: function(e) {
                              return this._build = !!e, this
                          },
                          setData: function(e) {
                              return this.dom = e, this.dom.leading = new i.Number(e.leading || 1.3), this
                          }
                      },
                      construct: {
                          text: function(e) {
                              return this.put(new i.Text).text(e)
                          },
                          plain: function(e) {
                              return this.put(new i.Text).plain(e)
                          }
                      }
                  }), i.Tspan = i.invent({
                      create: "tspan",
                      inherit: i.Shape,
                      extend: {
                          text: function(e) {
                              return null == e ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof e ? e.call(this, this) : this.plain(e), this)
                          },
                          dx: function(e) {
                              return this.attr("dx", e)
                          },
                          dy: function(e) {
                              return this.attr("dy", e)
                          },
                          newLine: function() {
                              var e = this.parent(i.Text);
                              return this.dom.newLined = !0, this.dy(e.dom.leading * e.attr("font-size")).attr("x", e.x())
                          }
                      }
                  }), i.extend(i.Text, i.Tspan, {
                      plain: function(e) {
                          return !1 === this._build && this.clear(), this.node.appendChild(t.createTextNode(e)), this
                      },
                      tspan: function(e) {
                          var t = (this.textPath && this.textPath() || this).node,
                              n = new i.Tspan;
                          return !1 === this._build && this.clear(), t.appendChild(n.node), n.text(e)
                      },
                      clear: function() {
                          for (var e = (this.textPath && this.textPath() || this).node; e.hasChildNodes();) e.removeChild(e.lastChild);
                          return this
                      },
                      length: function() {
                          return this.node.getComputedTextLength()
                      }
                  }), i.TextPath = i.invent({
                      create: "textPath",
                      inherit: i.Parent,
                      parent: i.Text,
                      construct: {
                          morphArray: i.PathArray,
                          array: function() {
                              var e = this.track();
                              return e ? e.array() : null
                          },
                          plot: function(e) {
                              var t = this.track(),
                                  i = null;
                              return t && (i = t.plot(e)), null == e ? i : this
                          },
                          track: function() {
                              var e = this.textPath();
                              if (e) return e.reference("href")
                          },
                          textPath: function() {
                              if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return i.adopt(this.node.firstChild)
                          }
                      }
                  }), i.Nested = i.invent({
                      create: function() {
                          this.constructor.call(this, i.create("svg")), this.style("overflow", "visible")
                      },
                      inherit: i.Container,
                      construct: {
                          nested: function() {
                              return this.put(new i.Nested)
                          }
                      }
                  });
                  var l = {
                      stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
                      fill: ["color", "opacity", "rule"],
                      prefix: function(e, t) {
                          return "color" == t ? e : e + "-" + t
                      }
                  };

                  function c(e, t, n, a) {
                      return n + a.replace(i.regex.dots, " .")
                  }

                  function h(e) {
                      return e.toLowerCase().replace(/-(.)/g, (function(e, t) {
                          return t.toUpperCase()
                      }))
                  }

                  function u(e) {
                      return e.charAt(0).toUpperCase() + e.slice(1)
                  }

                  function d(e) {
                      var t = e.toString(16);
                      return 1 == t.length ? "0" + t : t
                  }

                  function f(e, t, i) {
                      if (null == t || null == i) {
                          var n = e.bbox();
                          null == t ? t = n.width / n.height * i : null == i && (i = n.height / n.width * t)
                      }
                      return {
                          width: t,
                          height: i
                      }
                  }

                  function p(e, t, i) {
                      return {
                          x: t * e.a + i * e.c + 0,
                          y: t * e.b + i * e.d + 0
                      }
                  }

                  function g(e) {
                      return {
                          a: e[0],
                          b: e[1],
                          c: e[2],
                          d: e[3],
                          e: e[4],
                          f: e[5]
                      }
                  }

                  function x(t) {
                      for (var n = t.childNodes.length - 1; n >= 0; n--) t.childNodes[n] instanceof e.SVGElement && x(t.childNodes[n]);
                      return i.adopt(t).id(i.eid(t.nodeName))
                  }

                  function v(e) {
                      return null == e.x && (e.x = 0, e.y = 0, e.width = 0, e.height = 0), e.w = e.width, e.h = e.height, e.x2 = e.x + e.width, e.y2 = e.y + e.height, e.cx = e.x + e.width / 2, e.cy = e.y + e.height / 2, e
                  }

                  function m(e) {
                      return Math.abs(e) > 1e-37 ? e : 0
                  } ["fill", "stroke"].forEach((function(e) {
                      var t = {};
                      t[e] = function(t) {
                          if (void 0 === t) return this;
                          if ("string" == typeof t || i.Color.isRgb(t) || t && "function" == typeof t.fill) this.attr(e, t);
                          else
                              for (var n = l[e].length - 1; n >= 0; n--) null != t[l[e][n]] && this.attr(l.prefix(e, l[e][n]), t[l[e][n]]);
                          return this
                      }, i.extend(i.Element, i.FX, t)
                  })), i.extend(i.Element, i.FX, {
                      translate: function(e, t) {
                          return this.transform({
                              x: e,
                              y: t
                          })
                      },
                      matrix: function(e) {
                          return this.attr("transform", new i.Matrix(6 == arguments.length ? [].slice.call(arguments) : e))
                      },
                      opacity: function(e) {
                          return this.attr("opacity", e)
                      },
                      dx: function(e) {
                          return this.x(new i.Number(e).plus(this instanceof i.FX ? 0 : this.x()), !0)
                      },
                      dy: function(e) {
                          return this.y(new i.Number(e).plus(this instanceof i.FX ? 0 : this.y()), !0)
                      }
                  }), i.extend(i.Path, {
                      length: function() {
                          return this.node.getTotalLength()
                      },
                      pointAt: function(e) {
                          return this.node.getPointAtLength(e)
                      }
                  }), i.Set = i.invent({
                      create: function(e) {
                          Array.isArray(e) ? this.members = e : this.clear()
                      },
                      extend: {
                          add: function() {
                              for (var e = [].slice.call(arguments), t = 0, i = e.length; t < i; t++) this.members.push(e[t]);
                              return this
                          },
                          remove: function(e) {
                              var t = this.index(e);
                              return t > -1 && this.members.splice(t, 1), this
                          },
                          each: function(e) {
                              for (var t = 0, i = this.members.length; t < i; t++) e.apply(this.members[t], [t, this.members]);
                              return this
                          },
                          clear: function() {
                              return this.members = [], this
                          },
                          length: function() {
                              return this.members.length
                          },
                          has: function(e) {
                              return this.index(e) >= 0
                          },
                          index: function(e) {
                              return this.members.indexOf(e)
                          },
                          get: function(e) {
                              return this.members[e]
                          },
                          first: function() {
                              return this.get(0)
                          },
                          last: function() {
                              return this.get(this.members.length - 1)
                          },
                          valueOf: function() {
                              return this.members
                          }
                      },
                      construct: {
                          set: function(e) {
                              return new i.Set(e)
                          }
                      }
                  }), i.FX.Set = i.invent({
                      create: function(e) {
                          this.set = e
                      }
                  }), i.Set.inherit = function() {
                      var e = [];
                      for (var t in i.Shape.prototype) "function" == typeof i.Shape.prototype[t] && "function" != typeof i.Set.prototype[t] && e.push(t);
                      for (var t in e.forEach((function(e) {
                              i.Set.prototype[e] = function() {
                                  for (var t = 0, n = this.members.length; t < n; t++) this.members[t] && "function" == typeof this.members[t][e] && this.members[t][e].apply(this.members[t], arguments);
                                  return "animate" == e ? this.fx || (this.fx = new i.FX.Set(this)) : this
                              }
                          })), e = [], i.FX.prototype) "function" == typeof i.FX.prototype[t] && "function" != typeof i.FX.Set.prototype[t] && e.push(t);
                      e.forEach((function(e) {
                          i.FX.Set.prototype[e] = function() {
                              for (var t = 0, i = this.set.members.length; t < i; t++) this.set.members[t].fx[e].apply(this.set.members[t].fx, arguments);
                              return this
                          }
                      }))
                  }, i.extend(i.Element, {}), i.extend(i.Element, {
                      remember: function(e, t) {
                          if ("object" === s(arguments[0]))
                              for (var i in e) this.remember(i, e[i]);
                          else {
                              if (1 == arguments.length) return this.memory()[e];
                              this.memory()[e] = t
                          }
                          return this
                      },
                      forget: function() {
                          if (0 == arguments.length) this._memory = {};
                          else
                              for (var e = arguments.length - 1; e >= 0; e--) delete this.memory()[arguments[e]];
                          return this
                      },
                      memory: function() {
                          return this._memory || (this._memory = {})
                      }
                  }), i.get = function(e) {
                      var n = t.getElementById(function(e) {
                          var t = (e || "").toString().match(i.regex.reference);
                          if (t) return t[1]
                      }(e) || e);
                      return i.adopt(n)
                  }, i.select = function(e, n) {
                      return new i.Set(i.utils.map((n || t).querySelectorAll(e), (function(e) {
                          return i.adopt(e)
                      })))
                  }, i.extend(i.Parent, {
                      select: function(e) {
                          return i.select(e, this.node)
                      }
                  });
                  var b = "abcdef".split("");
                  if ("function" != typeof e.CustomEvent) {
                      var y = function(e, i) {
                          i = i || {
                              bubbles: !1,
                              cancelable: !1,
                              detail: void 0
                          };
                          var n = t.createEvent("CustomEvent");
                          return n.initCustomEvent(e, i.bubbles, i.cancelable, i.detail), n
                      };
                      y.prototype = e.Event.prototype, i.CustomEvent = y
                  } else i.CustomEvent = e.CustomEvent;
                  return i
              }, n = function() {
                  return Fe(Oe, Oe.document)
              }.call(t, i, t, e), void 0 !== n && (e.exports = n),
              /*! svg.filter.js - v2.0.2 - 2016-02-24
               * https://github.com/wout/svg.filter.js
               * Copyright (c) 2016 Wout Fierens; Licensed MIT */
              function() {
                  SVG.Filter = SVG.invent({
                      create: "filter",
                      inherit: SVG.Parent,
                      extend: {
                          source: "SourceGraphic",
                          sourceAlpha: "SourceAlpha",
                          background: "BackgroundImage",
                          backgroundAlpha: "BackgroundAlpha",
                          fill: "FillPaint",
                          stroke: "StrokePaint",
                          autoSetIn: !0,
                          put: function(e, t) {
                              return this.add(e, t), !e.attr("in") && this.autoSetIn && e.attr("in", this.source), e.attr("result") || e.attr("result", e), e
                          },
                          blend: function(e, t, i) {
                              return this.put(new SVG.BlendEffect(e, t, i))
                          },
                          colorMatrix: function(e, t) {
                              return this.put(new SVG.ColorMatrixEffect(e, t))
                          },
                          convolveMatrix: function(e) {
                              return this.put(new SVG.ConvolveMatrixEffect(e))
                          },
                          componentTransfer: function(e) {
                              return this.put(new SVG.ComponentTransferEffect(e))
                          },
                          composite: function(e, t, i) {
                              return this.put(new SVG.CompositeEffect(e, t, i))
                          },
                          flood: function(e, t) {
                              return this.put(new SVG.FloodEffect(e, t))
                          },
                          offset: function(e, t) {
                              return this.put(new SVG.OffsetEffect(e, t))
                          },
                          image: function(e) {
                              return this.put(new SVG.ImageEffect(e))
                          },
                          merge: function() {
                              var e = [void 0];
                              for (var t in arguments) e.push(arguments[t]);
                              return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect, e)))
                          },
                          gaussianBlur: function(e, t) {
                              return this.put(new SVG.GaussianBlurEffect(e, t))
                          },
                          morphology: function(e, t) {
                              return this.put(new SVG.MorphologyEffect(e, t))
                          },
                          diffuseLighting: function(e, t, i) {
                              return this.put(new SVG.DiffuseLightingEffect(e, t, i))
                          },
                          displacementMap: function(e, t, i, n, a) {
                              return this.put(new SVG.DisplacementMapEffect(e, t, i, n, a))
                          },
                          specularLighting: function(e, t, i, n) {
                              return this.put(new SVG.SpecularLightingEffect(e, t, i, n))
                          },
                          tile: function() {
                              return this.put(new SVG.TileEffect)
                          },
                          turbulence: function(e, t, i, n, a) {
                              return this.put(new SVG.TurbulenceEffect(e, t, i, n, a))
                          },
                          toString: function() {
                              return "url(#" + this.attr("id") + ")"
                          }
                      }
                  }), SVG.extend(SVG.Defs, {
                      filter: function(e) {
                          var t = this.put(new SVG.Filter);
                          return "function" == typeof e && e.call(t, t), t
                      }
                  }), SVG.extend(SVG.Container, {
                      filter: function(e) {
                          return this.defs().filter(e)
                      }
                  }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
                      filter: function(e) {
                          return this.filterer = e instanceof SVG.Element ? e : this.doc().filter(e), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer
                      },
                      unfilter: function(e) {
                          return this.filterer && !0 === e && this.filterer.remove(), delete this.filterer, this.attr("filter", null)
                      }
                  }), SVG.Effect = SVG.invent({
                      create: function() {
                          this.constructor.call(this)
                      },
                      inherit: SVG.Element,
                      extend: {
                          in: function(e) {
                              return null == e ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", e)
                          },
                          result: function(e) {
                              return null == e ? this.attr("result") : this.attr("result", e)
                          },
                          toString: function() {
                              return this.result()
                          }
                      }
                  }), SVG.ParentEffect = SVG.invent({
                      create: function() {
                          this.constructor.call(this)
                      },
                      inherit: SVG.Parent,
                      extend: {
                          in: function(e) {
                              return null == e ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", e)
                          },
                          result: function(e) {
                              return null == e ? this.attr("result") : this.attr("result", e)
                          },
                          toString: function() {
                              return this.result()
                          }
                      }
                  });
                  var e = {
                      blend: function(e, t) {
                          return this.parent() && this.parent().blend(this, e, t)
                      },
                      colorMatrix: function(e, t) {
                          return this.parent() && this.parent().colorMatrix(e, t).in(this)
                      },
                      convolveMatrix: function(e) {
                          return this.parent() && this.parent().convolveMatrix(e).in(this)
                      },
                      componentTransfer: function(e) {
                          return this.parent() && this.parent().componentTransfer(e).in(this)
                      },
                      composite: function(e, t) {
                          return this.parent() && this.parent().composite(this, e, t)
                      },
                      flood: function(e, t) {
                          return this.parent() && this.parent().flood(e, t)
                      },
                      offset: function(e, t) {
                          return this.parent() && this.parent().offset(e, t).in(this)
                      },
                      image: function(e) {
                          return this.parent() && this.parent().image(e)
                      },
                      merge: function() {
                          return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments))
                      },
                      gaussianBlur: function(e, t) {
                          return this.parent() && this.parent().gaussianBlur(e, t).in(this)
                      },
                      morphology: function(e, t) {
                          return this.parent() && this.parent().morphology(e, t).in(this)
                      },
                      diffuseLighting: function(e, t, i) {
                          return this.parent() && this.parent().diffuseLighting(e, t, i).in(this)
                      },
                      displacementMap: function(e, t, i, n) {
                          return this.parent() && this.parent().displacementMap(this, e, t, i, n)
                      },
                      specularLighting: function(e, t, i, n) {
                          return this.parent() && this.parent().specularLighting(e, t, i, n).in(this)
                      },
                      tile: function() {
                          return this.parent() && this.parent().tile().in(this)
                      },
                      turbulence: function(e, t, i, n, a) {
                          return this.parent() && this.parent().turbulence(e, t, i, n, a).in(this)
                      }
                  };
                  SVG.extend(SVG.Effect, e), SVG.extend(SVG.ParentEffect, e), SVG.ChildEffect = SVG.invent({
                      create: function() {
                          this.constructor.call(this)
                      },
                      inherit: SVG.Element,
                      extend: {
                          in: function(e) {
                              this.attr("in", e)
                          }
                      }
                  });
                  var t = {
                          blend: function(e, t, i) {
                              this.attr({
                                  in: e,
                                  in2: t,
                                  mode: i || "normal"
                              })
                          },
                          colorMatrix: function(e, t) {
                              "matrix" == e && (t = a(t)), this.attr({
                                  type: e,
                                  values: void 0 === t ? null : t
                              })
                          },
                          convolveMatrix: function(e) {
                              e = a(e), this.attr({
                                  order: Math.sqrt(e.split(" ").length),
                                  kernelMatrix: e
                              })
                          },
                          composite: function(e, t, i) {
                              this.attr({
                                  in: e,
                                  in2: t,
                                  operator: i
                              })
                          },
                          flood: function(e, t) {
                              this.attr("flood-color", e), null != t && this.attr("flood-opacity", t)
                          },
                          offset: function(e, t) {
                              this.attr({
                                  dx: e,
                                  dy: t
                              })
                          },
                          image: function(e) {
                              this.attr("href", e, SVG.xlink)
                          },
                          displacementMap: function(e, t, i, n, a) {
                              this.attr({
                                  in: e,
                                  in2: t,
                                  scale: i,
                                  xChannelSelector: n,
                                  yChannelSelector: a
                              })
                          },
                          gaussianBlur: function(e, t) {
                              null != e || null != t ? this.attr("stdDeviation", r(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0")
                          },
                          morphology: function(e, t) {
                              this.attr({
                                  operator: e,
                                  radius: t
                              })
                          },
                          tile: function() {},
                          turbulence: function(e, t, i, n, a) {
                              this.attr({
                                  numOctaves: t,
                                  seed: i,
                                  stitchTiles: n,
                                  baseFrequency: e,
                                  type: a
                              })
                          }
                      },
                      i = {
                          merge: function() {
                              var e;
                              if (arguments[0] instanceof SVG.Set) {
                                  var t = this;
                                  arguments[0].each((function(e) {
                                      this instanceof SVG.MergeNode ? t.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && t.put(new SVG.MergeNode(this))
                                  }))
                              } else {
                                  e = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                                  for (var i = 0; i < e.length; i++) e[i] instanceof SVG.MergeNode ? this.put(e[i]) : this.put(new SVG.MergeNode(e[i]))
                              }
                          },
                          componentTransfer: function(e) {
                              if (this.rgb = new SVG.Set, ["r", "g", "b", "a"].forEach(function(e) {
                                      this[e] = new(SVG["Func" + e.toUpperCase()])("identity"), this.rgb.add(this[e]), this.node.appendChild(this[e].node)
                                  }.bind(this)), e)
                                  for (var t in e.rgb && (["r", "g", "b"].forEach(function(t) {
                                          this[t].attr(e.rgb)
                                      }.bind(this)), delete e.rgb), e) this[t].attr(e[t])
                          },
                          diffuseLighting: function(e, t, i) {
                              this.attr({
                                  surfaceScale: e,
                                  diffuseConstant: t,
                                  kernelUnitLength: i
                              })
                          },
                          specularLighting: function(e, t, i, n) {
                              this.attr({
                                  surfaceScale: e,
                                  diffuseConstant: t,
                                  specularExponent: i,
                                  kernelUnitLength: n
                              })
                          }
                      },
                      n = {
                          distantLight: function(e, t) {
                              this.attr({
                                  azimuth: e,
                                  elevation: t
                              })
                          },
                          pointLight: function(e, t, i) {
                              this.attr({
                                  x: e,
                                  y: t,
                                  z: i
                              })
                          },
                          spotLight: function(e, t, i, n, a, r) {
                              this.attr({
                                  x: e,
                                  y: t,
                                  z: i,
                                  pointsAtX: n,
                                  pointsAtY: a,
                                  pointsAtZ: r
                              })
                          },
                          mergeNode: function(e) {
                              this.attr("in", e)
                          }
                      };

                  function a(e) {
                      return Array.isArray(e) && (e = new SVG.Array(e)), e.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ")
                  }

                  function r(e) {
                      if (!Array.isArray(e)) return e;
                      for (var t = 0, i = e.length, n = []; t < i; t++) n.push(e[t]);
                      return n.join(" ")
                  }

                  function s() {
                      var e = function() {};
                      for (var t in "function" == typeof arguments[arguments.length - 1] && (e = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments)
                          for (var i in arguments[t]) e(arguments[t][i], i, arguments[t])
                  } ["r", "g", "b", "a"].forEach((function(e) {
                      n["Func" + e.toUpperCase()] = function(e) {
                          switch (this.attr("type", e), e) {
                              case "table":
                                  this.attr("tableValues", arguments[1]);
                                  break;
                              case "linear":
                                  this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
                                  break;
                              case "gamma":
                                  this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2])
                          }
                      }
                  })), s(t, (function(e, t) {
                      var i = t.charAt(0).toUpperCase() + t.slice(1);
                      SVG[i + "Effect"] = SVG.invent({
                          create: function() {
                              this.constructor.call(this, SVG.create("fe" + i)), e.apply(this, arguments), this.result(this.attr("id") + "Out")
                          },
                          inherit: SVG.Effect,
                          extend: {}
                      })
                  })), s(i, (function(e, t) {
                      var i = t.charAt(0).toUpperCase() + t.slice(1);
                      SVG[i + "Effect"] = SVG.invent({
                          create: function() {
                              this.constructor.call(this, SVG.create("fe" + i)), e.apply(this, arguments), this.result(this.attr("id") + "Out")
                          },
                          inherit: SVG.ParentEffect,
                          extend: {}
                      })
                  })), s(n, (function(e, t) {
                      var i = t.charAt(0).toUpperCase() + t.slice(1);
                      SVG[i] = SVG.invent({
                          create: function() {
                              this.constructor.call(this, SVG.create("fe" + i)), e.apply(this, arguments)
                          },
                          inherit: SVG.ChildEffect,
                          extend: {}
                      })
                  })), SVG.extend(SVG.MergeEffect, {
                      in: function(e) {
                          return e instanceof SVG.MergeNode ? this.add(e, 0) : this.add(new SVG.MergeNode(e), 0), this
                      }
                  }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
                      in2: function(e) {
                          return null == e ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", e)
                      }
                  }), SVG.filter = {
                      sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
                  }
              }.call(void 0),
              function() {
                  function e(e, a, r, s, o, l, c) {
                      for (var h = e.slice(a, r || c), u = s.slice(o, l || c), d = 0, f = {
                              pos: [0, 0],
                              start: [0, 0]
                          }, p = {
                              pos: [0, 0],
                              start: [0, 0]
                          };;) {
                          if (h[d] = t.call(f, h[d]), u[d] = t.call(p, u[d]), h[d][0] != u[d][0] || "M" == h[d][0] || "A" == h[d][0] && (h[d][4] != u[d][4] || h[d][5] != u[d][5]) ? (Array.prototype.splice.apply(h, [d, 1].concat(n.call(f, h[d]))), Array.prototype.splice.apply(u, [d, 1].concat(n.call(p, u[d])))) : (h[d] = i.call(f, h[d]), u[d] = i.call(p, u[d])), ++d == h.length && d == u.length) break;
                          d == h.length && h.push(["C", f.pos[0], f.pos[1], f.pos[0], f.pos[1], f.pos[0], f.pos[1]]), d == u.length && u.push(["C", p.pos[0], p.pos[1], p.pos[0], p.pos[1], p.pos[0], p.pos[1]])
                      }
                      return {
                          start: h,
                          dest: u
                      }
                  }

                  function t(e) {
                      switch (e[0]) {
                          case "z":
                          case "Z":
                              e[0] = "L", e[1] = this.start[0], e[2] = this.start[1];
                              break;
                          case "H":
                              e[0] = "L", e[2] = this.pos[1];
                              break;
                          case "V":
                              e[0] = "L", e[2] = e[1], e[1] = this.pos[0];
                              break;
                          case "T":
                              e[0] = "Q", e[3] = e[1], e[4] = e[2], e[1] = this.reflection[1], e[2] = this.reflection[0];
                              break;
                          case "S":
                              e[0] = "C", e[6] = e[4], e[5] = e[3], e[4] = e[2], e[3] = e[1], e[2] = this.reflection[1], e[1] = this.reflection[0]
                      }
                      return e
                  }

                  function i(e) {
                      var t = e.length;
                      return this.pos = [e[t - 2], e[t - 1]], -1 != "SCQT".indexOf(e[0]) && (this.reflection = [2 * this.pos[0] - e[t - 4], 2 * this.pos[1] - e[t - 3]]), e
                  }

                  function n(e) {
                      var t = [e];
                      switch (e[0]) {
                          case "M":
                              return this.pos = this.start = [e[1], e[2]], t;
                          case "L":
                              e[5] = e[3] = e[1], e[6] = e[4] = e[2], e[1] = this.pos[0], e[2] = this.pos[1];
                              break;
                          case "Q":
                              e[6] = e[4], e[5] = e[3], e[4] = 1 * e[4] / 3 + 2 * e[2] / 3, e[3] = 1 * e[3] / 3 + 2 * e[1] / 3, e[2] = 1 * this.pos[1] / 3 + 2 * e[2] / 3, e[1] = 1 * this.pos[0] / 3 + 2 * e[1] / 3;
                              break;
                          case "A":
                              e = (t = function(e, t) {
                                  var i, n, a, r, s, o, l, c, h, u, d, f, p, g, x, v, m, b, y, w, k, S, A, C, T, E, L = Math.abs(t[1]),
                                      P = Math.abs(t[2]),
                                      M = t[3] % 360,
                                      I = t[4],
                                      R = t[5],
                                      _ = t[6],
                                      O = t[7],
                                      F = new SVG.Point(e),
                                      N = new SVG.Point(_, O),
                                      z = [];
                                  if (0 === L || 0 === P || F.x === N.x && F.y === N.y) return [
                                      ["C", F.x, F.y, N.x, N.y, N.x, N.y]
                                  ];
                                  for (i = new SVG.Point((F.x - N.x) / 2, (F.y - N.y) / 2).transform((new SVG.Matrix).rotate(M)), (n = i.x * i.x / (L * L) + i.y * i.y / (P * P)) > 1 && (L *= n = Math.sqrt(n), P *= n), a = (new SVG.Matrix).rotate(M).scale(1 / L, 1 / P).rotate(-M), F = F.transform(a), N = N.transform(a), r = [N.x - F.x, N.y - F.y], o = r[0] * r[0] + r[1] * r[1], s = Math.sqrt(o), r[0] /= s, r[1] /= s, l = o < 4 ? Math.sqrt(1 - o / 4) : 0, I === R && (l *= -1), c = new SVG.Point((N.x + F.x) / 2 + l * -r[1], (N.y + F.y) / 2 + l * r[0]), h = new SVG.Point(F.x - c.x, F.y - c.y), u = new SVG.Point(N.x - c.x, N.y - c.y), d = Math.acos(h.x / Math.sqrt(h.x * h.x + h.y * h.y)), h.y < 0 && (d *= -1), f = Math.acos(u.x / Math.sqrt(u.x * u.x + u.y * u.y)), u.y < 0 && (f *= -1), R && d > f && (f += 2 * Math.PI), !R && d < f && (f -= 2 * Math.PI), g = Math.ceil(2 * Math.abs(d - f) / Math.PI), v = [], m = d, p = (f - d) / g, x = 4 * Math.tan(p / 4) / 3, k = 0; k <= g; k++) y = Math.cos(m), b = Math.sin(m), w = new SVG.Point(c.x + y, c.y + b), v[k] = [new SVG.Point(w.x + x * b, w.y - x * y), w, new SVG.Point(w.x - x * b, w.y + x * y)], m += p;
                                  for (v[0][0] = v[0][1].clone(), v[v.length - 1][2] = v[v.length - 1][1].clone(), a = (new SVG.Matrix).rotate(M).scale(L, P).rotate(-M), k = 0, S = v.length; k < S; k++) v[k][0] = v[k][0].transform(a), v[k][1] = v[k][1].transform(a), v[k][2] = v[k][2].transform(a);
                                  for (k = 1, S = v.length; k < S; k++) A = (w = v[k - 1][2]).x, C = w.y, T = (w = v[k][0]).x, E = w.y, _ = (w = v[k][1]).x, O = w.y, z.push(["C", A, C, T, E, _, O]);
                                  return z
                              }(this.pos, e))[0]
                      }
                      return e[0] = "C", this.pos = [e[5], e[6]], this.reflection = [2 * e[5] - e[3], 2 * e[6] - e[4]], t
                  }

                  function a(e, t) {
                      if (!1 === t) return !1;
                      for (var i = t, n = e.length; i < n; ++i)
                          if ("M" == e[i][0]) return i;
                      return !1
                  }
                  SVG.extend(SVG.PathArray, {
                      morph: function(t) {
                          for (var i = this.value, n = this.parse(t), r = 0, s = 0, o = !1, l = !1; !1 !== r || !1 !== s;) {
                              var c;
                              o = a(i, !1 !== r && r + 1), l = a(n, !1 !== s && s + 1), !1 === r && (r = 0 == (c = new SVG.PathArray(h.start).bbox()).height || 0 == c.width ? i.push(i[0]) - 1 : i.push(["M", c.x + c.width / 2, c.y + c.height / 2]) - 1), !1 === s && (s = 0 == (c = new SVG.PathArray(h.dest).bbox()).height || 0 == c.width ? n.push(n[0]) - 1 : n.push(["M", c.x + c.width / 2, c.y + c.height / 2]) - 1);
                              var h = e(i, r, o, n, s, l);
                              i = i.slice(0, r).concat(h.start, !1 === o ? [] : i.slice(o)), n = n.slice(0, s).concat(h.dest, !1 === l ? [] : n.slice(l)), r = !1 !== o && r + h.start.length, s = !1 !== l && s + h.dest.length
                          }
                          return this.value = i, this.destination = new SVG.PathArray, this.destination.value = n, this
                      }
                  })
              }(),
              /*! svg.draggable.js - v2.2.2 - 2019-01-08
               * https://github.com/svgdotjs/svg.draggable.js
               * Copyright (c) 2019 Wout Fierens; Licensed MIT */
              function() {
                  function e(e) {
                      e.remember("_draggable", this), this.el = e
                  }
                  e.prototype.init = function(e, t) {
                      var i = this;
                      this.constraint = e, this.value = t, this.el.on("mousedown.drag", (function(e) {
                          i.start(e)
                      })), this.el.on("touchstart.drag", (function(e) {
                          i.start(e)
                      }))
                  }, e.prototype.transformPoint = function(e, t) {
                      var i = (e = e || window.event).changedTouches && e.changedTouches[0] || e;
                      return this.p.x = i.clientX - (t || 0), this.p.y = i.clientY, this.p.matrixTransform(this.m)
                  }, e.prototype.getBBox = function() {
                      var e = this.el.bbox();
                      return this.el instanceof SVG.Nested && (e = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (e.x = this.el.x(), e.y = this.el.y()), e
                  }, e.prototype.start = function(e) {
                      if ("click" != e.type && "mousedown" != e.type && "mousemove" != e.type || 1 == (e.which || e.buttons)) {
                          var t = this;
                          if (this.el.fire("beforedrag", {
                                  event: e,
                                  handler: this
                              }), !this.el.event().defaultPrevented) {
                              e.preventDefault(), e.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
                              var i, n = this.getBBox();
                              if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
                                  case "middle":
                                      i /= 2;
                                      break;
                                  case "start":
                                      i = 0
                              }
                              this.startPoints = {
                                  point: this.transformPoint(e, i),
                                  box: n,
                                  transform: this.el.transform()
                              }, SVG.on(window, "mousemove.drag", (function(e) {
                                  t.drag(e)
                              })), SVG.on(window, "touchmove.drag", (function(e) {
                                  t.drag(e)
                              })), SVG.on(window, "mouseup.drag", (function(e) {
                                  t.end(e)
                              })), SVG.on(window, "touchend.drag", (function(e) {
                                  t.end(e)
                              })), this.el.fire("dragstart", {
                                  event: e,
                                  p: this.startPoints.point,
                                  m: this.m,
                                  handler: this
                              })
                          }
                      }
                  }, e.prototype.drag = function(e) {
                      var t = this.getBBox(),
                          i = this.transformPoint(e),
                          n = this.startPoints.box.x + i.x - this.startPoints.point.x,
                          a = this.startPoints.box.y + i.y - this.startPoints.point.y,
                          r = this.constraint,
                          s = i.x - this.startPoints.point.x,
                          o = i.y - this.startPoints.point.y;
                      if (this.el.fire("dragmove", {
                              event: e,
                              p: i,
                              m: this.m,
                              handler: this
                          }), this.el.event().defaultPrevented) return i;
                      if ("function" == typeof r) {
                          var l = r.call(this.el, n, a, this.m);
                          "boolean" == typeof l && (l = {
                              x: l,
                              y: l
                          }), !0 === l.x ? this.el.x(n) : !1 !== l.x && this.el.x(l.x), !0 === l.y ? this.el.y(a) : !1 !== l.y && this.el.y(l.y)
                      } else "object" == typeof r && (null != r.minX && n < r.minX ? s = (n = r.minX) - this.startPoints.box.x : null != r.maxX && n > r.maxX - t.width && (s = (n = r.maxX - t.width) - this.startPoints.box.x), null != r.minY && a < r.minY ? o = (a = r.minY) - this.startPoints.box.y : null != r.maxY && a > r.maxY - t.height && (o = (a = r.maxY - t.height) - this.startPoints.box.y), null != r.snapToGrid && (n -= n % r.snapToGrid, a -= a % r.snapToGrid, s -= s % r.snapToGrid, o -= o % r.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
                          x: s,
                          y: o
                      }, !0) : this.el.move(n, a));
                      return i
                  }, e.prototype.end = function(e) {
                      var t = this.drag(e);
                      this.el.fire("dragend", {
                          event: e,
                          p: t,
                          m: this.m,
                          handler: this
                      }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag")
                  }, SVG.extend(SVG.Element, {
                      draggable: function(t, i) {
                          "function" != typeof t && "object" != typeof t || (i = t, t = !0);
                          var n = this.remember("_draggable") || new e(this);
                          return (t = void 0 === t || t) ? n.init(i || {}, t) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this
                      }
                  })
              }.call(void 0),
              function() {
                  function e(e) {
                      this.el = e, e.remember("_selectHandler", this), this.pointSelection = {
                          isSelected: !1
                      }, this.rectSelection = {
                          isSelected: !1
                      }, this.pointsList = {
                          lt: [0, 0],
                          rt: ["width", 0],
                          rb: ["width", "height"],
                          lb: [0, "height"],
                          t: ["width", 0],
                          r: ["width", "height"],
                          b: ["width", "height"],
                          l: [0, "height"]
                      }, this.pointCoord = function(e, t, i) {
                          var n = "string" != typeof e ? e : t[e];
                          return i ? n / 2 : n
                      }, this.pointCoords = function(e, t) {
                          var i = this.pointsList[e];
                          return {
                              x: this.pointCoord(i[0], t, "t" === e || "b" === e),
                              y: this.pointCoord(i[1], t, "r" === e || "l" === e)
                          }
                      }
                  }
                  e.prototype.init = function(e, t) {
                      var i = this.el.bbox();
                      this.options = {};
                      var n = this.el.selectize.defaults.points;
                      for (var a in this.el.selectize.defaults) this.options[a] = this.el.selectize.defaults[a], void 0 !== t[a] && (this.options[a] = t[a]);
                      var r = ["points", "pointsExclude"];
                      for (var a in r) {
                          var s = this.options[r[a]];
                          "string" == typeof s ? s = s.length > 0 ? s.split(/\s*,\s*/i) : [] : "boolean" == typeof s && "points" === r[a] && (s = s ? n : []), this.options[r[a]] = s
                      }
                      this.options.points = [n, this.options.points].reduce((function(e, t) {
                          return e.filter((function(e) {
                              return t.indexOf(e) > -1
                          }))
                      })), this.options.points = [this.options.points, this.options.pointsExclude].reduce((function(e, t) {
                          return e.filter((function(e) {
                              return t.indexOf(e) < 0
                          }))
                      })), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(e) : this.selectRect(e), this.observe(), this.cleanup()
                  }, e.prototype.selectPoints = function(e) {
                      return this.pointSelection.isSelected = e, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this
                  }, e.prototype.getPointArray = function() {
                      var e = this.el.bbox();
                      return this.el.array().valueOf().map((function(t) {
                          return [t[0] - e.x, t[1] - e.y]
                      }))
                  }, e.prototype.drawPoints = function() {
                      for (var e = this, t = this.getPointArray(), i = 0, n = t.length; i < n; ++i) {
                          var a = function(t) {
                                  return function(i) {
                                      (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                                      var n = i.pageX || i.touches[0].pageX,
                                          a = i.pageY || i.touches[0].pageY;
                                      e.el.fire("point", {
                                          x: n,
                                          y: a,
                                          i: t,
                                          event: i
                                      })
                                  }
                              }(i),
                              r = this.drawPoint(t[i][0], t[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", a).on("mousedown", a);
                          this.pointSelection.set.add(r)
                      }
                  }, e.prototype.drawPoint = function(e, t) {
                      var i = this.options.pointType;
                      switch (i) {
                          case "circle":
                              return this.drawCircle(e, t);
                          case "rect":
                              return this.drawRect(e, t);
                          default:
                              if ("function" == typeof i) return i.call(this, e, t);
                              throw new Error("Unknown " + i + " point type!")
                      }
                  }, e.prototype.drawCircle = function(e, t) {
                      return this.nested.circle(this.options.pointSize).center(e, t)
                  }, e.prototype.drawRect = function(e, t) {
                      return this.nested.rect(this.options.pointSize, this.options.pointSize).center(e, t)
                  }, e.prototype.updatePointSelection = function() {
                      var e = this.getPointArray();
                      this.pointSelection.set.each((function(t) {
                          this.cx() === e[t][0] && this.cy() === e[t][1] || this.center(e[t][0], e[t][1])
                      }))
                  }, e.prototype.updateRectSelection = function() {
                      var e = this,
                          t = this.el.bbox();
                      if (this.rectSelection.set.get(0).attr({
                              width: t.width,
                              height: t.height
                          }), this.options.points.length && this.options.points.map((function(i, n) {
                              var a = e.pointCoords(i, t);
                              e.rectSelection.set.get(n + 1).center(a.x, a.y)
                          })), this.options.rotationPoint) {
                          var i = this.rectSelection.set.length();
                          this.rectSelection.set.get(i - 1).center(t.width / 2, 20)
                      }
                  }, e.prototype.selectRect = function(e) {
                      var t = this,
                          i = this.el.bbox();

                      function n(e) {
                          return function(i) {
                              (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                              var n = i.pageX || i.touches[0].pageX,
                                  a = i.pageY || i.touches[0].pageY;
                              t.el.fire(e, {
                                  x: n,
                                  y: a,
                                  event: i
                              })
                          }
                      }
                      if (this.rectSelection.isSelected = e, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2 && (this.options.points.map((function(e, a) {
                              var r = t.pointCoords(e, i),
                                  s = t.drawPoint(r.x, r.y).attr("class", t.options.classPoints + "_" + e).on("mousedown", n(e)).on("touchstart", n(e));
                              t.rectSelection.set.add(s)
                          })), this.rectSelection.set.each((function() {
                              this.addClass(t.options.classPoints)
                          }))), this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
                          var a = function(e) {
                                  (e = e || window.event).preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation();
                                  var i = e.pageX || e.touches[0].pageX,
                                      n = e.pageY || e.touches[0].pageY;
                                  t.el.fire("rot", {
                                      x: i,
                                      y: n,
                                      event: e
                                  })
                              },
                              r = this.drawPoint(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", a).on("mousedown", a);
                          this.rectSelection.set.add(r)
                      }
                  }, e.prototype.handler = function() {
                      var e = this.el.bbox();
                      this.nested.matrix(new SVG.Matrix(this.el).translate(e.x, e.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection()
                  }, e.prototype.observe = function() {
                      var e = this;
                      if (MutationObserver)
                          if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver((function() {
                              e.handler()
                          })), this.observerInst.observe(this.el.node, {
                              attributes: !0
                          });
                          else try {
                              this.observerInst.disconnect(), delete this.observerInst
                          } catch (e) {} else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", (function() {
                              e.handler()
                          }))
                  }, e.prototype.cleanup = function() {
                      !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each((function() {
                          this.remove()
                      })), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each((function() {
                          this.remove()
                      })), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested)
                  }, SVG.extend(SVG.Element, {
                      selectize: function(t, i) {
                          return "object" == typeof t && (i = t, t = !0), (this.remember("_selectHandler") || new e(this)).init(void 0 === t || t, i || {}), this
                      }
                  }), SVG.Element.prototype.selectize.defaults = {
                      points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
                      pointsExclude: [],
                      classRect: "svg_select_boundingRect",
                      classPoints: "svg_select_points",
                      pointSize: 7,
                      rotationPoint: !0,
                      deepSelect: !1,
                      pointType: "circle"
                  }
              }(),
              function() {
                  (function() {
                      function e(e) {
                          e.remember("_resizeHandler", this), this.el = e, this.parameters = {}, this.lastUpdateCall = null, this.p = e.doc().node.createSVGPoint()
                      }
                      e.prototype.transformPoint = function(e, t, i) {
                          return this.p.x = e - (this.offset.x - window.pageXOffset), this.p.y = t - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m)
                      }, e.prototype._extractPosition = function(e) {
                          return {
                              x: null != e.clientX ? e.clientX : e.touches[0].clientX,
                              y: null != e.clientY ? e.clientY : e.touches[0].clientY
                          }
                      }, e.prototype.init = function(e) {
                          var t = this;
                          if (this.stop(), "stop" !== e) {
                              for (var i in this.options = {}, this.el.resize.defaults) this.options[i] = this.el.resize.defaults[i], void 0 !== e[i] && (this.options[i] = e[i]);
                              this.el.on("lt.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("rt.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("rb.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("lb.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("t.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("r.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("b.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("l.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("rot.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.el.on("point.resize", (function(e) {
                                  t.resize(e || window.event)
                              })), this.update()
                          }
                      }, e.prototype.stop = function() {
                          return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this
                      }, e.prototype.resize = function(e) {
                          var t = this;
                          this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
                              x: window.pageXOffset,
                              y: window.pageYOffset
                          };
                          var i = this._extractPosition(e.detail.event);
                          if (this.parameters = {
                                  type: this.el.type,
                                  p: this.transformPoint(i.x, i.y),
                                  x: e.detail.x,
                                  y: e.detail.y,
                                  box: this.el.bbox(),
                                  rotation: this.el.transform().rotation
                              }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== e.detail.i) {
                              var n = this.el.array().valueOf();
                              this.parameters.i = e.detail.i, this.parameters.pointCoords = [n[e.detail.i][0], n[e.detail.i][1]]
                          }
                          switch (e.type) {
                              case "lt":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t);
                                      if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                          if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                          i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1])
                                      }
                                  };
                                  break;
                              case "rt":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 2);
                                      if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                          if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                          i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1])
                                      }
                                  };
                                  break;
                              case "rb":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 0);
                                      if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                          if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                          i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1])
                                      }
                                  };
                                  break;
                              case "lb":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 1);
                                      if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                          if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                          i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1])
                                      }
                                  };
                                  break;
                              case "t":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 2);
                                      if (this.parameters.box.height - i[1] > 0) {
                                          if ("text" === this.parameters.type) return;
                                          this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1])
                                      }
                                  };
                                  break;
                              case "r":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 0);
                                      if (this.parameters.box.width + i[0] > 0) {
                                          if ("text" === this.parameters.type) return;
                                          this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0])
                                      }
                                  };
                                  break;
                              case "b":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 0);
                                      if (this.parameters.box.height + i[1] > 0) {
                                          if ("text" === this.parameters.type) return;
                                          this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1])
                                      }
                                  };
                                  break;
                              case "l":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, 1);
                                      if (this.parameters.box.width - i[0] > 0) {
                                          if ("text" === this.parameters.type) return;
                                          this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0])
                                      }
                                  };
                                  break;
                              case "rot":
                                  this.calc = function(e, t) {
                                      var i = e + this.parameters.p.x,
                                          n = t + this.parameters.p.y,
                                          a = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
                                          r = Math.atan2(n - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2),
                                          s = this.parameters.rotation + 180 * (r - a) / Math.PI + this.options.snapToAngle / 2;
                                      this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(s - s % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy)
                                  };
                                  break;
                              case "point":
                                  this.calc = function(e, t) {
                                      var i = this.snapToGrid(e, t, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
                                          n = this.el.array().valueOf();
                                      n[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], n[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(n)
                                  }
                          }
                          this.el.fire("resizestart", {
                              dx: this.parameters.x,
                              dy: this.parameters.y,
                              event: e
                          }), SVG.on(window, "touchmove.resize", (function(e) {
                              t.update(e || window.event)
                          })), SVG.on(window, "touchend.resize", (function() {
                              t.done()
                          })), SVG.on(window, "mousemove.resize", (function(e) {
                              t.update(e || window.event)
                          })), SVG.on(window, "mouseup.resize", (function() {
                              t.done()
                          }))
                      }, e.prototype.update = function(e) {
                          if (e) {
                              var t = this._extractPosition(e),
                                  i = this.transformPoint(t.x, t.y),
                                  n = i.x - this.parameters.p.x,
                                  a = i.y - this.parameters.p.y;
                              this.lastUpdateCall = [n, a], this.calc(n, a), this.el.fire("resizing", {
                                  dx: n,
                                  dy: a,
                                  event: e
                              })
                          } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1])
                      }, e.prototype.done = function() {
                          this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone")
                      }, e.prototype.snapToGrid = function(e, t, i, n) {
                          var a;
                          return void 0 !== n ? a = [(i + e) % this.options.snapToGrid, (n + t) % this.options.snapToGrid] : (i = null == i ? 3 : i, a = [(this.parameters.box.x + e + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + t + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), e < 0 && (a[0] -= this.options.snapToGrid), t < 0 && (a[1] -= this.options.snapToGrid), e -= Math.abs(a[0]) < this.options.snapToGrid / 2 ? a[0] : a[0] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), t -= Math.abs(a[1]) < this.options.snapToGrid / 2 ? a[1] : a[1] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(e, t, i, n)
                      }, e.prototype.constraintToBox = function(e, t, i, n) {
                          var a, r, s = this.options.constraint || {};
                          return void 0 !== n ? (a = i, r = n) : (a = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), r = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== s.minX && a + e < s.minX && (e = s.minX - a), void 0 !== s.maxX && a + e > s.maxX && (e = s.maxX - a), void 0 !== s.minY && r + t < s.minY && (t = s.minY - r), void 0 !== s.maxY && r + t > s.maxY && (t = s.maxY - r), [e, t]
                      }, e.prototype.checkAspectRatio = function(e, t) {
                          if (!this.options.saveAspectRatio) return e;
                          var i = e.slice(),
                              n = this.parameters.box.width / this.parameters.box.height,
                              a = this.parameters.box.width + e[0],
                              r = this.parameters.box.height - e[1],
                              s = a / r;
                          return s < n ? (i[1] = a / n - this.parameters.box.height, t && (i[1] = -i[1])) : s > n && (i[0] = this.parameters.box.width - r * n, t && (i[0] = -i[0])), i
                      }, SVG.extend(SVG.Element, {
                          resize: function(t) {
                              return (this.remember("_resizeHandler") || new e(this)).init(t || {}), this
                          }
                      }), SVG.Element.prototype.resize.defaults = {
                          snapToAngle: .1,
                          snapToGrid: 1,
                          constraint: {},
                          saveAspectRatio: !1
                      }
                  }).call(this)
              }(), void 0 === window.Apex && (window.Apex = {});
          var Xe = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "initModules",
                      value: function() {
                          this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new w(this.ctx), this.ctx.axes = new ne(this.ctx), this.ctx.core = new De(this.ctx.el, this.ctx), this.ctx.config = new j({}), this.ctx.data = new q(this.ctx), this.ctx.grid = new J(this.ctx), this.ctx.graphics = new S(this.ctx), this.ctx.coreUtils = new T(this.ctx), this.ctx.crosshairs = new ae(this.ctx), this.ctx.events = new te(this.ctx), this.ctx.exports = new $(this.ctx), this.ctx.localization = new ie(this.ctx), this.ctx.options = new M, this.ctx.responsive = new re(this.ctx), this.ctx.series = new z(this.ctx), this.ctx.theme = new se(this.ctx), this.ctx.formatters = new G(this.ctx), this.ctx.titleSubtitle = new oe(this.ctx), this.ctx.legend = new pe(this.ctx), this.ctx.toolbar = new ge(this.ctx), this.ctx.dimensions = new de(this.ctx), this.ctx.updateHelpers = new He(this.ctx), this.ctx.zoomPanSelection = new xe(this.ctx), this.ctx.w.globals.tooltip = new Se(this.ctx)
                      }
                  }]), e
              }(),
              Ye = function() {
                  function e(t) {
                      o(this, e), this.ctx = t, this.w = t.w
                  }
                  return c(e, [{
                      key: "clear",
                      value: function(e) {
                          var t = e.isUpdating;
                          this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
                              isUpdating: t
                          })
                      }
                  }, {
                      key: "killSVG",
                      value: function(e) {
                          e.each((function(e, t) {
                              this.removeClass("*"), this.off(), this.stop()
                          }), !0), e.ungroup(), e.clear()
                      }
                  }, {
                      key: "clearDomElements",
                      value: function(e) {
                          var t = this,
                              i = e.isUpdating,
                              n = this.w.globals.dom.Paper.node;
                          n.parentNode && n.parentNode.parentNode && !i && (n.parentNode.parentNode.style.minHeight = "unset");
                          var a = this.w.globals.dom.baseEl;
                          a && this.ctx.eventList.forEach((function(e) {
                              a.removeEventListener(e, t.ctx.events.documentEvent)
                          }));
                          var r = this.w.globals.dom;
                          if (null !== this.ctx.el)
                              for (; this.ctx.el.firstChild;) this.ctx.el.removeChild(this.ctx.el.firstChild);
                          this.killSVG(r.Paper), r.Paper.remove(), r.elWrap = null, r.elGraphical = null, r.elAnnotations = null, r.elLegendWrap = null, r.baseEl = null, r.elGridRect = null, r.elGridRectMask = null, r.elGridRectMarkerMask = null, r.elForecastMask = null, r.elNonForecastMask = null, r.elDefs = null
                      }
                  }]), e
              }(),
              Be = new WeakMap,
              je = function() {
                  function e(t, i) {
                      o(this, e), this.opts = i, this.ctx = this, this.w = new V(i).init(), this.el = t, this.w.globals.cuid = y.randomId(), this.w.globals.chartID = this.w.config.chart.id ? y.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Xe(this).initModules(), this.create = y.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this)
                  }
                  return c(e, [{
                      key: "render",
                      value: function() {
                          var e = this;
                          return new Promise((function(t, i) {
                              if (null !== e.el) {
                                  void 0 === Apex._chartInstances && (Apex._chartInstances = []), e.w.config.chart.id && Apex._chartInstances.push({
                                      id: e.w.globals.chartID,
                                      group: e.w.config.chart.group,
                                      chart: e
                                  }), e.setLocale(e.w.config.chart.defaultLocale);
                                  var n = e.w.config.chart.events.beforeMount;
                                  if ("function" == typeof n && n(e, e.w), e.events.fireEvent("beforeMount", [e, e.w]), window.addEventListener("resize", e.windowResizeHandler), function(e, t) {
                                          var i = !1,
                                              n = e.getBoundingClientRect();
                                          "none" !== e.style.display && 0 !== n.width || (i = !0);
                                          var a = new ResizeObserver((function(n) {
                                              i && t.call(e, n), i = !0
                                          }));
                                          e.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(e.children).forEach((function(e) {
                                              return a.observe(e)
                                          })) : a.observe(e), Be.set(t, a)
                                      }(e.el.parentNode, e.parentResizeHandler), !e.css) {
                                      var a = e.el.getRootNode && e.el.getRootNode(),
                                          r = y.is("ShadowRoot", a),
                                          s = e.el.ownerDocument,
                                          o = s.getElementById("apexcharts-css");
                                      !r && o || (e.css = document.createElement("style"), e.css.id = "apexcharts-css", e.css.textContent = '.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-title:empty,\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-goals-group, \n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  display: flex;\n}\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}', r ? a.prepend(e.css) : s.head.appendChild(e.css))
                                  }
                                  var l = e.create(e.w.config.series, {});
                                  if (!l) return t(e);
                                  e.mount(l).then((function() {
                                      "function" == typeof e.w.config.chart.events.mounted && e.w.config.chart.events.mounted(e, e.w), e.events.fireEvent("mounted", [e, e.w]), t(l)
                                  })).catch((function(e) {
                                      i(e)
                                  }))
                              } else i(new Error("Element not found"))
                          }))
                      }
                  }, {
                      key: "create",
                      value: function(e, t) {
                          var i = this.w;
                          new Xe(this).initModules();
                          var n = this.w.globals;
                          if (n.noData = !1, n.animationEnded = !1, this.responsive.checkResponsiveConfig(t), i.config.xaxis.convertedCatToNumeric && new B(i.config).convertCatToNumericXaxis(i.config, this.ctx), null === this.el) return n.animationEnded = !0, null;
                          if (this.core.setupElements(), "treemap" === i.config.chart.type && (i.config.grid.show = !1, i.config.yaxis[0].show = !1), 0 === n.svgWidth) return n.animationEnded = !0, null;
                          var a = T.checkComboSeries(e);
                          n.comboCharts = a.comboCharts, n.comboBarCount = a.comboBarCount;
                          var r = e.every((function(e) {
                              return e.data && 0 === e.data.length
                          }));
                          (0 === e.length || r) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(e), this.theme.init(), new _(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), n.noData && n.collapsedSeries.length !== n.series.length && !i.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), n.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i.globals.minX, this.ctx.toolbar.maxX = i.globals.maxX), this.formatters.heatmapLabelFormatters(), new T(this).getLargestMarkerSize(), this.dimensions.plotCoords();
                          var s = this.core.xySettings();
                          this.grid.createGridMask();
                          var o = this.core.plotChartType(e, s),
                              l = new F(this);
                          l.bringForward(), i.config.dataLabels.background.enabled && l.dataLabelsBackground(), this.core.shiftGraphPosition();
                          var c = {
                              plot: {
                                  left: i.globals.translateX,
                                  top: i.globals.translateY,
                                  width: i.globals.gridWidth,
                                  height: i.globals.gridHeight
                              }
                          };
                          return {
                              elGraph: o,
                              xyRatios: s,
                              elInner: i.globals.dom.elGraphical,
                              dimensions: c
                          }
                      }
                  }, {
                      key: "mount",
                      value: function() {
                          var e = this,
                              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                              i = this,
                              n = i.w;
                          return new Promise((function(a, r) {
                              if (null === i.el) return r(new Error("Not enough data to display or target element not found"));
                              (null === t || n.globals.allSeriesCollapsed) && i.series.handleNoData(), "treemap" !== n.config.chart.type && i.axes.drawAxis(n.config.chart.type, t.xyRatios), i.grid = new J(i);
                              var s = i.grid.drawGrid();
                              i.annotations = new I(i), i.annotations.drawImageAnnos(), i.annotations.drawTextAnnos(), "back" === n.config.grid.position && s && n.globals.dom.elGraphical.add(s.el);
                              var o = new Z(e.ctx),
                                  l = new ee(e.ctx);
                              if (null !== s && (o.xAxisLabelCorrections(s.xAxisTickWidth), l.setYAxisTextAlignments(), n.config.yaxis.map((function(e, t) {
                                      -1 === n.globals.ignoreYAxisIndexes.indexOf(t) && l.yAxisTitleRotate(t, e.opposite)
                                  }))), "back" === n.config.annotations.position && (n.globals.dom.Paper.add(n.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), Array.isArray(t.elGraph))
                                  for (var c = 0; c < t.elGraph.length; c++) n.globals.dom.elGraphical.add(t.elGraph[c]);
                              else n.globals.dom.elGraphical.add(t.elGraph);
                              if ("front" === n.config.grid.position && s && n.globals.dom.elGraphical.add(s.el), "front" === n.config.xaxis.crosshairs.position && i.crosshairs.drawXCrosshairs(), "front" === n.config.yaxis[0].crosshairs.position && i.crosshairs.drawYCrosshairs(), "front" === n.config.annotations.position && (n.globals.dom.Paper.add(n.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), !n.globals.noData) {
                                  if (n.config.tooltip.enabled && !n.globals.noData && i.w.globals.tooltip.drawTooltip(t.xyRatios), n.globals.axisCharts && (n.globals.isXNumeric || n.config.xaxis.convertedCatToNumeric || n.globals.isRangeBar))(n.config.chart.zoom.enabled || n.config.chart.selection && n.config.chart.selection.enabled || n.config.chart.pan && n.config.chart.pan.enabled) && i.zoomPanSelection.init({
                                      xyRatios: t.xyRatios
                                  });
                                  else {
                                      var h = n.config.chart.toolbar.tools;
                                      ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach((function(e) {
                                          h[e] = !1
                                      }))
                                  }
                                  n.config.chart.toolbar.show && !n.globals.allSeriesCollapsed && i.toolbar.createToolbar()
                              }
                              n.globals.memory.methodsToExec.length > 0 && n.globals.memory.methodsToExec.forEach((function(e) {
                                  e.method(e.params, !1, e.context)
                              })), n.globals.axisCharts || n.globals.noData || i.core.resizeNonAxisCharts(), a(i)
                          }))
                      }
                  }, {
                      key: "destroy",
                      value: function() {
                          var e, t;
                          window.removeEventListener("resize", this.windowResizeHandler), this.el.parentNode, e = this.parentResizeHandler, (t = Be.get(e)) && (t.disconnect(), Be.delete(e));
                          var i = this.w.config.chart.id;
                          i && Apex._chartInstances.forEach((function(e, t) {
                              e.id === y.escapeString(i) && Apex._chartInstances.splice(t, 1)
                          })), new Ye(this.ctx).clear({
                              isUpdating: !1
                          })
                      }
                  }, {
                      key: "updateOptions",
                      value: function(e) {
                          var t = this,
                              i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                              n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              a = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                              r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                              s = this.w;
                          return s.globals.selection = void 0, e.series && (this.series.resetSeries(!1, !0, !1), e.series.length && e.series[0].data && (e.series = e.series.map((function(e, i) {
                              return t.updateHelpers._extendSeries(e, i)
                          }))), this.updateHelpers.revertDefaultAxisMinMax()), e.xaxis && (e = this.updateHelpers.forceXAxisUpdate(e)), e.yaxis && (e = this.updateHelpers.forceYAxisUpdate(e)), s.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), e.theme && (e = this.theme.updateThemeOptions(e)), this.updateHelpers._updateOptions(e, i, n, a, r)
                      }
                  }, {
                      key: "updateSeries",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                              t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                          return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(e, t, i)
                      }
                  }, {
                      key: "appendSeries",
                      value: function(e) {
                          var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                              n = this.w.config.series.slice();
                          return n.push(e), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(n, t, i)
                      }
                  }, {
                      key: "appendData",
                      value: function(e) {
                          var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = this;
                          i.w.globals.dataChanged = !0, i.series.getPreviousPaths();
                          for (var n = i.w.config.series.slice(), a = 0; a < n.length; a++)
                              if (null !== e[a] && void 0 !== e[a])
                                  for (var r = 0; r < e[a].data.length; r++) n[a].data.push(e[a].data[r]);
                          return i.w.config.series = n, t && (i.w.globals.initialSeries = y.clone(i.w.config.series)), this.update()
                      }
                  }, {
                      key: "update",
                      value: function(e) {
                          var t = this;
                          return new Promise((function(i, n) {
                              new Ye(t.ctx).clear({
                                  isUpdating: !0
                              });
                              var a = t.create(t.w.config.series, e);
                              if (!a) return i(t);
                              t.mount(a).then((function() {
                                  "function" == typeof t.w.config.chart.events.updated && t.w.config.chart.events.updated(t, t.w), t.events.fireEvent("updated", [t, t.w]), t.w.globals.isDirty = !0, i(t)
                              })).catch((function(e) {
                                  n(e)
                              }))
                          }))
                      }
                  }, {
                      key: "getSyncedCharts",
                      value: function() {
                          var e = this.getGroupedCharts(),
                              t = [this];
                          return e.length && (t = [], e.forEach((function(e) {
                              t.push(e)
                          }))), t
                      }
                  }, {
                      key: "getGroupedCharts",
                      value: function() {
                          var e = this;
                          return Apex._chartInstances.filter((function(e) {
                              if (e.group) return !0
                          })).map((function(t) {
                              return e.w.config.chart.group === t.group ? t.chart : e
                          }))
                      }
                  }, {
                      key: "toggleSeries",
                      value: function(e) {
                          return this.series.toggleSeries(e)
                      }
                  }, {
                      key: "highlightSeriesOnLegendHover",
                      value: function(e, t) {
                          return this.series.toggleSeriesOnHover(e, t)
                      }
                  }, {
                      key: "showSeries",
                      value: function(e) {
                          this.series.showSeries(e)
                      }
                  }, {
                      key: "hideSeries",
                      value: function(e) {
                          this.series.hideSeries(e)
                      }
                  }, {
                      key: "resetSeries",
                      value: function() {
                          var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                              t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                          this.series.resetSeries(e, t)
                      }
                  }, {
                      key: "addEventListener",
                      value: function(e, t) {
                          this.events.addEventListener(e, t)
                      }
                  }, {
                      key: "removeEventListener",
                      value: function(e, t) {
                          this.events.removeEventListener(e, t)
                      }
                  }, {
                      key: "addXaxisAnnotation",
                      value: function(e) {
                          var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                              n = this;
                          i && (n = i), n.annotations.addXaxisAnnotationExternal(e, t, n)
                      }
                  }, {
                      key: "addYaxisAnnotation",
                      value: function(e) {
                          var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                              n = this;
                          i && (n = i), n.annotations.addYaxisAnnotationExternal(e, t, n)
                      }
                  }, {
                      key: "addPointAnnotation",
                      value: function(e) {
                          var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                              n = this;
                          i && (n = i), n.annotations.addPointAnnotationExternal(e, t, n)
                      }
                  }, {
                      key: "clearAnnotations",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
                              t = this;
                          e && (t = e), t.annotations.clearAnnotations(t)
                      }
                  }, {
                      key: "removeAnnotation",
                      value: function(e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                              i = this;
                          t && (i = t), i.annotations.removeAnnotation(i, e)
                      }
                  }, {
                      key: "getChartArea",
                      value: function() {
                          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")
                      }
                  }, {
                      key: "getSeriesTotalXRange",
                      value: function(e, t) {
                          return this.coreUtils.getSeriesTotalsXRange(e, t)
                      }
                  }, {
                      key: "getHighestValueInSeries",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                              t = new Q(this.ctx);
                          return t.getMinYMaxY(e).highestY
                      }
                  }, {
                      key: "getLowestValueInSeries",
                      value: function() {
                          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                              t = new Q(this.ctx);
                          return t.getMinYMaxY(e).lowestY
                      }
                  }, {
                      key: "getSeriesTotal",
                      value: function() {
                          return this.w.globals.seriesTotals
                      }
                  }, {
                      key: "toggleDataPointSelection",
                      value: function(e, t) {
                          return this.updateHelpers.toggleDataPointSelection(e, t)
                      }
                  }, {
                      key: "zoomX",
                      value: function(e, t) {
                          this.ctx.toolbar.zoomUpdateOptions(e, t)
                      }
                  }, {
                      key: "setLocale",
                      value: function(e) {
                          this.localization.setCurrentLocaleValues(e)
                      }
                  }, {
                      key: "dataURI",
                      value: function(e) {
                          return new $(this.ctx).dataURI(e)
                      }
                  }, {
                      key: "paper",
                      value: function() {
                          return this.w.globals.dom.Paper
                      }
                  }, {
                      key: "_parentResizeCallback",
                      value: function() {
                          this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize()
                      }
                  }, {
                      key: "_windowResize",
                      value: function() {
                          var e = this;
                          clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout((function() {
                              e.w.globals.resized = !0, e.w.globals.dataChanged = !1, e.ctx.update()
                          }), 150)
                      }
                  }, {
                      key: "_windowResizeHandler",
                      value: function() {
                          var e = this.w.config.chart.redrawOnWindowResize;
                          "function" == typeof e && (e = e()), e && this._windowResize()
                      }
                  }], [{
                      key: "getChartByID",
                      value: function(e) {
                          var t = y.escapeString(e),
                              i = Apex._chartInstances.filter((function(e) {
                                  return e.id === t
                              }))[0];
                          return i && i.chart
                      }
                  }, {
                      key: "initOnLoad",
                      value: function() {
                          for (var t = document.querySelectorAll("[data-apexcharts]"), i = 0; i < t.length; i++) new e(t[i], JSON.parse(t[i].getAttribute("data-options"))).render()
                      }
                  }, {
                      key: "exec",
                      value: function(e, t) {
                          var i = this.getChartByID(e);
                          if (i) {
                              i.w.globals.isExecCalled = !0;
                              var n = null;
                              if (-1 !== i.publicMethods.indexOf(t)) {
                                  for (var a = arguments.length, r = new Array(a > 2 ? a - 2 : 0), s = 2; s < a; s++) r[s - 2] = arguments[s];
                                  n = i[t].apply(i, r)
                              }
                              return n
                          }
                      }
                  }, {
                      key: "merge",
                      value: function(e, t) {
                          return y.extend(e, t)
                      }
                  }]), e
              }();
          e.exports = je
      },
      9981: (e, t, i) => {
          e.exports = i(6148)
      },
      6857: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(8117),
              r = i(6139),
              s = i(9395),
              o = i(7187),
              l = i(7758),
              c = i(4908),
              h = i(7381);
          e.exports = function(e) {
              return new Promise((function(t, i) {
                  var u = e.data,
                      d = e.headers,
                      f = e.responseType;
                  n.isFormData(u) && delete d["Content-Type"];
                  var p = new XMLHttpRequest;
                  if (e.auth) {
                      var g = e.auth.username || "",
                          x = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
                      d.Authorization = "Basic " + btoa(g + ":" + x)
                  }
                  var v = o(e.baseURL, e.url);

                  function m() {
                      if (p) {
                          var n = "getAllResponseHeaders" in p ? l(p.getAllResponseHeaders()) : null,
                              r = f && "text" !== f && "json" !== f ? p.response : p.responseText,
                              s = {
                                  data: r,
                                  status: p.status,
                                  statusText: p.statusText,
                                  headers: n,
                                  config: e,
                                  request: p
                              };
                          a(t, i, s), p = null
                      }
                  }
                  if (p.open(e.method.toUpperCase(), s(v, e.params, e.paramsSerializer), !0), p.timeout = e.timeout, "onloadend" in p ? p.onloadend = m : p.onreadystatechange = function() {
                          p && 4 === p.readyState && (0 !== p.status || p.responseURL && 0 === p.responseURL.indexOf("file:")) && setTimeout(m)
                      }, p.onabort = function() {
                          p && (i(h("Request aborted", e, "ECONNABORTED", p)), p = null)
                      }, p.onerror = function() {
                          i(h("Network Error", e, null, p)), p = null
                      }, p.ontimeout = function() {
                          var t = "timeout of " + e.timeout + "ms exceeded";
                          e.timeoutErrorMessage && (t = e.timeoutErrorMessage), i(h(t, e, e.transitional && e.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", p)), p = null
                      }, n.isStandardBrowserEnv()) {
                      var b = (e.withCredentials || c(v)) && e.xsrfCookieName ? r.read(e.xsrfCookieName) : void 0;
                      b && (d[e.xsrfHeaderName] = b)
                  }
                  "setRequestHeader" in p && n.forEach(d, (function(e, t) {
                      "undefined" === typeof u && "content-type" === t.toLowerCase() ? delete d[t] : p.setRequestHeader(t, e)
                  })), n.isUndefined(e.withCredentials) || (p.withCredentials = !!e.withCredentials), f && "json" !== f && (p.responseType = e.responseType), "function" === typeof e.onDownloadProgress && p.addEventListener("progress", e.onDownloadProgress), "function" === typeof e.onUploadProgress && p.upload && p.upload.addEventListener("progress", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then((function(e) {
                      p && (p.abort(), i(e), p = null)
                  })), u || (u = null), p.send(u)
              }))
          }
      },
      6148: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(4009),
              r = i(7237),
              s = i(8342),
              o = i(9860);

          function l(e) {
              var t = new r(e),
                  i = a(r.prototype.request, t);
              return n.extend(i, r.prototype, t), n.extend(i, t), i
          }
          var c = l(o);
          c.Axios = r, c.create = function(e) {
              return l(s(c.defaults, e))
          }, c.Cancel = i(5838), c.CancelToken = i(5e3), c.isCancel = i(2649), c.all = function(e) {
              return Promise.all(e)
          }, c.spread = i(7615), c.isAxiosError = i(6794), e.exports = c, e.exports["default"] = c
      },
      5838: e => {
          "use strict";

          function t(e) {
              this.message = e
          }
          t.prototype.toString = function() {
              return "Cancel" + (this.message ? ": " + this.message : "")
          }, t.prototype.__CANCEL__ = !0, e.exports = t
      },
      5e3: (e, t, i) => {
          "use strict";
          var n = i(5838);

          function a(e) {
              if ("function" !== typeof e) throw new TypeError("executor must be a function.");
              var t;
              this.promise = new Promise((function(e) {
                  t = e
              }));
              var i = this;
              e((function(e) {
                  i.reason || (i.reason = new n(e), t(i.reason))
              }))
          }
          a.prototype.throwIfRequested = function() {
              if (this.reason) throw this.reason
          }, a.source = function() {
              var e, t = new a((function(t) {
                  e = t
              }));
              return {
                  token: t,
                  cancel: e
              }
          }, e.exports = a
      },
      2649: e => {
          "use strict";
          e.exports = function(e) {
              return !(!e || !e.__CANCEL__)
          }
      },
      7237: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(9395),
              r = i(7332),
              s = i(1014),
              o = i(8342),
              l = i(9206),
              c = l.validators;

          function h(e) {
              this.defaults = e, this.interceptors = {
                  request: new r,
                  response: new r
              }
          }
          h.prototype.request = function(e) {
              "string" === typeof e ? (e = arguments[1] || {}, e.url = arguments[0]) : e = e || {}, e = o(this.defaults, e), e.method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";
              var t = e.transitional;
              void 0 !== t && l.assertOptions(t, {
                  silentJSONParsing: c.transitional(c.boolean, "1.0.0"),
                  forcedJSONParsing: c.transitional(c.boolean, "1.0.0"),
                  clarifyTimeoutError: c.transitional(c.boolean, "1.0.0")
              }, !1);
              var i = [],
                  n = !0;
              this.interceptors.request.forEach((function(t) {
                  "function" === typeof t.runWhen && !1 === t.runWhen(e) || (n = n && t.synchronous, i.unshift(t.fulfilled, t.rejected))
              }));
              var a, r = [];
              if (this.interceptors.response.forEach((function(e) {
                      r.push(e.fulfilled, e.rejected)
                  })), !n) {
                  var h = [s, void 0];
                  Array.prototype.unshift.apply(h, i), h = h.concat(r), a = Promise.resolve(e);
                  while (h.length) a = a.then(h.shift(), h.shift());
                  return a
              }
              var u = e;
              while (i.length) {
                  var d = i.shift(),
                      f = i.shift();
                  try {
                      u = d(u)
                  } catch (p) {
                      f(p);
                      break
                  }
              }
              try {
                  a = s(u)
              } catch (p) {
                  return Promise.reject(p)
              }
              while (r.length) a = a.then(r.shift(), r.shift());
              return a
          }, h.prototype.getUri = function(e) {
              return e = o(this.defaults, e), a(e.url, e.params, e.paramsSerializer).replace(/^\?/, "")
          }, n.forEach(["delete", "get", "head", "options"], (function(e) {
              h.prototype[e] = function(t, i) {
                  return this.request(o(i || {}, {
                      method: e,
                      url: t,
                      data: (i || {}).data
                  }))
              }
          })), n.forEach(["post", "put", "patch"], (function(e) {
              h.prototype[e] = function(t, i, n) {
                  return this.request(o(n || {}, {
                      method: e,
                      url: t,
                      data: i
                  }))
              }
          })), e.exports = h
      },
      7332: (e, t, i) => {
          "use strict";
          var n = i(6031);

          function a() {
              this.handlers = []
          }
          a.prototype.use = function(e, t, i) {
              return this.handlers.push({
                  fulfilled: e,
                  rejected: t,
                  synchronous: !!i && i.synchronous,
                  runWhen: i ? i.runWhen : null
              }), this.handlers.length - 1
          }, a.prototype.eject = function(e) {
              this.handlers[e] && (this.handlers[e] = null)
          }, a.prototype.forEach = function(e) {
              n.forEach(this.handlers, (function(t) {
                  null !== t && e(t)
              }))
          }, e.exports = a
      },
      7187: (e, t, i) => {
          "use strict";
          var n = i(6847),
              a = i(6560);
          e.exports = function(e, t) {
              return e && !n(t) ? a(e, t) : t
          }
      },
      7381: (e, t, i) => {
          "use strict";
          var n = i(4918);
          e.exports = function(e, t, i, a, r) {
              var s = new Error(e);
              return n(s, t, i, a, r)
          }
      },
      1014: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(2297),
              r = i(2649),
              s = i(9860);

          function o(e) {
              e.cancelToken && e.cancelToken.throwIfRequested()
          }
          e.exports = function(e) {
              o(e), e.headers = e.headers || {}, e.data = a.call(e, e.data, e.headers, e.transformRequest), e.headers = n.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), n.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function(t) {
                  delete e.headers[t]
              }));
              var t = e.adapter || s.adapter;
              return t(e).then((function(t) {
                  return o(e), t.data = a.call(e, t.data, t.headers, e.transformResponse), t
              }), (function(t) {
                  return r(t) || (o(e), t && t.response && (t.response.data = a.call(e, t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t)
              }))
          }
      },
      4918: e => {
          "use strict";
          e.exports = function(e, t, i, n, a) {
              return e.config = t, i && (e.code = i), e.request = n, e.response = a, e.isAxiosError = !0, e.toJSON = function() {
                  return {
                      message: this.message,
                      name: this.name,
                      description: this.description,
                      number: this.number,
                      fileName: this.fileName,
                      lineNumber: this.lineNumber,
                      columnNumber: this.columnNumber,
                      stack: this.stack,
                      config: this.config,
                      code: this.code
                  }
              }, e
          }
      },
      8342: (e, t, i) => {
          "use strict";
          var n = i(6031);
          e.exports = function(e, t) {
              t = t || {};
              var i = {},
                  a = ["url", "method", "data"],
                  r = ["headers", "auth", "proxy", "params"],
                  s = ["baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "timeoutMessage", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "decompress", "maxContentLength", "maxBodyLength", "maxRedirects", "transport", "httpAgent", "httpsAgent", "cancelToken", "socketPath", "responseEncoding"],
                  o = ["validateStatus"];

              function l(e, t) {
                  return n.isPlainObject(e) && n.isPlainObject(t) ? n.merge(e, t) : n.isPlainObject(t) ? n.merge({}, t) : n.isArray(t) ? t.slice() : t
              }

              function c(a) {
                  n.isUndefined(t[a]) ? n.isUndefined(e[a]) || (i[a] = l(void 0, e[a])) : i[a] = l(e[a], t[a])
              }
              n.forEach(a, (function(e) {
                  n.isUndefined(t[e]) || (i[e] = l(void 0, t[e]))
              })), n.forEach(r, c), n.forEach(s, (function(a) {
                  n.isUndefined(t[a]) ? n.isUndefined(e[a]) || (i[a] = l(void 0, e[a])) : i[a] = l(void 0, t[a])
              })), n.forEach(o, (function(n) {
                  n in t ? i[n] = l(e[n], t[n]) : n in e && (i[n] = l(void 0, e[n]))
              }));
              var h = a.concat(r).concat(s).concat(o),
                  u = Object.keys(e).concat(Object.keys(t)).filter((function(e) {
                      return -1 === h.indexOf(e)
                  }));
              return n.forEach(u, c), i
          }
      },
      8117: (e, t, i) => {
          "use strict";
          var n = i(7381);
          e.exports = function(e, t, i) {
              var a = i.config.validateStatus;
              i.status && a && !a(i.status) ? t(n("Request failed with status code " + i.status, i.config, null, i.request, i)) : e(i)
          }
      },
      2297: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(9860);
          e.exports = function(e, t, i) {
              var r = this || a;
              return n.forEach(i, (function(i) {
                  e = i.call(r, e, t)
              })), e
          }
      },
      9860: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = i(4129),
              r = i(4918),
              s = {
                  "Content-Type": "application/x-www-form-urlencoded"
              };

          function o(e, t) {
              !n.isUndefined(e) && n.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t)
          }

          function l() {
              var e;
              return ("undefined" !== typeof XMLHttpRequest || "undefined" !== typeof process && "[object process]" === Object.prototype.toString.call(process)) && (e = i(6857)), e
          }

          function c(e, t, i) {
              if (n.isString(e)) try {
                  return (t || JSON.parse)(e), n.trim(e)
              } catch (a) {
                  if ("SyntaxError" !== a.name) throw a
              }
              return (i || JSON.stringify)(e)
          }
          var h = {
              transitional: {
                  silentJSONParsing: !0,
                  forcedJSONParsing: !0,
                  clarifyTimeoutError: !1
              },
              adapter: l(),
              transformRequest: [function(e, t) {
                  return a(t, "Accept"), a(t, "Content-Type"), n.isFormData(e) || n.isArrayBuffer(e) || n.isBuffer(e) || n.isStream(e) || n.isFile(e) || n.isBlob(e) ? e : n.isArrayBufferView(e) ? e.buffer : n.isURLSearchParams(e) ? (o(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : n.isObject(e) || t && "application/json" === t["Content-Type"] ? (o(t, "application/json"), c(e)) : e
              }],
              transformResponse: [function(e) {
                  var t = this.transitional,
                      i = t && t.silentJSONParsing,
                      a = t && t.forcedJSONParsing,
                      s = !i && "json" === this.responseType;
                  if (s || a && n.isString(e) && e.length) try {
                      return JSON.parse(e)
                  } catch (o) {
                      if (s) {
                          if ("SyntaxError" === o.name) throw r(o, this, "E_JSON_PARSE");
                          throw o
                      }
                  }
                  return e
              }],
              timeout: 0,
              xsrfCookieName: "XSRF-TOKEN",
              xsrfHeaderName: "X-XSRF-TOKEN",
              maxContentLength: -1,
              maxBodyLength: -1,
              validateStatus: function(e) {
                  return e >= 200 && e < 300
              },
              headers: {
                  common: {
                      Accept: "application/json, text/plain, */*"
                  }
              }
          };
          n.forEach(["delete", "get", "head"], (function(e) {
              h.headers[e] = {}
          })), n.forEach(["post", "put", "patch"], (function(e) {
              h.headers[e] = n.merge(s)
          })), e.exports = h
      },
      4009: e => {
          "use strict";
          e.exports = function(e, t) {
              return function() {
                  for (var i = new Array(arguments.length), n = 0; n < i.length; n++) i[n] = arguments[n];
                  return e.apply(t, i)
              }
          }
      },
      9395: (e, t, i) => {
          "use strict";
          var n = i(6031);

          function a(e) {
              return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
          }
          e.exports = function(e, t, i) {
              if (!t) return e;
              var r;
              if (i) r = i(t);
              else if (n.isURLSearchParams(t)) r = t.toString();
              else {
                  var s = [];
                  n.forEach(t, (function(e, t) {
                      null !== e && "undefined" !== typeof e && (n.isArray(e) ? t += "[]" : e = [e], n.forEach(e, (function(e) {
                          n.isDate(e) ? e = e.toISOString() : n.isObject(e) && (e = JSON.stringify(e)), s.push(a(t) + "=" + a(e))
                      })))
                  })), r = s.join("&")
              }
              if (r) {
                  var o = e.indexOf("#"); - 1 !== o && (e = e.slice(0, o)), e += (-1 === e.indexOf("?") ? "?" : "&") + r
              }
              return e
          }
      },
      6560: e => {
          "use strict";
          e.exports = function(e, t) {
              return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
          }
      },
      6139: (e, t, i) => {
          "use strict";
          var n = i(6031);
          e.exports = n.isStandardBrowserEnv() ? function() {
              return {
                  write: function(e, t, i, a, r, s) {
                      var o = [];
                      o.push(e + "=" + encodeURIComponent(t)), n.isNumber(i) && o.push("expires=" + new Date(i).toGMTString()), n.isString(a) && o.push("path=" + a), n.isString(r) && o.push("domain=" + r), !0 === s && o.push("secure"), document.cookie = o.join("; ")
                  },
                  read: function(e) {
                      var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                      return t ? decodeURIComponent(t[3]) : null
                  },
                  remove: function(e) {
                      this.write(e, "", Date.now() - 864e5)
                  }
              }
          }() : function() {
              return {
                  write: function() {},
                  read: function() {
                      return null
                  },
                  remove: function() {}
              }
          }()
      },
      6847: e => {
          "use strict";
          e.exports = function(e) {
              return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)
          }
      },
      6794: e => {
          "use strict";
          e.exports = function(e) {
              return "object" === typeof e && !0 === e.isAxiosError
          }
      },
      4908: (e, t, i) => {
          "use strict";
          var n = i(6031);
          e.exports = n.isStandardBrowserEnv() ? function() {
              var e, t = /(msie|trident)/i.test(navigator.userAgent),
                  i = document.createElement("a");

              function a(e) {
                  var n = e;
                  return t && (i.setAttribute("href", n), n = i.href), i.setAttribute("href", n), {
                      href: i.href,
                      protocol: i.protocol ? i.protocol.replace(/:$/, "") : "",
                      host: i.host,
                      search: i.search ? i.search.replace(/^\?/, "") : "",
                      hash: i.hash ? i.hash.replace(/^#/, "") : "",
                      hostname: i.hostname,
                      port: i.port,
                      pathname: "/" === i.pathname.charAt(0) ? i.pathname : "/" + i.pathname
                  }
              }
              return e = a(window.location.href),
                  function(t) {
                      var i = n.isString(t) ? a(t) : t;
                      return i.protocol === e.protocol && i.host === e.host
                  }
          }() : function() {
              return function() {
                  return !0
              }
          }()
      },
      4129: (e, t, i) => {
          "use strict";
          var n = i(6031);
          e.exports = function(e, t) {
              n.forEach(e, (function(i, n) {
                  n !== t && n.toUpperCase() === t.toUpperCase() && (e[t] = i, delete e[n])
              }))
          }
      },
      7758: (e, t, i) => {
          "use strict";
          var n = i(6031),
              a = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
          e.exports = function(e) {
              var t, i, r, s = {};
              return e ? (n.forEach(e.split("\n"), (function(e) {
                  if (r = e.indexOf(":"), t = n.trim(e.substr(0, r)).toLowerCase(), i = n.trim(e.substr(r + 1)), t) {
                      if (s[t] && a.indexOf(t) >= 0) return;
                      s[t] = "set-cookie" === t ? (s[t] ? s[t] : []).concat([i]) : s[t] ? s[t] + ", " + i : i
                  }
              })), s) : s
          }
      },
      7615: e => {
          "use strict";
          e.exports = function(e) {
              return function(t) {
                  return e.apply(null, t)
              }
          }
      },
      9206: (e, t, i) => {
          "use strict";
          var n = i(8593),
              a = {};
          ["object", "boolean", "number", "function", "string", "symbol"].forEach((function(e, t) {
              a[e] = function(i) {
                  return typeof i === e || "a" + (t < 1 ? "n " : " ") + e
              }
          }));
          var r = {},
              s = n.version.split(".");

          function o(e, t) {
              for (var i = t ? t.split(".") : s, n = e.split("."), a = 0; a < 3; a++) {
                  if (i[a] > n[a]) return !0;
                  if (i[a] < n[a]) return !1
              }
              return !1
          }

          function l(e, t, i) {
              if ("object" !== typeof e) throw new TypeError("options must be an object");
              var n = Object.keys(e),
                  a = n.length;
              while (a-- > 0) {
                  var r = n[a],
                      s = t[r];
                  if (s) {
                      var o = e[r],
                          l = void 0 === o || s(o, r, e);
                      if (!0 !== l) throw new TypeError("option " + r + " must be " + l)
                  } else if (!0 !== i) throw Error("Unknown option " + r)
              }
          }
          a.transitional = function(e, t, i) {
              var a = t && o(t);

              function s(e, t) {
                  return "[Axios v" + n.version + "] Transitional option '" + e + "'" + t + (i ? ". " + i : "")
              }
              return function(i, n, o) {
                  if (!1 === e) throw new Error(s(n, " has been removed in " + t));
                  return a && !r[n] && (r[n] = !0, console.warn(s(n, " has been deprecated since v" + t + " and will be removed in the near future"))), !e || e(i, n, o)
              }
          }, e.exports = {
              isOlderVersion: o,
              assertOptions: l,
              validators: a
          }
      },
      6031: (e, t, i) => {
          "use strict";
          var n = i(4009),
              a = Object.prototype.toString;

          function r(e) {
              return "[object Array]" === a.call(e)
          }

          function s(e) {
              return "undefined" === typeof e
          }

          function o(e) {
              return null !== e && !s(e) && null !== e.constructor && !s(e.constructor) && "function" === typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
          }

          function l(e) {
              return "[object ArrayBuffer]" === a.call(e)
          }

          function c(e) {
              return "undefined" !== typeof FormData && e instanceof FormData
          }

          function h(e) {
              var t;
              return t = "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer, t
          }

          function u(e) {
              return "string" === typeof e
          }

          function d(e) {
              return "number" === typeof e
          }

          function f(e) {
              return null !== e && "object" === typeof e
          }

          function p(e) {
              if ("[object Object]" !== a.call(e)) return !1;
              var t = Object.getPrototypeOf(e);
              return null === t || t === Object.prototype
          }

          function g(e) {
              return "[object Date]" === a.call(e)
          }

          function x(e) {
              return "[object File]" === a.call(e)
          }

          function v(e) {
              return "[object Blob]" === a.call(e)
          }

          function m(e) {
              return "[object Function]" === a.call(e)
          }

          function b(e) {
              return f(e) && m(e.pipe)
          }

          function y(e) {
              return "undefined" !== typeof URLSearchParams && e instanceof URLSearchParams
          }

          function w(e) {
              return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
          }

          function k() {
              return ("undefined" === typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && ("undefined" !== typeof window && "undefined" !== typeof document)
          }

          function S(e, t) {
              if (null !== e && "undefined" !== typeof e)
                  if ("object" !== typeof e && (e = [e]), r(e))
                      for (var i = 0, n = e.length; i < n; i++) t.call(null, e[i], i, e);
                  else
                      for (var a in e) Object.prototype.hasOwnProperty.call(e, a) && t.call(null, e[a], a, e)
          }

          function A() {
              var e = {};

              function t(t, i) {
                  p(e[i]) && p(t) ? e[i] = A(e[i], t) : p(t) ? e[i] = A({}, t) : r(t) ? e[i] = t.slice() : e[i] = t
              }
              for (var i = 0, n = arguments.length; i < n; i++) S(arguments[i], t);
              return e
          }

          function C(e, t, i) {
              return S(t, (function(t, a) {
                  e[a] = i && "function" === typeof t ? n(t, i) : t
              })), e
          }

          function T(e) {
              return 65279 === e.charCodeAt(0) && (e = e.slice(1)), e
          }
          e.exports = {
              isArray: r,
              isArrayBuffer: l,
              isBuffer: o,
              isFormData: c,
              isArrayBufferView: h,
              isString: u,
              isNumber: d,
              isObject: f,
              isPlainObject: p,
              isUndefined: s,
              isDate: g,
              isFile: x,
              isBlob: v,
              isFunction: m,
              isStream: b,
              isURLSearchParams: y,
              isStandardBrowserEnv: k,
              forEach: S,
              merge: A,
              extend: C,
              trim: w,
              stripBOM: T
          }
      },
      4483: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => Y
          });
          var n = i(9835),
              a = i(499),
              r = i(1957),
              s = i(2857),
              o = i(3940),
              l = i(5987),
              c = i(223),
              h = i(1384),
              u = i(1705);

          function d(e, t = 250) {
              let i, n = !1;
              return function() {
                  return !1 === n && (n = !0, setTimeout((() => {
                      n = !1
                  }), t), i = e.apply(this, arguments)), i
              }
          }

          function f(e, t, i, n) {
              !0 === i.modifiers.stop && (0, h.sT)(e);
              const a = i.modifiers.color;
              let r = i.modifiers.center;
              r = !0 === r || !0 === n;
              const s = document.createElement("span"),
                  o = document.createElement("span"),
                  l = (0, h.FK)(e),
                  {
                      left: u,
                      top: d,
                      width: f,
                      height: p
                  } = t.getBoundingClientRect(),
                  g = Math.sqrt(f * f + p * p),
                  x = g / 2,
                  v = (f - g) / 2 + "px",
                  m = r ? v : l.left - u - x + "px",
                  b = (p - g) / 2 + "px",
                  y = r ? b : l.top - d - x + "px";
              o.className = "q-ripple__inner", (0, c.iv)(o, {
                  height: `${g}px`,
                  width: `${g}px`,
                  transform: `translate3d(${m},${y},0) scale3d(.2,.2,1)`,
                  opacity: 0
              }), s.className = "q-ripple" + (a ? " text-" + a : ""), s.setAttribute("dir", "ltr"), s.appendChild(o), t.appendChild(s);
              const w = () => {
                  s.remove(), clearTimeout(k)
              };
              i.abort.push(w);
              let k = setTimeout((() => {
                  o.classList.add("q-ripple__inner--enter"), o.style.transform = `translate3d(${v},${b},0) scale3d(1,1,1)`, o.style.opacity = .2, k = setTimeout((() => {
                      o.classList.remove("q-ripple__inner--enter"), o.classList.add("q-ripple__inner--leave"), o.style.opacity = 0, k = setTimeout((() => {
                          s.remove(), i.abort.splice(i.abort.indexOf(w), 1)
                      }), 275)
                  }), 250)
              }), 50)
          }

          function p(e, {
              modifiers: t,
              value: i,
              arg: n,
              instance: a
          }) {
              const r = Object.assign({}, a.$q.config.ripple, t, i);
              e.modifiers = {
                  early: !0 === r.early,
                  stop: !0 === r.stop,
                  center: !0 === r.center,
                  color: r.color || n,
                  keyCodes: [].concat(r.keyCodes || 13)
              }
          }
          const g = (0, l.f)({
              name: "ripple",
              beforeMount(e, t) {
                  const i = {
                      enabled: !1 !== t.value,
                      modifiers: {},
                      abort: [],
                      start(t) {
                          !0 === i.enabled && !0 !== t.qSkipRipple && (!0 === i.modifiers.early ? !0 === ["mousedown", "touchstart"].includes(t.type) : "click" === t.type) && f(t, e, i, !0 === t.qKeyEvent)
                      },
                      keystart: d((t => {
                          !0 === i.enabled && !0 !== t.qSkipRipple && !0 === (0, u.So)(t, i.modifiers.keyCodes) && t.type === "key" + (!0 === i.modifiers.early ? "down" : "up") && f(t, e, i, !0)
                      }), 300)
                  };
                  p(i, t), e.__qripple = i, (0, h.M0)(i, "main", [
                      [e, "mousedown", "start", "passive"],
                      [e, "touchstart", "start", "passive"],
                      [e, "click", "start", "passive"],
                      [e, "keydown", "keystart", "passive"],
                      [e, "keyup", "keystart", "passive"]
                  ])
              },
              updated(e, t) {
                  if (t.oldValue !== t.value) {
                      const i = e.__qripple;
                      i.enabled = !1 !== t.value, !0 === i.enabled && Object(t.value) === t.value && p(i, t)
                  }
              },
              beforeUnmount(e) {
                  const t = e.__qripple;
                  t.abort.forEach((e => {
                      e()
                  })), (0, h.ul)(t, "main"), delete e._qripple
              }
          });
          i(5583);
          const x = {
                  left: "start",
                  center: "center",
                  right: "end",
                  between: "between",
                  around: "around",
                  evenly: "evenly",
                  stretch: "stretch"
              },
              v = Object.keys(x),
              m = {
                  align: {
                      type: String,
                      validator: e => v.includes(e)
                  }
              };

          function b(e) {
              return (0, n.Fl)((() => {
                  const t = void 0 === e.align ? !0 === e.vertical ? "stretch" : "left" : e.align;
                  return `${!0===e.vertical?"items":"justify"}-${x[t]}`
              }))
          }
          var y = i(244);
          i(8964), i(702);

          function w(e) {
              return void 0 !== e.appContext.config.globalProperties.$router
          }

          function k(e) {
              return e ? e.aliasOf ? e.aliasOf.path : e.path : ""
          }

          function S(e, t) {
              return (e.aliasOf || e) === (t.aliasOf || t)
          }

          function A(e, t) {
              for (const i in t) {
                  const n = t[i],
                      a = e[i];
                  if ("string" === typeof n) {
                      if (n !== a) return !1
                  } else if (!1 === Array.isArray(a) || a.length !== n.length || n.some(((e, t) => e !== a[t]))) return !1
              }
              return !0
          }

          function C(e, t) {
              return !0 === Array.isArray(t) ? e.length === t.length && e.every(((e, i) => e === t[i])) : 1 === e.length && e[0] === t
          }

          function T(e, t) {
              return !0 === Array.isArray(e) ? C(e, t) : !0 === Array.isArray(t) ? C(t, e) : e === t
          }

          function E(e, t) {
              if (Object.keys(e).length !== Object.keys(t).length) return !1;
              for (const i in e)
                  if (!1 === T(e[i], t[i])) return !1;
              return !0
          }
          const L = {
              to: [String, Object],
              replace: Boolean,
              exact: Boolean,
              activeClass: {
                  type: String,
                  default: "q-router-link--active"
              },
              exactActiveClass: {
                  type: String,
                  default: "q-router-link--exact-active"
              },
              href: String,
              target: String,
              disable: Boolean
          };

          function P(e) {
              const t = (0, n.FN)(),
                  {
                      props: i,
                      proxy: a
                  } = t,
                  r = w(t),
                  s = (0, n.Fl)((() => !0 !== i.disable && void 0 !== i.href)),
                  o = (0, n.Fl)((() => !0 === r && !0 !== i.disable && !0 !== s.value && void 0 !== i.to && null !== i.to && "" !== i.to)),
                  l = (0, n.Fl)((() => {
                      if (!0 === o.value) try {
                          return a.$router.resolve(i.to)
                      } catch (e) {}
                      return null
                  })),
                  c = (0, n.Fl)((() => null !== l.value)),
                  u = (0, n.Fl)((() => !0 === s.value || !0 === c.value)),
                  d = (0, n.Fl)((() => "a" === i.type || !0 === u.value ? "a" : i.tag || e || "div")),
                  f = (0, n.Fl)((() => !0 === s.value ? {
                      href: i.href,
                      target: i.target
                  } : !0 === c.value ? {
                      href: l.value.href,
                      target: i.target
                  } : {})),
                  p = (0, n.Fl)((() => {
                      if (!1 === c.value) return null;
                      const {
                          matched: e
                      } = l.value, {
                          length: t
                      } = e, i = e[t - 1];
                      if (void 0 === i) return -1;
                      const n = a.$route.matched;
                      if (0 === n.length) return -1;
                      const r = n.findIndex(S.bind(null, i));
                      if (r > -1) return r;
                      const s = k(e[t - 2]);
                      return t > 1 && k(i) === s && n[n.length - 1].path !== s ? n.findIndex(S.bind(null, e[t - 2])) : r
                  })),
                  g = (0, n.Fl)((() => !0 === c.value && p.value > -1 && A(a.$route.params, l.value.params))),
                  x = (0, n.Fl)((() => !0 === g.value && p.value === a.$route.matched.length - 1 && E(a.$route.params, l.value.params))),
                  v = (0, n.Fl)((() => !0 === c.value ? !0 === x.value ? ` ${i.exactActiveClass} ${i.activeClass}` : !0 === i.exact ? "" : !0 === g.value ? ` ${i.activeClass}` : "" : ""));

              function m(e) {
                  return !(!0 === i.disable || e.metaKey || e.altKey || e.ctrlKey || e.shiftKey || !0 !== e.__qNavigate && !0 === e.defaultPrevented || void 0 !== e.button && 0 !== e.button || "_blank" === i.target) && ((0, h.X$)(e), a.$router[!0 === i.replace ? "replace" : "push"](i.to).catch((e => e)))
              }
              return {
                  hasRouterLink: c,
                  hasHrefLink: s,
                  hasLink: u,
                  linkTag: d,
                  linkRoute: l,
                  linkIsActive: g,
                  linkIsExactActive: x,
                  linkClass: v,
                  linkProps: f,
                  navigateToRouterLink: m
              }
          }
          const M = {
                  none: 0,
                  xs: 4,
                  sm: 8,
                  md: 16,
                  lg: 24,
                  xl: 32
              },
              I = {
                  xs: 8,
                  sm: 10,
                  md: 14,
                  lg: 20,
                  xl: 24
              },
              R = ["button", "submit", "reset"],
              _ = /[^\s]\/[^\s]/,
              O = {
                  ...y.LU,
                  ...L,
                  type: {
                      type: String,
                      default: "button"
                  },
                  label: [Number, String],
                  icon: String,
                  iconRight: String,
                  round: Boolean,
                  outline: Boolean,
                  flat: Boolean,
                  unelevated: Boolean,
                  rounded: Boolean,
                  push: Boolean,
                  glossy: Boolean,
                  size: String,
                  fab: Boolean,
                  fabMini: Boolean,
                  padding: String,
                  color: String,
                  textColor: String,
                  noCaps: Boolean,
                  noWrap: Boolean,
                  dense: Boolean,
                  tabindex: [Number, String],
                  ripple: {
                      type: [Boolean, Object],
                      default: !0
                  },
                  align: {
                      ...m.align,
                      default: "center"
                  },
                  stack: Boolean,
                  stretch: Boolean,
                  loading: {
                      type: Boolean,
                      default: null
                  },
                  disable: Boolean
              };

          function F(e) {
              const t = (0, y.ZP)(e, I),
                  i = b(e),
                  {
                      hasRouterLink: a,
                      hasLink: r,
                      linkTag: s,
                      linkProps: o,
                      navigateToRouterLink: l
                  } = P("button"),
                  c = (0, n.Fl)((() => {
                      const i = !1 === e.fab && !1 === e.fabMini ? t.value : {};
                      return void 0 !== e.padding ? Object.assign({}, i, {
                          padding: e.padding.split(/\s+/).map((e => e in M ? M[e] + "px" : e)).join(" "),
                          minWidth: "0",
                          minHeight: "0"
                      }) : i
                  })),
                  h = (0, n.Fl)((() => !0 === e.rounded || !0 === e.fab || !0 === e.fabMini)),
                  u = (0, n.Fl)((() => !0 !== e.disable && !0 !== e.loading)),
                  d = (0, n.Fl)((() => !0 === u.value ? e.tabindex || 0 : -1)),
                  f = (0, n.Fl)((() => !0 === e.flat ? "flat" : !0 === e.outline ? "outline" : !0 === e.push ? "push" : !0 === e.unelevated ? "unelevated" : "standard")),
                  p = (0, n.Fl)((() => {
                      const t = {
                          tabindex: d.value
                      };
                      return !0 === r.value ? Object.assign(t, o.value) : !0 === R.includes(e.type) && (t.type = e.type), "a" === s.value ? (!0 === e.disable ? t["aria-disabled"] = "true" : void 0 === t.href && (t.role = "button"), !0 !== a.value && !0 === _.test(e.type) && (t.type = e.type)) : !0 === e.disable && (t.disabled = "", t["aria-disabled"] = "true"), !0 === e.loading && void 0 !== e.percentage && Object.assign(t, {
                          role: "progressbar",
                          "aria-valuemin": 0,
                          "aria-valuemax": 100,
                          "aria-valuenow": e.percentage
                      }), t
                  })),
                  g = (0, n.Fl)((() => {
                      let t;
                      return void 0 !== e.color ? t = !0 === e.flat || !0 === e.outline ? `text-${e.textColor||e.color}` : `bg-${e.color} text-${e.textColor||"white"}` : e.textColor && (t = `text-${e.textColor}`), `q-btn--${f.value} q-btn--` + (!0 === e.round ? "round" : "rectangle" + (!0 === h.value ? " q-btn--rounded" : "")) + (void 0 !== t ? " " + t : "") + (!0 === u.value ? " q-btn--actionable q-focusable q-hoverable" : !0 === e.disable ? " disabled" : "") + (!0 === e.fab ? " q-btn--fab" : !0 === e.fabMini ? " q-btn--fab-mini" : "") + (!0 === e.noCaps ? " q-btn--no-uppercase" : "") + (!0 === e.dense ? " q-btn--dense" : "") + (!0 === e.stretch ? " no-border-radius self-stretch" : "") + (!0 === e.glossy ? " glossy" : "")
                  })),
                  x = (0, n.Fl)((() => i.value + (!0 === e.stack ? " column" : " row") + (!0 === e.noWrap ? " no-wrap text-no-wrap" : "") + (!0 === e.loading ? " q-btn__content--hidden" : "")));
              return {
                  classes: g,
                  style: c,
                  innerClasses: x,
                  attributes: p,
                  hasRouterLink: a,
                  hasLink: r,
                  linkTag: s,
                  navigateToRouterLink: l,
                  isActionable: u
              }
          }
          var N = i(2026);
          const {
              passiveCapture: z
          } = h.rU;
          let D = null,
              H = null,
              X = null;
          const Y = (0, l.L)({
              name: "QBtn",
              props: {
                  ...O,
                  percentage: Number,
                  darkPercentage: Boolean
              },
              emits: ["click", "keydown", "touchstart", "mousedown", "keyup"],
              setup(e, {
                  slots: t,
                  emit: i
              }) {
                  const {
                      proxy: l
                  } = (0, n.FN)(), {
                      classes: c,
                      style: d,
                      innerClasses: f,
                      attributes: p,
                      hasRouterLink: x,
                      hasLink: v,
                      linkTag: m,
                      navigateToRouterLink: b,
                      isActionable: y
                  } = F(e), w = (0, a.iH)(null), k = (0, a.iH)(null);
                  let S, A, C = null;
                  const T = (0, n.Fl)((() => void 0 !== e.label && null !== e.label && "" !== e.label)),
                      E = (0, n.Fl)((() => !0 !== e.disable && !1 !== e.ripple && {
                          keyCodes: !0 === v.value ? [13, 32] : [13],
                          ...!0 === e.ripple ? {} : e.ripple
                      })),
                      L = (0, n.Fl)((() => ({
                          center: e.round
                      }))),
                      P = (0, n.Fl)((() => {
                          const t = Math.max(0, Math.min(100, e.percentage));
                          return t > 0 ? {
                              transition: "transform 0.6s",
                              transform: `translateX(${t-100}%)`
                          } : {}
                      })),
                      M = (0, n.Fl)((() => !0 === e.loading ? {
                          onMousedown: W,
                          onTouchstartPassive: W,
                          onClick: W,
                          onKeydown: W,
                          onKeyup: W
                      } : !0 === y.value ? {
                          onClick: R,
                          onKeydown: _,
                          onMousedown: Y,
                          onTouchstart: O
                      } : {
                          onClick: h.NS
                      })),
                      I = (0, n.Fl)((() => ({
                          ref: w,
                          class: "q-btn q-btn-item non-selectable no-outline " + c.value,
                          style: d.value,
                          ...p.value,
                          ...M.value
                      })));

                  function R(t) {
                      if (null !== w.value) {
                          if (void 0 !== t) {
                              if (!0 === t.defaultPrevented) return;
                              const i = document.activeElement;
                              if ("submit" === e.type && i !== document.body && !1 === w.value.contains(i) && !1 === i.contains(w.value)) {
                                  w.value.focus();
                                  const e = () => {
                                      document.removeEventListener("keydown", h.NS, !0), document.removeEventListener("keyup", e, z), null !== w.value && w.value.removeEventListener("blur", e, z)
                                  };
                                  document.addEventListener("keydown", h.NS, !0), document.addEventListener("keyup", e, z), w.value.addEventListener("blur", e, z)
                              }
                          }
                          if (!0 === x.value) {
                              const e = () => {
                                  t.__qNavigate = !0, b(t)
                              };
                              i("click", t, e), !0 !== t.defaultPrevented && e()
                          } else i("click", t)
                      }
                  }

                  function _(e) {
                      null !== w.value && (i("keydown", e), !0 === (0, u.So)(e, [13, 32]) && H !== w.value && (null !== H && j(), !0 !== e.defaultPrevented && (w.value.focus(), H = w.value, w.value.classList.add("q-btn--active"), document.addEventListener("keyup", B, !0), w.value.addEventListener("blur", B, z)), (0, h.NS)(e)))
                  }

                  function O(e) {
                      null !== w.value && (i("touchstart", e), !0 !== e.defaultPrevented && (D !== w.value && (null !== D && j(), D = w.value, C = e.target, C.addEventListener("touchcancel", B, z), C.addEventListener("touchend", B, z)), S = !0, clearTimeout(A), A = setTimeout((() => {
                          S = !1
                      }), 200)))
                  }

                  function Y(e) {
                      null !== w.value && (e.qSkipRipple = !0 === S, i("mousedown", e), !0 !== e.defaultPrevented && X !== w.value && (null !== X && j(), X = w.value, w.value.classList.add("q-btn--active"), document.addEventListener("mouseup", B, z)))
                  }

                  function B(e) {
                      if (null !== w.value && (void 0 === e || "blur" !== e.type || document.activeElement !== w.value)) {
                          if (void 0 !== e && "keyup" === e.type) {
                              if (H === w.value && !0 === (0, u.So)(e, [13, 32])) {
                                  const t = new MouseEvent("click", e);
                                  t.qKeyEvent = !0, !0 === e.defaultPrevented && (0, h.X$)(t), !0 === e.cancelBubble && (0, h.sT)(t), w.value.dispatchEvent(t), (0, h.NS)(e), e.qKeyEvent = !0
                              }
                              i("keyup", e)
                          }
                          j()
                      }
                  }

                  function j(e) {
                      const t = k.value;
                      !0 === e || D !== w.value && X !== w.value || null === t || t === document.activeElement || (t.setAttribute("tabindex", -1), t.focus()), D === w.value && (null !== C && (C.removeEventListener("touchcancel", B, z), C.removeEventListener("touchend", B, z)), D = C = null), X === w.value && (document.removeEventListener("mouseup", B, z), X = null), H === w.value && (document.removeEventListener("keyup", B, !0), null !== w.value && w.value.removeEventListener("blur", B, z), H = null), null !== w.value && w.value.classList.remove("q-btn--active")
                  }

                  function W(e) {
                      (0, h.NS)(e), e.qSkipRipple = !0
                  }
                  return (0, n.Jd)((() => {
                      j(!0)
                  })), Object.assign(l, {
                      click: R
                  }), () => {
                      let i = [];
                      void 0 !== e.icon && i.push((0, n.h)(s.Z, {
                          name: e.icon,
                          left: !1 === e.stack && !0 === T.value,
                          role: "img",
                          "aria-hidden": "true"
                      })), !0 === T.value && i.push((0, n.h)("span", {
                          class: "block"
                      }, [e.label])), i = (0, N.vs)(t.default, i), void 0 !== e.iconRight && !1 === e.round && i.push((0, n.h)(s.Z, {
                          name: e.iconRight,
                          right: !1 === e.stack && !0 === T.value,
                          role: "img",
                          "aria-hidden": "true"
                      }));
                      const a = [(0, n.h)("span", {
                          class: "q-focus-helper",
                          ref: k
                      })];
                      return !0 === e.loading && void 0 !== e.percentage && a.push((0, n.h)("span", {
                          class: "q-btn__progress absolute-full overflow-hidden"
                      }, [(0, n.h)("span", {
                          class: "q-btn__progress-indicator fit block" + (!0 === e.darkPercentage ? " q-btn__progress--dark" : ""),
                          style: P.value
                      })])), a.push((0, n.h)("span", {
                          class: "q-btn__content text-center col items-center q-anchor--skip " + f.value
                      }, i)), null !== e.loading && a.push((0, n.h)(r.uT, {
                          name: "q-transition--fade"
                      }, (() => !0 === e.loading ? [(0, n.h)("span", {
                          key: "loading",
                          class: "absolute-full flex flex-center"
                      }, void 0 !== t.loading ? t.loading() : [(0, n.h)(o.Z)])] : null))), (0, n.wy)((0, n.h)(m.value, I.value, a), [
                          [g, E.value, void 0, L.value]
                      ])
                  }
              }
          })
      },
      2857: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => y
          });
          i(702);
          var n = i(9835),
              a = i(244),
              r = i(5987),
              s = i(2026);
          const o = "0 0 24 24",
              l = e => e,
              c = e => `ionicons ${e}`,
              h = {
                  "icon-": l,
                  "bt-": e => `bt ${e}`,
                  "eva-": e => `eva ${e}`,
                  "ion-md": c,
                  "ion-ios": c,
                  "ion-logo": c,
                  "mdi-": e => `mdi ${e}`,
                  "iconfont ": l,
                  "ti-": e => `themify-icon ${e}`,
                  "bi-": e => `bootstrap-icons ${e}`
              },
              u = {
                  o_: "-outlined",
                  r_: "-round",
                  s_: "-sharp"
              },
              d = new RegExp("^(" + Object.keys(h).join("|") + ")"),
              f = new RegExp("^(" + Object.keys(u).join("|") + ")"),
              p = /^[Mm]\s?[-+]?\.?\d/,
              g = /^img:/,
              x = /^svguse:/,
              v = /^ion-/,
              m = /^[lf]a[srlbdk]? /,
              b = /^fa-(brand|regular|solid)/,
              y = (0, r.L)({
                  name: "QIcon",
                  props: {
                      ...a.LU,
                      tag: {
                          type: String,
                          default: "i"
                      },
                      name: String,
                      color: String,
                      left: Boolean,
                      right: Boolean
                  },
                  setup(e, {
                      slots: t
                  }) {
                      const {
                          proxy: {
                              $q: i
                          }
                      } = (0, n.FN)(), r = (0, a.ZP)(e), l = (0, n.Fl)((() => "q-icon" + (!0 === e.left ? " on-left" : "") + (!0 === e.right ? " on-right" : "") + (void 0 !== e.color ? ` text-${e.color}` : ""))), c = (0, n.Fl)((() => {
                          let t, a = e.name;
                          if ("none" === a || !a) return {
                              none: !0
                          };
                          if (null !== i.iconMapFn) {
                              const e = i.iconMapFn(a);
                              if (void 0 !== e) {
                                  if (void 0 === e.icon) return {
                                      cls: e.cls,
                                      content: void 0 !== e.content ? e.content : " "
                                  };
                                  if (a = e.icon, "none" === a || !a) return {
                                      none: !0
                                  }
                              }
                          }
                          if (!0 === p.test(a)) {
                              const [e, t = o] = a.split("|");
                              return {
                                  svg: !0,
                                  viewBox: t,
                                  nodes: e.split("&&").map((e => {
                                      const [t, i, a] = e.split("@@");
                                      return (0, n.h)("path", {
                                          style: i,
                                          d: t,
                                          transform: a
                                      })
                                  }))
                              }
                          }
                          if (!0 === g.test(a)) return {
                              img: !0,
                              src: a.substring(4)
                          };
                          if (!0 === x.test(a)) {
                              const [e, t = o] = a.split("|");
                              return {
                                  svguse: !0,
                                  src: e.substring(7),
                                  viewBox: t
                              }
                          }
                          let r = " ";
                          const s = a.match(d);
                          if (null !== s) t = h[s[1]](a);
                          else if (!0 === m.test(a) || !0 === b.test(a)) t = a;
                          else if (!0 === v.test(a)) t = `ionicons ion-${!0===i.platform.is.ios?"ios":"md"}${a.substr(3)}`;
                          else {
                              t = "notranslate material-icons";
                              const e = a.match(f);
                              null !== e && (a = a.substring(2), t += u[e[1]]), r = a
                          }
                          return {
                              cls: t,
                              content: r
                          }
                      }));
                      return () => {
                          const i = {
                              class: l.value,
                              style: r.value,
                              "aria-hidden": "true",
                              role: "presentation"
                          };
                          return !0 === c.value.none ? (0, n.h)(e.tag, i, (0, s.KR)(t.default)) : !0 === c.value.img ? (0, n.h)("span", i, (0, s.vs)(t.default, [(0, n.h)("img", {
                              src: c.value.src
                          })])) : !0 === c.value.svg ? (0, n.h)("span", i, (0, s.vs)(t.default, [(0, n.h)("svg", {
                              viewBox: c.value.viewBox
                          }, c.value.nodes)])) : !0 === c.value.svguse ? (0, n.h)("span", i, (0, s.vs)(t.default, [(0, n.h)("svg", {
                              viewBox: c.value.viewBox
                          }, [(0, n.h)("use", {
                              "xlink:href": c.value.src
                          })])])) : (void 0 !== c.value.cls && (i.class += " " + c.value.cls), (0, n.h)(e.tag, i, (0, s.vs)(t.default, [c.value.content])))
                      }
                  }
              })
      },
      2500: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => A
          });
          var n = i(9835),
              a = i(499),
              r = i(7506),
              s = (i(702), i(5987)),
              o = i(223);
          const l = [null, document, document.body, document.scrollingElement, document.documentElement];

          function c(e, t) {
              let i = (0, o.sb)(t);
              if (void 0 === i) {
                  if (void 0 === e || null === e) return window;
                  i = e.closest(".scroll,.scroll-y,.overflow-auto")
              }
              return l.includes(i) ? window : i
          }

          function h(e) {
              return e === window ? window.pageYOffset || window.scrollY || document.body.scrollTop || 0 : e.scrollTop
          }

          function u(e) {
              return e === window ? window.pageXOffset || window.scrollX || document.body.scrollLeft || 0 : e.scrollLeft
          }
          let d;

          function f() {
              if (void 0 !== d) return d;
              const e = document.createElement("p"),
                  t = document.createElement("div");
              (0, o.iv)(e, {
                  width: "100%",
                  height: "200px"
              }), (0, o.iv)(t, {
                  position: "absolute",
                  top: "0px",
                  left: "0px",
                  visibility: "hidden",
                  width: "200px",
                  height: "150px",
                  overflow: "hidden"
              }), t.appendChild(e), document.body.appendChild(t);
              const i = e.offsetWidth;
              t.style.overflow = "scroll";
              let n = e.offsetWidth;
              return i === n && (n = t.clientWidth), t.remove(), d = i - n, d
          }
          var p = i(1384);
          const {
              passive: g
          } = p.rU, x = ["both", "horizontal", "vertical"], v = (0, s.L)({
              name: "QScrollObserver",
              props: {
                  axis: {
                      type: String,
                      validator: e => x.includes(e),
                      default: "vertical"
                  },
                  debounce: [String, Number],
                  scrollTarget: {
                      default: void 0
                  }
              },
              emits: ["scroll"],
              setup(e, {
                  emit: t
              }) {
                  const i = {
                      position: {
                          top: 0,
                          left: 0
                      },
                      direction: "down",
                      directionChanged: !1,
                      delta: {
                          top: 0,
                          left: 0
                      },
                      inflectionPoint: {
                          top: 0,
                          left: 0
                      }
                  };
                  let a, r, s = null;

                  function o() {
                      null !== s && s();
                      const n = Math.max(0, h(a)),
                          r = u(a),
                          o = {
                              top: n - i.position.top,
                              left: r - i.position.left
                          };
                      if ("vertical" === e.axis && 0 === o.top || "horizontal" === e.axis && 0 === o.left) return;
                      const l = Math.abs(o.top) >= Math.abs(o.left) ? o.top < 0 ? "up" : "down" : o.left < 0 ? "left" : "right";
                      i.position = {
                          top: n,
                          left: r
                      }, i.directionChanged = i.direction !== l, i.delta = o, !0 === i.directionChanged && (i.direction = l, i.inflectionPoint = i.position), t("scroll", {
                          ...i
                      })
                  }

                  function l() {
                      a = c(r, e.scrollTarget), a.addEventListener("scroll", f, g), f(!0)
                  }

                  function d() {
                      void 0 !== a && (a.removeEventListener("scroll", f, g), a = void 0)
                  }

                  function f(t) {
                      if (!0 === t || 0 === e.debounce || "0" === e.debounce) o();
                      else if (null === s) {
                          const [t, i] = e.debounce ? [setTimeout(o, e.debounce), clearTimeout] : [requestAnimationFrame(o), cancelAnimationFrame];
                          s = () => {
                              i(t), s = null
                          }
                      }
                  }(0, n.YP)((() => e.scrollTarget), (() => {
                      d(), l()
                  }));
                  const x = (0, n.FN)();
                  return (0, n.bv)((() => {
                      r = x.proxy.$el.parentNode, l()
                  })), (0, n.Jd)((() => {
                      null !== s && s(), d()
                  })), Object.assign(x.proxy, {
                      trigger: f,
                      getPosition: () => i
                  }), p.ZT
              }
          });

          function m() {
              const e = (0, a.iH)(!r.uX.value);
              return !1 === e.value && (0, n.bv)((() => {
                  e.value = !0
              })), e
          }
          const b = "undefined" !== typeof ResizeObserver,
              y = !0 === b ? {} : {
                  style: "display:block;position:absolute;top:0;left:0;right:0;bottom:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;",
                  url: "about:blank"
              },
              w = (0, s.L)({
                  name: "QResizeObserver",
                  props: {
                      debounce: {
                          type: [String, Number],
                          default: 100
                      }
                  },
                  emits: ["resize"],
                  setup(e, {
                      emit: t
                  }) {
                      let i, a = null,
                          r = {
                              width: -1,
                              height: -1
                          };

                      function s(t) {
                          !0 === t || 0 === e.debounce || "0" === e.debounce ? o() : null === a && (a = setTimeout(o, e.debounce))
                      }

                      function o() {
                          if (clearTimeout(a), a = null, i) {
                              const {
                                  offsetWidth: e,
                                  offsetHeight: n
                              } = i;
                              e === r.width && n === r.height || (r = {
                                  width: e,
                                  height: n
                              }, t("resize", r))
                          }
                      }
                      const l = (0, n.FN)();
                      if (Object.assign(l.proxy, {
                              trigger: s
                          }), !0 === b) {
                          let c;
                          return (0, n.bv)((() => {
                              (0, n.Y3)((() => {
                                  i = l.proxy.$el.parentNode, i && (c = new ResizeObserver(s), c.observe(i), o())
                              }))
                          })), (0, n.Jd)((() => {
                              clearTimeout(a), void 0 !== c && (void 0 !== c.disconnect ? c.disconnect() : i && c.unobserve(i))
                          })), p.ZT
                      } {
                          const h = m();
                          let u;

                          function d() {
                              clearTimeout(a), void 0 !== u && (void 0 !== u.removeEventListener && u.removeEventListener("resize", s, p.rU.passive), u = void 0)
                          }

                          function f() {
                              d(), i && i.contentDocument && (u = i.contentDocument.defaultView, u.addEventListener("resize", s, p.rU.passive), o())
                          }
                          return (0, n.bv)((() => {
                              (0, n.Y3)((() => {
                                  i = l.proxy.$el, i && f()
                              }))
                          })), (0, n.Jd)(d), () => {
                              if (!0 === h.value) return (0, n.h)("object", {
                                  style: y.style,
                                  tabindex: -1,
                                  type: "text/html",
                                  data: y.url,
                                  "aria-hidden": "true",
                                  onLoad: f
                              })
                          }
                      }
                  }
              });
          var k = i(2026),
              S = i(5439);
          const A = (0, s.L)({
              name: "QLayout",
              props: {
                  container: Boolean,
                  view: {
                      type: String,
                      default: "hhh lpr fff",
                      validator: e => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(e.toLowerCase())
                  },
                  onScroll: Function,
                  onScrollHeight: Function,
                  onResize: Function
              },
              setup(e, {
                  slots: t,
                  emit: i
              }) {
                  const {
                      proxy: {
                          $q: s
                      }
                  } = (0, n.FN)(), o = (0, a.iH)(null), l = (0, a.iH)(s.screen.height), c = (0, a.iH)(!0 === e.container ? 0 : s.screen.width), h = (0, a.iH)({
                      position: 0,
                      direction: "down",
                      inflectionPoint: 0
                  }), u = (0, a.iH)(0), d = (0, a.iH)(!0 === r.uX.value ? 0 : f()), p = (0, n.Fl)((() => "q-layout q-layout--" + (!0 === e.container ? "containerized" : "standard"))), g = (0, n.Fl)((() => !1 === e.container ? {
                      minHeight: s.screen.height + "px"
                  } : null)), x = (0, n.Fl)((() => 0 !== d.value ? {
                      [!0 === s.lang.rtl ? "left" : "right"]: `${d.value}px`
                  } : null)), m = (0, n.Fl)((() => 0 !== d.value ? {
                      [!0 === s.lang.rtl ? "right" : "left"]: 0,
                      [!0 === s.lang.rtl ? "left" : "right"]: `-${d.value}px`,
                      width: `calc(100% + ${d.value}px)`
                  } : null));

                  function b(t) {
                      if (!0 === e.container || !0 !== document.qScrollPrevented) {
                          const n = {
                              position: t.position.top,
                              direction: t.direction,
                              directionChanged: t.directionChanged,
                              inflectionPoint: t.inflectionPoint.top,
                              delta: t.delta.top
                          };
                          h.value = n, void 0 !== e.onScroll && i("scroll", n)
                      }
                  }

                  function y(t) {
                      const {
                          height: n,
                          width: a
                      } = t;
                      let r = !1;
                      l.value !== n && (r = !0, l.value = n, void 0 !== e.onScrollHeight && i("scroll-height", n), C()), c.value !== a && (r = !0, c.value = a), !0 === r && void 0 !== e.onResize && i("resize", t)
                  }

                  function A({
                      height: e
                  }) {
                      u.value !== e && (u.value = e, C())
                  }

                  function C() {
                      if (!0 === e.container) {
                          const e = l.value > u.value ? f() : 0;
                          d.value !== e && (d.value = e)
                      }
                  }
                  let T;
                  const E = {
                      instances: {},
                      view: (0, n.Fl)((() => e.view)),
                      isContainer: (0, n.Fl)((() => e.container)),
                      rootRef: o,
                      height: l,
                      containerHeight: u,
                      scrollbarWidth: d,
                      totalWidth: (0, n.Fl)((() => c.value + d.value)),
                      rows: (0, n.Fl)((() => {
                          const t = e.view.toLowerCase().split(" ");
                          return {
                              top: t[0].split(""),
                              middle: t[1].split(""),
                              bottom: t[2].split("")
                          }
                      })),
                      header: (0, a.qj)({
                          size: 0,
                          offset: 0,
                          space: !1
                      }),
                      right: (0, a.qj)({
                          size: 300,
                          offset: 0,
                          space: !1
                      }),
                      footer: (0, a.qj)({
                          size: 0,
                          offset: 0,
                          space: !1
                      }),
                      left: (0, a.qj)({
                          size: 300,
                          offset: 0,
                          space: !1
                      }),
                      scroll: h,
                      animate() {
                          void 0 !== T ? clearTimeout(T) : document.body.classList.add("q-body--layout-animate"), T = setTimeout((() => {
                              document.body.classList.remove("q-body--layout-animate"), T = void 0
                          }), 155)
                      },
                      update(e, t, i) {
                          E[e][t] = i
                      }
                  };
                  if ((0, n.JJ)(S.YE, E), f() > 0) {
                      let L = null;
                      const P = document.body;

                      function M() {
                          L = null, P.classList.remove("hide-scrollbar")
                      }

                      function I() {
                          if (null === L) {
                              if (P.scrollHeight > s.screen.height) return;
                              P.classList.add("hide-scrollbar")
                          } else clearTimeout(L);
                          L = setTimeout(M, 300)
                      }

                      function R(e) {
                          null !== L && "remove" === e && (clearTimeout(L), M()), window[`${e}EventListener`]("resize", I)
                      }(0, n.YP)((() => !0 !== e.container ? "add" : "remove"), R), !0 !== e.container && R("add"), (0, n.Ah)((() => {
                          R("remove")
                      }))
                  }
                  return () => {
                      const i = (0, k.vs)(t.default, [(0, n.h)(v, {
                              onScroll: b
                          }), (0, n.h)(w, {
                              onResize: y
                          })]),
                          a = (0, n.h)("div", {
                              class: p.value,
                              style: g.value,
                              ref: !0 === e.container ? void 0 : o
                          }, i);
                      return !0 === e.container ? (0, n.h)("div", {
                          class: "q-layout-container overflow-hidden",
                          ref: o
                      }, [(0, n.h)(w, {
                          onResize: A
                      }), (0, n.h)("div", {
                          class: "absolute-full",
                          style: x.value
                      }, [(0, n.h)("div", {
                          class: "scroll",
                          style: m.value
                      }, [a])])]) : a
                  }
              }
          })
      },
      2133: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => o
          });
          var n = i(9835),
              a = i(5987),
              r = i(2026),
              s = i(5439);
          const o = (0, a.L)({
              name: "QPageContainer",
              setup(e, {
                  slots: t
              }) {
                  const {
                      proxy: {
                          $q: i
                      }
                  } = (0, n.FN)(), a = (0, n.f3)(s.YE, (() => {
                      console.error("QPageContainer needs to be child of QLayout")
                  }));
                  (0, n.JJ)(s.Mw, !0);
                  const o = (0, n.Fl)((() => {
                      const e = {};
                      return !0 === a.header.space && (e.paddingTop = `${a.header.size}px`), !0 === a.right.space && (e["padding" + (!0 === i.lang.rtl ? "Left" : "Right")] = `${a.right.size}px`), !0 === a.footer.space && (e.paddingBottom = `${a.footer.size}px`), !0 === a.left.space && (e["padding" + (!0 === i.lang.rtl ? "Right" : "Left")] = `${a.left.size}px`), e
                  }));
                  return () => (0, n.h)("div", {
                      class: "q-page-container",
                      style: o.value
                  }, (0, r.KR)(t.default))
              }
          })
      },
      3940: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => l
          });
          var n = i(9835),
              a = i(244);
          const r = {
              size: {
                  type: [Number, String],
                  default: "1em"
              },
              color: String
          };

          function s(e) {
              return {
                  cSize: (0, n.Fl)((() => e.size in a.Ok ? `${a.Ok[e.size]}px` : e.size)),
                  classes: (0, n.Fl)((() => "q-spinner" + (e.color ? ` text-${e.color}` : "")))
              }
          }
          var o = i(5987);
          const l = (0, o.L)({
              name: "QSpinner",
              props: {
                  ...r,
                  thickness: {
                      type: Number,
                      default: 5
                  }
              },
              setup(e) {
                  const {
                      cSize: t,
                      classes: i
                  } = s(e);
                  return () => (0, n.h)("svg", {
                      class: i.value + " q-spinner-mat",
                      width: t.value,
                      height: t.value,
                      viewBox: "25 25 50 50"
                  }, [(0, n.h)("circle", {
                      class: "path",
                      cx: "50",
                      cy: "50",
                      r: "20",
                      fill: "none",
                      stroke: "currentColor",
                      "stroke-width": e.thickness,
                      "stroke-miterlimit": "10"
                  })])
              }
          })
      },
      244: (e, t, i) => {
          "use strict";
          i.d(t, {
              LU: () => r,
              Ok: () => a,
              ZP: () => s
          });
          var n = i(9835);
          const a = {
                  xs: 18,
                  sm: 24,
                  md: 32,
                  lg: 38,
                  xl: 46
              },
              r = {
                  size: String
              };

          function s(e, t = a) {
              return (0, n.Fl)((() => void 0 !== e.size ? {
                  fontSize: e.size in t ? `${t[e.size]}px` : e.size
              } : null))
          }
      },
      2289: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => o
          });
          var n = i(4124),
              a = i(3251);
          const r = {
                  name: "material-icons",
                  type: {
                      positive: "check_circle",
                      negative: "warning",
                      info: "info",
                      warning: "priority_high"
                  },
                  arrow: {
                      up: "arrow_upward",
                      right: "arrow_forward",
                      down: "arrow_downward",
                      left: "arrow_back",
                      dropdown: "arrow_drop_down"
                  },
                  chevron: {
                      left: "chevron_left",
                      right: "chevron_right"
                  },
                  colorPicker: {
                      spectrum: "gradient",
                      tune: "tune",
                      palette: "style"
                  },
                  pullToRefresh: {
                      icon: "refresh"
                  },
                  carousel: {
                      left: "chevron_left",
                      right: "chevron_right",
                      up: "keyboard_arrow_up",
                      down: "keyboard_arrow_down",
                      navigationIcon: "lens"
                  },
                  chip: {
                      remove: "cancel",
                      selected: "check"
                  },
                  datetime: {
                      arrowLeft: "chevron_left",
                      arrowRight: "chevron_right",
                      now: "access_time",
                      today: "today"
                  },
                  editor: {
                      bold: "format_bold",
                      italic: "format_italic",
                      strikethrough: "strikethrough_s",
                      underline: "format_underlined",
                      unorderedList: "format_list_bulleted",
                      orderedList: "format_list_numbered",
                      subscript: "vertical_align_bottom",
                      superscript: "vertical_align_top",
                      hyperlink: "link",
                      toggleFullscreen: "fullscreen",
                      quote: "format_quote",
                      left: "format_align_left",
                      center: "format_align_center",
                      right: "format_align_right",
                      justify: "format_align_justify",
                      print: "print",
                      outdent: "format_indent_decrease",
                      indent: "format_indent_increase",
                      removeFormat: "format_clear",
                      formatting: "text_format",
                      fontSize: "format_size",
                      align: "format_align_left",
                      hr: "remove",
                      undo: "undo",
                      redo: "redo",
                      heading: "format_size",
                      code: "code",
                      size: "format_size",
                      font: "font_download",
                      viewSource: "code"
                  },
                  expansionItem: {
                      icon: "keyboard_arrow_down",
                      denseIcon: "arrow_drop_down"
                  },
                  fab: {
                      icon: "add",
                      activeIcon: "close"
                  },
                  field: {
                      clear: "cancel",
                      error: "error"
                  },
                  pagination: {
                      first: "first_page",
                      prev: "keyboard_arrow_left",
                      next: "keyboard_arrow_right",
                      last: "last_page"
                  },
                  rating: {
                      icon: "grade"
                  },
                  stepper: {
                      done: "check",
                      active: "edit",
                      error: "warning"
                  },
                  tabs: {
                      left: "chevron_left",
                      right: "chevron_right",
                      up: "keyboard_arrow_up",
                      down: "keyboard_arrow_down"
                  },
                  table: {
                      arrowUp: "arrow_upward",
                      warning: "warning",
                      firstPage: "first_page",
                      prevPage: "chevron_left",
                      nextPage: "chevron_right",
                      lastPage: "last_page"
                  },
                  tree: {
                      icon: "play_arrow"
                  },
                  uploader: {
                      done: "done",
                      clear: "clear",
                      add: "add_box",
                      upload: "cloud_upload",
                      removeQueue: "clear_all",
                      removeUploaded: "done_all"
                  }
              },
              s = (0, n.Z)({
                  iconMapFn: null,
                  __icons: {}
              }, {
                  set(e, t) {
                      const i = {
                          ...e,
                          rtl: !0 === e.rtl
                      };
                      i.set = s.set, Object.assign(s.__icons, i)
                  },
                  install({
                      $q: e,
                      iconSet: t,
                      ssrContext: i
                  }) {
                      void 0 !== e.config.iconMapFn && (this.iconMapFn = e.config.iconMapFn), e.iconSet = this.__icons, (0, a.g)(e, "iconMapFn", (() => this.iconMapFn), (e => {
                          this.iconMapFn = e
                      })), !0 === this.__installed ? void 0 !== t && this.set(t) : this.set(t || r)
                  }
              }),
              o = s
      },
      6026: (e, t, i) => {
          "use strict";
          i.d(t, {
              $: () => I,
              Z: () => O
          });
          var n = i(1957),
              a = i(7506),
              r = (i(702), i(4124)),
              s = i(1384);

          function o(e, t = 250, i) {
              let n;

              function a() {
                  const a = arguments,
                      r = () => {
                          n = void 0, !0 !== i && e.apply(this, a)
                      };
                  clearTimeout(n), !0 === i && void 0 === n && e.apply(this, a), n = setTimeout(r, t)
              }
              return a.cancel = () => {
                  clearTimeout(n)
              }, a
          }
          const l = ["sm", "md", "lg", "xl"],
              {
                  passive: c
              } = s.rU,
              h = (0, r.Z)({
                  width: 0,
                  height: 0,
                  name: "xs",
                  sizes: {
                      sm: 600,
                      md: 1024,
                      lg: 1440,
                      xl: 1920
                  },
                  lt: {
                      sm: !0,
                      md: !0,
                      lg: !0,
                      xl: !0
                  },
                  gt: {
                      xs: !1,
                      sm: !1,
                      md: !1,
                      lg: !1
                  },
                  xs: !0,
                  sm: !1,
                  md: !1,
                  lg: !1,
                  xl: !1
              }, {
                  setSizes: s.ZT,
                  setDebounce: s.ZT,
                  install({
                      $q: e,
                      onSSRHydrated: t
                  }) {
                      if (e.screen = this, !0 === this.__installed) return void(void 0 !== e.config.screen && (!1 === e.config.screen.bodyClasses ? document.body.classList.remove(`screen--${this.name}`) : this.__update(!0)));
                      const {
                          visualViewport: i
                      } = window, n = i || window, r = document.scrollingElement || document.documentElement, s = void 0 === i || !0 === a.Lp.is.mobile ? () => [Math.max(window.innerWidth, r.clientWidth), Math.max(window.innerHeight, r.clientHeight)] : () => [i.width * i.scale + window.innerWidth - r.clientWidth, i.height * i.scale + window.innerHeight - r.clientHeight], h = void 0 !== e.config.screen && !0 === e.config.screen.bodyClasses;
                      this.__update = e => {
                          const [t, i] = s();
                          if (i !== this.height && (this.height = i), t !== this.width) this.width = t;
                          else if (!0 !== e) return;
                          let n = this.sizes;
                          this.gt.xs = t >= n.sm, this.gt.sm = t >= n.md, this.gt.md = t >= n.lg, this.gt.lg = t >= n.xl, this.lt.sm = t < n.sm, this.lt.md = t < n.md, this.lt.lg = t < n.lg, this.lt.xl = t < n.xl, this.xs = this.lt.sm, this.sm = !0 === this.gt.xs && !0 === this.lt.md, this.md = !0 === this.gt.sm && !0 === this.lt.lg, this.lg = !0 === this.gt.md && !0 === this.lt.xl, this.xl = this.gt.lg, n = (!0 === this.xs ? "xs" : !0 === this.sm && "sm") || !0 === this.md && "md" || !0 === this.lg && "lg" || "xl", n !== this.name && (!0 === h && (document.body.classList.remove(`screen--${this.name}`), document.body.classList.add(`screen--${n}`)), this.name = n)
                      };
                      let u, d = {},
                          f = 16;
                      this.setSizes = e => {
                          l.forEach((t => {
                              void 0 !== e[t] && (d[t] = e[t])
                          }))
                      }, this.setDebounce = e => {
                          f = e
                      };
                      const p = () => {
                          const e = getComputedStyle(document.body);
                          e.getPropertyValue("--q-size-sm") && l.forEach((t => {
                              this.sizes[t] = parseInt(e.getPropertyValue(`--q-size-${t}`), 10)
                          })), this.setSizes = e => {
                              l.forEach((t => {
                                  e[t] && (this.sizes[t] = e[t])
                              })), this.__update(!0)
                          }, this.setDebounce = e => {
                              void 0 !== u && n.removeEventListener("resize", u, c), u = e > 0 ? o(this.__update, e) : this.__update, n.addEventListener("resize", u, c)
                          }, this.setDebounce(f), Object.keys(d).length > 0 ? (this.setSizes(d), d = void 0) : this.__update(), !0 === h && "xs" === this.name && document.body.classList.add("screen--xs")
                      };
                      !0 === a.uX.value ? t.push(p) : p()
                  }
              });
          i(8964);
          const u = (0, r.Z)({
                  isActive: !1,
                  mode: !1
              }, {
                  __media: void 0,
                  set(e) {
                      u.mode = e, "auto" === e ? (void 0 === u.__media && (u.__media = window.matchMedia("(prefers-color-scheme: dark)"), u.__updateMedia = () => {
                          u.set("auto")
                      }, u.__media.addListener(u.__updateMedia)), e = u.__media.matches) : void 0 !== u.__media && (u.__media.removeListener(u.__updateMedia), u.__media = void 0), u.isActive = !0 === e, document.body.classList.remove("body--" + (!0 === e ? "light" : "dark")), document.body.classList.add("body--" + (!0 === e ? "dark" : "light"))
                  },
                  toggle() {
                      u.set(!1 === u.isActive)
                  },
                  install({
                      $q: e,
                      onSSRHydrated: t,
                      ssrContext: i
                  }) {
                      const {
                          dark: n
                      } = e.config;
                      if (e.dark = this, !0 === this.__installed && void 0 === n) return;
                      this.isActive = !0 === n;
                      const r = void 0 !== n && n;
                      if (!0 === a.uX.value) {
                          const e = e => {
                                  this.__fromSSR = e
                              },
                              i = this.set;
                          this.set = e, e(r), t.push((() => {
                              this.set = i, this.set(this.__fromSSR)
                          }))
                      } else this.set(r)
                  }
              }),
              d = u,
              f = () => !0;

          function p(e) {
              return "string" === typeof e && "" !== e && "/" !== e && "#/" !== e
          }

          function g(e) {
              return !0 === e.startsWith("#") && (e = e.substr(1)), !1 === e.startsWith("/") && (e = "/" + e), !0 === e.endsWith("/") && (e = e.substr(0, e.length - 1)), "#" + e
          }

          function x(e) {
              if (!1 === e.backButtonExit) return () => !1;
              if ("*" === e.backButtonExit) return f;
              const t = ["#/"];
              return !0 === Array.isArray(e.backButtonExit) && t.push(...e.backButtonExit.filter(p).map(g)), () => t.includes(window.location.hash)
          }
          const v = {
              __history: [],
              add: s.ZT,
              remove: s.ZT,
              install({
                  $q: e
              }) {
                  if (!0 === this.__installed) return;
                  const {
                      cordova: t,
                      capacitor: i
                  } = a.Lp.is;
                  if (!0 !== t && !0 !== i) return;
                  const n = e.config[!0 === t ? "cordova" : "capacitor"];
                  if (void 0 !== n && !1 === n.backButton) return;
                  if (!0 === i && (void 0 === window.Capacitor || void 0 === window.Capacitor.Plugins.App)) return;
                  this.add = e => {
                      void 0 === e.condition && (e.condition = f), this.__history.push(e)
                  }, this.remove = e => {
                      const t = this.__history.indexOf(e);
                      t >= 0 && this.__history.splice(t, 1)
                  };
                  const r = x(Object.assign({
                          backButtonExit: !0
                      }, n)),
                      s = () => {
                          if (this.__history.length) {
                              const e = this.__history[this.__history.length - 1];
                              !0 === e.condition() && (this.__history.pop(), e.handler())
                          } else !0 === r() ? navigator.app.exitApp() : window.history.back()
                      };
                  !0 === t ? document.addEventListener("deviceready", (() => {
                      document.addEventListener("backbutton", s, !1)
                  })) : window.Capacitor.Plugins.App.addListener("backButton", s)
              }
          };
          var m = i(3558);
          i(6822);

          function b(e, t, i = document.body) {
              if ("string" !== typeof e) throw new TypeError("Expected a string as propName");
              if ("string" !== typeof t) throw new TypeError("Expected a string as value");
              if (!(i instanceof Element)) throw new TypeError("Expected a DOM element");
              i.style.setProperty(`--q-${e}`, t)
          }
          var y = i(1705);

          function w(e) {
              return !0 === e.ios ? "ios" : !0 === e.android ? "android" : void 0
          }

          function k({
              is: e,
              has: t,
              within: i
          }, n) {
              const a = [!0 === e.desktop ? "desktop" : "mobile", (!1 === t.touch ? "no-" : "") + "touch"];
              if (!0 === e.mobile) {
                  const t = w(e);
                  void 0 !== t && a.push("platform-" + t)
              }
              if (!0 === e.nativeMobile) {
                  const t = e.nativeMobileWrapper;
                  a.push(t), a.push("native-mobile"), !0 !== e.ios || void 0 !== n[t] && !1 === n[t].iosStatusBarPadding || a.push("q-ios-padding")
              } else !0 === e.electron ? a.push("electron") : !0 === e.bex && a.push("bex");
              return !0 === i.iframe && a.push("within-iframe"), a
          }

          function S() {
              const e = document.body.className;
              let t = e;
              void 0 !== a.aG && (t = t.replace("desktop", "platform-ios mobile")), !0 === a.Lp.has.touch && (t = t.replace("no-touch", "touch")), !0 === a.Lp.within.iframe && (t += " within-iframe"), e !== t && (document.body.className = t)
          }

          function A(e) {
              for (const t in e) b(t, e[t])
          }
          const C = {
              install(e) {
                  if (!0 !== this.__installed) {
                      if (!0 === a.uX.value) S();
                      else {
                          const {
                              $q: t
                          } = e;
                          void 0 !== t.config.brand && A(t.config.brand);
                          const i = k(a.Lp, t.config);
                          document.body.classList.add.apply(document.body.classList, i)
                      }!0 === a.Lp.is.ios && document.body.addEventListener("touchstart", s.ZT), window.addEventListener("keydown", y.ZK, !0)
                  }
              }
          };
          var T = i(2289),
              E = i(5439),
              L = i(7495),
              P = i(6254);
          const M = [a.ZP, C, d, h, v, m.Z, T.Z];

          function I(e, t) {
              const i = (0, n.ri)(e);
              i.config.globalProperties = t.config.globalProperties;
              const {
                  reload: a,
                  ...r
              } = t._context;
              return Object.assign(i._context, r), i
          }

          function R(e, t) {
              t.forEach((t => {
                  t.install(e), t.__installed = !0
              }))
          }

          function _(e, t, i) {
              e.config.globalProperties.$q = i.$q, e.provide(E.Ng, i.$q), R(i, M), void 0 !== t.components && Object.values(t.components).forEach((t => {
                  !0 === (0, P.Kn)(t) && void 0 !== t.name && e.component(t.name, t)
              })), void 0 !== t.directives && Object.values(t.directives).forEach((t => {
                  !0 === (0, P.Kn)(t) && void 0 !== t.name && e.directive(t.name, t)
              })), void 0 !== t.plugins && R(i, Object.values(t.plugins).filter((e => "function" === typeof e.install && !1 === M.includes(e)))), !0 === a.uX.value && (i.$q.onSSRHydrated = () => {
                  i.onSSRHydrated.forEach((e => {
                      e()
                  })), i.$q.onSSRHydrated = () => {}
              })
          }
          const O = function(e, t = {}) {
              const i = {
                  version: "2.6.1"
              };
              !1 === L.Uf ? (void 0 !== t.config && Object.assign(L.w6, t.config), i.config = {
                  ...L.w6
              }, (0, L.tP)()) : i.config = t.config || {}, _(e, t, {
                  parentApp: e,
                  $q: i,
                  lang: t.lang,
                  iconSet: t.iconSet,
                  onSSRHydrated: []
              })
          }
      },
      3558: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => o
          });
          i(8964);
          var n = i(4124);
          const a = {
              isoName: "en-US",
              nativeName: "English (US)",
              label: {
                  clear: "Clear",
                  ok: "OK",
                  cancel: "Cancel",
                  close: "Close",
                  set: "Set",
                  select: "Select",
                  reset: "Reset",
                  remove: "Remove",
                  update: "Update",
                  create: "Create",
                  search: "Search",
                  filter: "Filter",
                  refresh: "Refresh"
              },
              date: {
                  days: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                  daysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                  months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                  monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                  firstDayOfWeek: 0,
                  format24h: !1,
                  pluralDay: "days"
              },
              table: {
                  noData: "No data available",
                  noResults: "No matching records found",
                  loading: "Loading...",
                  selectedRecords: e => 1 === e ? "1 record selected." : (0 === e ? "No" : e) + " records selected.",
                  recordsPerPage: "Records per page:",
                  allRows: "All",
                  pagination: (e, t, i) => e + "-" + t + " of " + i,
                  columns: "Columns"
              },
              editor: {
                  url: "URL",
                  bold: "Bold",
                  italic: "Italic",
                  strikethrough: "Strikethrough",
                  underline: "Underline",
                  unorderedList: "Unordered List",
                  orderedList: "Ordered List",
                  subscript: "Subscript",
                  superscript: "Superscript",
                  hyperlink: "Hyperlink",
                  toggleFullscreen: "Toggle Fullscreen",
                  quote: "Quote",
                  left: "Left align",
                  center: "Center align",
                  right: "Right align",
                  justify: "Justify align",
                  print: "Print",
                  outdent: "Decrease indentation",
                  indent: "Increase indentation",
                  removeFormat: "Remove formatting",
                  formatting: "Formatting",
                  fontSize: "Font Size",
                  align: "Align",
                  hr: "Insert Horizontal Rule",
                  undo: "Undo",
                  redo: "Redo",
                  heading1: "Heading 1",
                  heading2: "Heading 2",
                  heading3: "Heading 3",
                  heading4: "Heading 4",
                  heading5: "Heading 5",
                  heading6: "Heading 6",
                  paragraph: "Paragraph",
                  code: "Code",
                  size1: "Very small",
                  size2: "A bit small",
                  size3: "Normal",
                  size4: "Medium-large",
                  size5: "Big",
                  size6: "Very big",
                  size7: "Maximum",
                  defaultFont: "Default Font",
                  viewSource: "View Source"
              },
              tree: {
                  noNodes: "No nodes available",
                  noResults: "No matching nodes found"
              }
          };

          function r() {
              const e = !0 === Array.isArray(navigator.languages) && navigator.languages.length > 0 ? navigator.languages[0] : navigator.language;
              if ("string" === typeof e) return e.split(/[-_]/).map(((e, t) => 0 === t ? e.toLowerCase() : t > 1 || e.length < 4 ? e.toUpperCase() : e[0].toUpperCase() + e.slice(1).toLowerCase())).join("-")
          }
          const s = (0, n.Z)({
                  __langPack: {}
              }, {
                  getLocale: r,
                  set(e = a, t) {
                      const i = {
                          ...e,
                          rtl: !0 === e.rtl,
                          getLocale: r
                      }; {
                          const e = document.documentElement;
                          e.setAttribute("dir", !0 === i.rtl ? "rtl" : "ltr"), e.setAttribute("lang", i.isoName), i.set = s.set, Object.assign(s.__langPack, i), s.props = i, s.isoName = i.isoName, s.nativeName = i.nativeName
                      }
                  },
                  install({
                      $q: e,
                      lang: t,
                      ssrContext: i
                  }) {
                      e.lang = s.__langPack, !0 === this.__installed ? void 0 !== t && this.set(t) : this.set(t || a)
                  }
              }),
              o = s
      },
      432: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => O
          });
          var n = i(499),
              a = i(9835),
              r = i(1957),
              s = i(2857),
              o = i(244),
              l = i(5987),
              c = i(2026);
          const h = (0, l.L)({
              name: "QAvatar",
              props: {
                  ...o.LU,
                  fontSize: String,
                  color: String,
                  textColor: String,
                  icon: String,
                  square: Boolean,
                  rounded: Boolean
              },
              setup(e, {
                  slots: t
              }) {
                  const i = (0, o.ZP)(e),
                      n = (0, a.Fl)((() => "q-avatar" + (e.color ? ` bg-${e.color}` : "") + (e.textColor ? ` text-${e.textColor} q-chip--colored` : "") + (!0 === e.square ? " q-avatar--square" : !0 === e.rounded ? " rounded-borders" : ""))),
                      r = (0, a.Fl)((() => e.fontSize ? {
                          fontSize: e.fontSize
                      } : null));
                  return () => {
                      const o = void 0 !== e.icon ? [(0, a.h)(s.Z, {
                          name: e.icon
                      })] : void 0;
                      return (0, a.h)("div", {
                          class: n.value,
                          style: i.value
                      }, [(0, a.h)("div", {
                          class: "q-avatar__content row flex-center overflow-hidden",
                          style: r.value
                      }, (0, c.pf)(t.default, o))])
                  }
              }
          });
          var u = i(4483),
              d = i(3940),
              f = (i(1384), i(7495));
          const p = [];
          let g = document.body;

          function x(e) {
              const t = document.createElement("div");
              if (void 0 !== e && (t.id = e), void 0 !== f.w6.globalNodes) {
                  const e = f.w6.globalNodes["class"];
                  void 0 !== e && (t.className = e)
              }
              return g.appendChild(t), p.push(t), t
          }
          var v = i(6026),
              m = i(6254);
          let b = 0;
          const y = {},
              w = {},
              k = {},
              S = {},
              A = /^\s*$/,
              C = [],
              T = ["top-left", "top-right", "bottom-left", "bottom-right", "top", "bottom", "left", "right", "center"],
              E = ["top-left", "top-right", "bottom-left", "bottom-right"],
              L = {
                  positive: {
                      icon: e => e.iconSet.type.positive,
                      color: "positive"
                  },
                  negative: {
                      icon: e => e.iconSet.type.negative,
                      color: "negative"
                  },
                  warning: {
                      icon: e => e.iconSet.type.warning,
                      color: "warning",
                      textColor: "dark"
                  },
                  info: {
                      icon: e => e.iconSet.type.info,
                      color: "info"
                  },
                  ongoing: {
                      group: !1,
                      timeout: 0,
                      spinner: !0,
                      color: "grey-8"
                  }
              };

          function P(e, t, i) {
              if (!e) return R("parameter required");
              let a;
              const r = {
                  textColor: "white"
              };
              if (!0 !== e.ignoreDefaults && Object.assign(r, y), !1 === (0, m.Kn)(e) && (r.type && Object.assign(r, L[r.type]), e = {
                      message: e
                  }), Object.assign(r, L[e.type || r.type], e), "function" === typeof r.icon && (r.icon = r.icon(t)), r.spinner ? (!0 === r.spinner && (r.spinner = d.Z), r.spinner = (0, n.Xl)(r.spinner)) : r.spinner = !1, r.meta = {
                      hasMedia: Boolean(!1 !== r.spinner || r.icon || r.avatar),
                      hasText: I(r.message) || I(r.caption)
                  }, r.position) {
                  if (!1 === T.includes(r.position)) return R("wrong position", e)
              } else r.position = "bottom";
              if (void 0 === r.timeout) r.timeout = 5e3;
              else {
                  const t = parseInt(r.timeout, 10);
                  if (isNaN(t) || t < 0) return R("wrong timeout", e);
                  r.timeout = t
              }
              0 === r.timeout ? r.progress = !1 : !0 === r.progress && (r.meta.progressClass = "q-notification__progress" + (r.progressClass ? ` ${r.progressClass}` : ""), r.meta.progressStyle = {
                  animationDuration: `${r.timeout+1e3}ms`
              });
              const s = (!0 === Array.isArray(e.actions) ? e.actions : []).concat(!0 !== e.ignoreDefaults && !0 === Array.isArray(y.actions) ? y.actions : []).concat(void 0 !== L[e.type] && !0 === Array.isArray(L[e.type].actions) ? L[e.type].actions : []),
                  {
                      closeBtn: o
                  } = r;
              if (o && s.push({
                      label: "string" === typeof o ? o : t.lang.label.close
                  }), r.actions = s.map((({
                      handler: e,
                      noDismiss: t,
                      ...i
                  }) => ({
                      flat: !0,
                      ...i,
                      onClick: "function" === typeof e ? () => {
                          e(), !0 !== t && l()
                      } : () => {
                          l()
                      }
                  }))), void 0 === r.multiLine && (r.multiLine = r.actions.length > 1), Object.assign(r.meta, {
                      class: "q-notification row items-stretch q-notification--" + (!0 === r.multiLine ? "multi-line" : "standard") + (void 0 !== r.color ? ` bg-${r.color}` : "") + (void 0 !== r.textColor ? ` text-${r.textColor}` : "") + (void 0 !== r.classes ? ` ${r.classes}` : ""),
                      wrapperClass: "q-notification__wrapper col relative-position border-radius-inherit " + (!0 === r.multiLine ? "column no-wrap justify-center" : "row items-center"),
                      contentClass: "q-notification__content row items-center" + (!0 === r.multiLine ? "" : " col"),
                      leftClass: !0 === r.meta.hasText ? "additional" : "single",
                      attrs: {
                          role: "alert",
                          ...r.attrs
                      }
                  }), !1 === r.group ? (r.group = void 0, r.meta.group = void 0) : (void 0 !== r.group && !0 !== r.group || (r.group = [r.message, r.caption, r.multiline].concat(r.actions.map((e => `${e.label}*${e.icon}`))).join("|")), r.meta.group = r.group + "|" + r.position), 0 === r.actions.length ? r.actions = void 0 : r.meta.actionsClass = "q-notification__actions row items-center " + (!0 === r.multiLine ? "justify-end" : "col-auto") + (!0 === r.meta.hasMedia ? " q-notification__actions--with-media" : ""), void 0 !== i) {
                  clearTimeout(i.notif.meta.timer), r.meta.uid = i.notif.meta.uid;
                  const e = k[r.position].value.indexOf(i.notif);
                  k[r.position].value[e] = r
              } else {
                  const t = w[r.meta.group];
                  if (void 0 === t) {
                      if (r.meta.uid = b++, r.meta.badge = 1, -1 !== ["left", "right", "center"].indexOf(r.position)) k[r.position].value.splice(Math.floor(k[r.position].value.length / 2), 0, r);
                      else {
                          const e = r.position.indexOf("top") > -1 ? "unshift" : "push";
                          k[r.position].value[e](r)
                      }
                      void 0 !== r.group && (w[r.meta.group] = r)
                  } else {
                      if (clearTimeout(t.meta.timer), void 0 !== r.badgePosition) {
                          if (!1 === E.includes(r.badgePosition)) return R("wrong badgePosition", e)
                      } else r.badgePosition = "top-" + (r.position.indexOf("left") > -1 ? "right" : "left");
                      r.meta.uid = t.meta.uid, r.meta.badge = t.meta.badge + 1, r.meta.badgeClass = `q-notification__badge q-notification__badge--${r.badgePosition}` + (void 0 !== r.badgeColor ? ` bg-${r.badgeColor}` : "") + (void 0 !== r.badgeTextColor ? ` text-${r.badgeTextColor}` : "") + (r.badgeClass ? ` ${r.badgeClass}` : "");
                      const i = k[r.position].value.indexOf(t);
                      k[r.position].value[i] = w[r.meta.group] = r
                  }
              }
              const l = () => {
                  M(r), a = void 0
              };
              return r.timeout > 0 && (r.meta.timer = setTimeout((() => {
                  l()
              }), r.timeout + 1e3)), void 0 !== r.group ? t => {
                  void 0 !== t ? R("trying to update a grouped one which is forbidden", e) : l()
              } : (a = {
                  dismiss: l,
                  config: e,
                  notif: r
              }, void 0 === i ? e => {
                  if (void 0 !== a)
                      if (void 0 === e) a.dismiss();
                      else {
                          const i = Object.assign({}, a.config, e, {
                              group: !1,
                              position: r.position
                          });
                          P(i, t, a)
                      }
              } : void Object.assign(i, a))
          }

          function M(e) {
              clearTimeout(e.meta.timer);
              const t = k[e.position].value.indexOf(e);
              if (-1 !== t) {
                  void 0 !== e.group && delete w[e.meta.group];
                  const i = C["" + e.meta.uid];
                  if (i) {
                      const {
                          width: e,
                          height: t
                      } = getComputedStyle(i);
                      i.style.left = `${i.offsetLeft}px`, i.style.width = e, i.style.height = t
                  }
                  k[e.position].value.splice(t, 1), "function" === typeof e.onDismiss && e.onDismiss()
              }
          }

          function I(e) {
              return void 0 !== e && null !== e && !0 !== A.test(e)
          }

          function R(e, t) {
              return console.error(`Notify: ${e}`, t), !1
          }

          function _() {
              return (0, l.L)({
                  name: "QNotifications",
                  devtools: {
                      hide: !0
                  },
                  setup() {
                      return () => (0, a.h)("div", {
                          class: "q-notifications"
                      }, T.map((e => (0, a.h)(r.W3, {
                          key: e,
                          class: S[e],
                          tag: "div",
                          name: `q-notification--${e}`
                      }, (() => k[e].value.map((e => {
                          const t = e.meta,
                              i = [];
                          if (!0 === t.hasMedia && (!1 !== e.spinner ? i.push((0, a.h)(e.spinner, {
                                  class: "q-notification__spinner q-notification__spinner--" + t.leftClass,
                                  color: e.spinnerColor,
                                  size: e.spinnerSize
                              })) : e.icon ? i.push((0, a.h)(s.Z, {
                                  class: "q-notification__icon q-notification__icon--" + t.leftClass,
                                  name: e.icon,
                                  color: e.iconColor,
                                  size: e.iconSize,
                                  role: "img"
                              })) : e.avatar && i.push((0, a.h)(h, {
                                  class: "q-notification__avatar q-notification__avatar--" + t.leftClass
                              }, (() => (0, a.h)("img", {
                                  src: e.avatar,
                                  "aria-hidden": "true"
                              }))))), !0 === t.hasText) {
                              let t;
                              const n = {
                                  class: "q-notification__message col"
                              };
                              if (!0 === e.html) n.innerHTML = e.caption ? `<div>${e.message}</div><div class="q-notification__caption">${e.caption}</div>` : e.message;
                              else {
                                  const i = [e.message];
                                  t = e.caption ? [(0, a.h)("div", i), (0, a.h)("div", {
                                      class: "q-notification__caption"
                                  }, [e.caption])] : i
                              }
                              i.push((0, a.h)("div", n, t))
                          }
                          const n = [(0, a.h)("div", {
                              class: t.contentClass
                          }, i)];
                          return !0 === e.progress && n.push((0, a.h)("div", {
                              key: `${t.uid}|p|${t.badge}`,
                              class: t.progressClass,
                              style: t.progressStyle
                          })), void 0 !== e.actions && n.push((0, a.h)("div", {
                              class: t.actionsClass
                          }, e.actions.map((e => (0, a.h)(u.Z, e))))), t.badge > 1 && n.push((0, a.h)("div", {
                              key: `${t.uid}|${t.badge}`,
                              class: e.meta.badgeClass,
                              style: e.badgeStyle
                          }, [t.badge])), (0, a.h)("div", {
                              ref: e => {
                                  C["" + t.uid] = e
                              },
                              key: t.uid,
                              class: t.class,
                              ...t.attrs
                          }, [(0, a.h)("div", {
                              class: t.wrapperClass
                          }, n)])
                      })))))))
                  }
              })
          }
          const O = {
              setDefaults(e) {
                  !0 === (0, m.Kn)(e) && Object.assign(y, e)
              },
              registerType(e, t) {
                  !0 === (0, m.Kn)(t) && (L[e] = t)
              },
              install({
                  $q: e,
                  parentApp: t
              }) {
                  if (e.notify = this.create = t => P(t, e), e.notify.setDefaults = this.setDefaults, e.notify.registerType = this.registerType, void 0 !== e.config.notify && this.setDefaults(e.config.notify), !0 !== this.__installed) {
                      T.forEach((e => {
                          k[e] = (0, n.iH)([]);
                          const t = !0 === ["left", "center", "right"].includes(e) ? "center" : e.indexOf("top") > -1 ? "top" : "bottom",
                              i = e.indexOf("left") > -1 ? "start" : e.indexOf("right") > -1 ? "end" : "center",
                              a = ["left", "right"].includes(e) ? `items-${"left"===e?"start":"end"} justify-center` : "center" === e ? "flex-center" : `items-${i}`;
                          S[e] = `q-notifications__list q-notifications__list--${t} fixed column no-wrap ${a}`
                      }));
                      const e = x("q-notify");
                      (0, v.$)(_(), t).mount(e)
                  }
              }
          }
      },
      7506: (e, t, i) => {
          "use strict";
          i.d(t, {
              Lp: () => g,
              ZP: () => v,
              aG: () => s,
              uX: () => r
          });
          var n = i(499),
              a = i(3251);
          const r = (0, n.iH)(!1);
          let s, o = !1;

          function l(e, t) {
              const i = /(edg|edge|edga|edgios)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(vivaldi)[\/]([\w.]+)/.exec(e) || /(chrome|crios)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[\/]([\w.]+).*(safari)[\/]([\w.]+)/.exec(e) || /(webkit)[\/]([\w.]+).*(version)[\/]([\w.]+).*(safari)[\/]([\w.]+)/.exec(e) || /(firefox|fxios)[\/]([\w.]+)/.exec(e) || /(webkit)[\/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[\/]([\w.]+)/.exec(e) || [];
              return {
                  browser: i[5] || i[3] || i[1] || "",
                  version: i[2] || i[4] || "0",
                  versionNumber: i[4] || i[2] || "0",
                  platform: t[0] || ""
              }
          }

          function c(e) {
              return /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(silk)/.exec(e) || /(android)/.exec(e) || /(win)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || /(playbook)/.exec(e) || /(bb)/.exec(e) || /(blackberry)/.exec(e) || []
          }
          const h = "ontouchstart" in window || window.navigator.maxTouchPoints > 0;

          function u(e) {
              s = {
                  is: {
                      ...e
                  }
              }, delete e.mac, delete e.desktop;
              const t = Math.min(window.innerHeight, window.innerWidth) > 414 ? "ipad" : "iphone";
              Object.assign(e, {
                  mobile: !0,
                  ios: !0,
                  platform: t,
                  [t]: !0
              })
          }

          function d(e) {
              const t = e.toLowerCase(),
                  i = c(t),
                  n = l(t, i),
                  a = {};
              n.browser && (a[n.browser] = !0, a.version = n.version, a.versionNumber = parseInt(n.versionNumber, 10)), n.platform && (a[n.platform] = !0);
              const r = a.android || a.ios || a.bb || a.blackberry || a.ipad || a.iphone || a.ipod || a.kindle || a.playbook || a.silk || a["windows phone"];
              return !0 === r || t.indexOf("mobile") > -1 ? (a.mobile = !0, a.edga || a.edgios ? (a.edge = !0, n.browser = "edge") : a.crios ? (a.chrome = !0, n.browser = "chrome") : a.fxios && (a.firefox = !0, n.browser = "firefox")) : a.desktop = !0, (a.ipod || a.ipad || a.iphone) && (a.ios = !0), a["windows phone"] && (a.winphone = !0, delete a["windows phone"]), (a.chrome || a.opr || a.safari || a.vivaldi || !0 === a.mobile && !0 !== a.ios && !0 !== r) && (a.webkit = !0), a.edg && (n.browser = "edgechromium", a.edgeChromium = !0), (a.safari && a.blackberry || a.bb) && (n.browser = "blackberry", a.blackberry = !0), a.safari && a.playbook && (n.browser = "playbook", a.playbook = !0), a.opr && (n.browser = "opera", a.opera = !0), a.safari && a.android && (n.browser = "android", a.android = !0), a.safari && a.kindle && (n.browser = "kindle", a.kindle = !0), a.safari && a.silk && (n.browser = "silk", a.silk = !0), a.vivaldi && (n.browser = "vivaldi", a.vivaldi = !0), a.name = n.browser, a.platform = n.platform, t.indexOf("electron") > -1 ? a.electron = !0 : document.location.href.indexOf("-extension://") > -1 ? a.bex = !0 : (void 0 !== window.Capacitor ? (a.capacitor = !0, a.nativeMobile = !0, a.nativeMobileWrapper = "capacitor") : void 0 === window._cordovaNative && void 0 === window.cordova || (a.cordova = !0, a.nativeMobile = !0, a.nativeMobileWrapper = "cordova"), !0 === h && !0 === a.mac && (!0 === a.desktop && !0 === a.safari || !0 === a.nativeMobile && !0 !== a.android && !0 !== a.ios && !0 !== a.ipad) && u(a)), a
          }
          const f = navigator.userAgent || navigator.vendor || window.opera,
              p = {
                  has: {
                      touch: !1,
                      webStorage: !1
                  },
                  within: {
                      iframe: !1
                  }
              },
              g = {
                  userAgent: f,
                  is: d(f),
                  has: {
                      touch: h
                  },
                  within: {
                      iframe: window.self !== window.top
                  }
              },
              x = {
                  install(e) {
                      const {
                          $q: t
                      } = e;
                      !0 === r.value ? (e.onSSRHydrated.push((() => {
                          r.value = !1, Object.assign(t.platform, g), s = void 0
                      })), t.platform = (0, n.qj)(this)) : t.platform = this
                  }
              }; {
              let e;
              (0, a.g)(g.has, "webStorage", (() => {
                  if (void 0 !== e) return e;
                  try {
                      if (window.localStorage) return e = !0, !0
                  } catch (t) {}
                  return e = !1, !1
              })), o = !0 === g.is.ios && -1 === window.navigator.vendor.toLowerCase().indexOf("apple"), !0 === r.value ? Object.assign(x, g, s, p) : Object.assign(x, g)
          }
          const v = x
      },
      223: (e, t, i) => {
          "use strict";
          i.d(t, {
              iv: () => a,
              sb: () => r
          });
          var n = i(499);

          function a(e, t) {
              const i = e.style;
              for (const n in t) i[n] = t[n]
          }

          function r(e) {
              if (void 0 === e || null === e) return;
              if ("string" === typeof e) try {
                  return document.querySelector(e) || void 0
              } catch (i) {
                  return
              }
              const t = !0 === (0, n.dq)(e) ? e.value : e;
              return t ? t.$el || t : void 0
          }
      },
      1384: (e, t, i) => {
          "use strict";
          i.d(t, {
              FK: () => r,
              M0: () => c,
              NS: () => l,
              X$: () => o,
              ZT: () => a,
              rU: () => n,
              sT: () => s,
              ul: () => h
          });
          i(702);
          const n = {
              hasPassive: !1,
              passiveCapture: !0,
              notPassiveCapture: !0
          };
          try {
              const e = Object.defineProperty({}, "passive", {
                  get() {
                      Object.assign(n, {
                          hasPassive: !0,
                          passive: {
                              passive: !0
                          },
                          notPassive: {
                              passive: !1
                          },
                          passiveCapture: {
                              passive: !0,
                              capture: !0
                          },
                          notPassiveCapture: {
                              passive: !1,
                              capture: !0
                          }
                      })
                  }
              });
              window.addEventListener("qtest", null, e), window.removeEventListener("qtest", null, e)
          } catch (u) {}

          function a() {}

          function r(e) {
              return e.touches && e.touches[0] ? e = e.touches[0] : e.changedTouches && e.changedTouches[0] ? e = e.changedTouches[0] : e.targetTouches && e.targetTouches[0] && (e = e.targetTouches[0]), {
                  top: e.clientY,
                  left: e.clientX
              }
          }

          function s(e) {
              e.stopPropagation()
          }

          function o(e) {
              !1 !== e.cancelable && e.preventDefault()
          }

          function l(e) {
              !1 !== e.cancelable && e.preventDefault(), e.stopPropagation()
          }

          function c(e, t, i) {
              const a = `__q_${t}_evt`;
              e[a] = void 0 !== e[a] ? e[a].concat(i) : i, i.forEach((t => {
                  t[0].addEventListener(t[1], e[t[2]], n[t[3]])
              }))
          }

          function h(e, t) {
              const i = `__q_${t}_evt`;
              void 0 !== e[i] && (e[i].forEach((t => {
                  t[0].removeEventListener(t[1], e[t[2]], n[t[3]])
              })), e[i] = void 0)
          }
      },
      5987: (e, t, i) => {
          "use strict";
          i.d(t, {
              L: () => r,
              f: () => s
          });
          var n = i(499),
              a = i(9835);
          const r = e => (0, n.Xl)((0, a.aZ)(e)),
              s = e => (0, n.Xl)(e)
      },
      4124: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => r
          });
          var n = i(499),
              a = i(3251);
          const r = (e, t) => {
              const i = (0, n.qj)(e);
              for (const n in e)(0, a.g)(t, n, (() => i[n]), (e => {
                  i[n] = e
              }));
              return t
          }
      },
      7495: (e, t, i) => {
          "use strict";
          i.d(t, {
              Uf: () => a,
              tP: () => r,
              w6: () => n
          });
          const n = {};
          let a = !1;

          function r() {
              a = !0
          }
      },
      3251: (e, t, i) => {
          "use strict";

          function n(e, t, i, n) {
              Object.defineProperty(e, t, {
                  get: i,
                  set: n,
                  enumerable: !0
              })
          }
          i.d(t, {
              g: () => n
          })
      },
      6254: (e, t, i) => {
          "use strict";
          i.d(t, {
              Kn: () => n
          });
          i(702);

          function n(e) {
              return null !== e && "object" === typeof e && !0 !== Array.isArray(e)
          }
      },
      1705: (e, t, i) => {
          "use strict";
          i.d(t, {
              So: () => s,
              ZK: () => a
          });
          let n = !1;

          function a(e) {
              n = !0 === e.isComposing
          }

          function r(e) {
              return !0 === n || e !== Object(e) || !0 === e.isComposing || !0 === e.qKeyEvent
          }

          function s(e, t) {
              return !0 !== r(e) && [].concat(t).includes(e.keyCode)
          }
      },
      2026: (e, t, i) => {
          "use strict";

          function n(e, t) {
              return void 0 !== e && e() || t
          }

          function a(e, t) {
              return void 0 !== e ? t.concat(e()) : t
          }

          function r(e, t) {
              return void 0 === e ? t : void 0 !== t ? t.concat(e()) : e()
          }
          i.d(t, {
              KR: () => n,
              pf: () => r,
              vs: () => a
          })
      },
      5439: (e, t, i) => {
          "use strict";
          i.d(t, {
              Mw: () => r,
              Ng: () => n,
              YE: () => a
          });
          const n = "_q_",
              a = "_q_l_",
              r = "_q_pc_"
      },
      1947: (e, t, i) => {
          "use strict";
          i.d(t, {
              Z: () => s
          });
          var n = i(6026),
              a = i(3558),
              r = i(2289);
          const s = {
              version: "2.6.1",
              install: n.Z,
              lang: a.Z,
              iconSet: r.Z
          }
      },
      8762: (e, t, i) => {
          var n = i(3834),
              a = i(6107),
              r = i(7545),
              s = n.TypeError;
          e.exports = function(e) {
              if (a(e)) return e;
              throw s(r(e) + " is not a function")
          }
      },
      9220: (e, t, i) => {
          var n = i(3834),
              a = i(6107),
              r = n.String,
              s = n.TypeError;
          e.exports = function(e) {
              if ("object" == typeof e || a(e)) return e;
              throw s("Can't set " + r(e) + " as a prototype")
          }
      },
      5323: (e, t, i) => {
          var n = i(4103),
              a = i(5267),
              r = i(1012),
              s = n("unscopables"),
              o = Array.prototype;
          void 0 == o[s] && r.f(o, s, {
              configurable: !0,
              value: a(null)
          }), e.exports = function(e) {
              o[s][e] = !0
          }
      },
      3366: (e, t, i) => {
          "use strict";
          var n = i(6823).charAt;
          e.exports = function(e, t, i) {
              return t + (i ? n(e, t).length : 1)
          }
      },
      616: (e, t, i) => {
          var n = i(3834),
              a = i(1419),
              r = n.String,
              s = n.TypeError;
          e.exports = function(e) {
              if (a(e)) return e;
              throw s(r(e) + " is not an object")
          }
      },
      7714: (e, t, i) => {
          var n = i(7447),
              a = i(2661),
              r = i(8600),
              s = function(e) {
                  return function(t, i, s) {
                      var o, l = n(t),
                          c = r(l),
                          h = a(s, c);
                      if (e && i != i) {
                          while (c > h)
                              if (o = l[h++], o != o) return !0
                      } else
                          for (; c > h; h++)
                              if ((e || h in l) && l[h] === i) return e || h || 0;
                      return !e && -1
                  }
              };
          e.exports = {
              includes: s(!0),
              indexOf: s(!1)
          }
      },
      6749: (e, t, i) => {
          var n = i(1636),
              a = n({}.toString),
              r = n("".slice);
          e.exports = function(e) {
              return r(a(e), 8, -1)
          }
      },
      4239: (e, t, i) => {
          var n = i(3834),
              a = i(4130),
              r = i(6107),
              s = i(6749),
              o = i(4103),
              l = o("toStringTag"),
              c = n.Object,
              h = "Arguments" == s(function() {
                  return arguments
              }()),
              u = function(e, t) {
                  try {
                      return e[t]
                  } catch (i) {}
              };
          e.exports = a ? s : function(e) {
              var t, i, n;
              return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(i = u(t = c(e), l)) ? i : h ? s(t) : "Object" == (n = s(t)) && r(t.callee) ? "Arguments" : n
          }
      },
      1328: (e, t, i) => {
          var n = i(1636),
              a = n("".replace),
              r = function(e) {
                  return String(Error(e).stack)
              }("zxcasd"),
              s = /\n\s*at [^:]*:[^\n]*/,
              o = s.test(r);
          e.exports = function(e, t) {
              if (o && "string" == typeof e)
                  while (t--) e = a(e, s, "");
              return e
          }
      },
      7366: (e, t, i) => {
          var n = i(2924),
              a = i(1240),
              r = i(863),
              s = i(1012);
          e.exports = function(e, t, i) {
              for (var o = a(t), l = s.f, c = r.f, h = 0; h < o.length; h++) {
                  var u = o[h];
                  n(e, u) || i && n(i, u) || l(e, u, c(t, u))
              }
          }
      },
      911: (e, t, i) => {
          var n = i(8814);
          e.exports = !n((function() {
              function e() {}
              return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype
          }))
      },
      1551: (e, t, i) => {
          "use strict";
          var n = i(619).IteratorPrototype,
              a = i(5267),
              r = i(3386),
              s = i(2365),
              o = i(1366),
              l = function() {
                  return this
              };
          e.exports = function(e, t, i, c) {
              var h = t + " Iterator";
              return e.prototype = a(n, {
                  next: r(+!c, i)
              }), s(e, h, !1, !0), o[h] = l, e
          }
      },
      4722: (e, t, i) => {
          var n = i(4133),
              a = i(1012),
              r = i(3386);
          e.exports = n ? function(e, t, i) {
              return a.f(e, t, r(1, i))
          } : function(e, t, i) {
              return e[t] = i, e
          }
      },
      3386: e => {
          e.exports = function(e, t) {
              return {
                  enumerable: !(1 & e),
                  configurable: !(2 & e),
                  writable: !(4 & e),
                  value: t
              }
          }
      },
      3532: (e, t, i) => {
          "use strict";
          var n = i(6943),
              a = i(6654),
              r = i(200),
              s = i(9104),
              o = i(6107),
              l = i(1551),
              c = i(7886),
              h = i(6534),
              u = i(2365),
              d = i(4722),
              f = i(6717),
              p = i(4103),
              g = i(1366),
              x = i(619),
              v = s.PROPER,
              m = s.CONFIGURABLE,
              b = x.IteratorPrototype,
              y = x.BUGGY_SAFARI_ITERATORS,
              w = p("iterator"),
              k = "keys",
              S = "values",
              A = "entries",
              C = function() {
                  return this
              };
          e.exports = function(e, t, i, s, p, x, T) {
              l(i, t, s);
              var E, L, P, M = function(e) {
                      if (e === p && F) return F;
                      if (!y && e in _) return _[e];
                      switch (e) {
                          case k:
                              return function() {
                                  return new i(this, e)
                              };
                          case S:
                              return function() {
                                  return new i(this, e)
                              };
                          case A:
                              return function() {
                                  return new i(this, e)
                              }
                      }
                      return function() {
                          return new i(this)
                      }
                  },
                  I = t + " Iterator",
                  R = !1,
                  _ = e.prototype,
                  O = _[w] || _["@@iterator"] || p && _[p],
                  F = !y && O || M(p),
                  N = "Array" == t && _.entries || O;
              if (N && (E = c(N.call(new e)), E !== Object.prototype && E.next && (r || c(E) === b || (h ? h(E, b) : o(E[w]) || f(E, w, C)), u(E, I, !0, !0), r && (g[I] = C))), v && p == S && O && O.name !== S && (!r && m ? d(_, "name", S) : (R = !0, F = function() {
                      return a(O, this)
                  })), p)
                  if (L = {
                          values: M(S),
                          keys: x ? F : M(k),
                          entries: M(A)
                      }, T)
                      for (P in L)(y || R || !(P in _)) && f(_, P, L[P]);
                  else n({
                      target: t,
                      proto: !0,
                      forced: y || R
                  }, L);
              return r && !T || _[w] === F || f(_, w, F, {
                  name: p
              }), g[t] = F, L
          }
      },
      4133: (e, t, i) => {
          var n = i(8814);
          e.exports = !n((function() {
              return 7 != Object.defineProperty({}, 1, {
                  get: function() {
                      return 7
                  }
              })[1]
          }))
      },
      1657: (e, t, i) => {
          var n = i(3834),
              a = i(1419),
              r = n.document,
              s = a(r) && a(r.createElement);
          e.exports = function(e) {
              return s ? r.createElement(e) : {}
          }
      },
      5243: e => {
          e.exports = {
              CSSRuleList: 0,
              CSSStyleDeclaration: 0,
              CSSValueList: 0,
              ClientRectList: 0,
              DOMRectList: 0,
              DOMStringList: 0,
              DOMTokenList: 1,
              DataTransferItemList: 0,
              FileList: 0,
              HTMLAllCollection: 0,
              HTMLCollection: 0,
              HTMLFormElement: 0,
              HTMLSelectElement: 0,
              MediaList: 0,
              MimeTypeArray: 0,
              NamedNodeMap: 0,
              NodeList: 1,
              PaintRequestList: 0,
              Plugin: 0,
              PluginArray: 0,
              SVGLengthList: 0,
              SVGNumberList: 0,
              SVGPathSegList: 0,
              SVGPointList: 0,
              SVGStringList: 0,
              SVGTransformList: 0,
              SourceBufferList: 0,
              StyleSheetList: 0,
              TextTrackCueList: 0,
              TextTrackList: 0,
              TouchList: 0
          }
      },
      210: (e, t, i) => {
          var n = i(1657),
              a = n("span").classList,
              r = a && a.constructor && a.constructor.prototype;
          e.exports = r === Object.prototype ? void 0 : r
      },
      322: (e, t, i) => {
          var n = i(7859);
          e.exports = n("navigator", "userAgent") || ""
      },
      1418: (e, t, i) => {
          var n, a, r = i(3834),
              s = i(322),
              o = r.process,
              l = r.Deno,
              c = o && o.versions || l && l.version,
              h = c && c.v8;
          h && (n = h.split("."), a = n[0] > 0 && n[0] < 4 ? 1 : +(n[0] + n[1])), !a && s && (n = s.match(/Edge\/(\d+)/), (!n || n[1] >= 74) && (n = s.match(/Chrome\/(\d+)/), n && (a = +n[1]))), e.exports = a
      },
      203: e => {
          e.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]
      },
      9277: (e, t, i) => {
          var n = i(8814),
              a = i(3386);
          e.exports = !n((function() {
              var e = Error("a");
              return !("stack" in e) || (Object.defineProperty(e, "stack", a(1, 7)), 7 !== e.stack)
          }))
      },
      6943: (e, t, i) => {
          var n = i(3834),
              a = i(863).f,
              r = i(4722),
              s = i(6717),
              o = i(4650),
              l = i(7366),
              c = i(2764);
          e.exports = function(e, t) {
              var i, h, u, d, f, p, g = e.target,
                  x = e.global,
                  v = e.stat;
              if (h = x ? n : v ? n[g] || o(g, {}) : (n[g] || {}).prototype, h)
                  for (u in t) {
                      if (f = t[u], e.noTargetGet ? (p = a(h, u), d = p && p.value) : d = h[u], i = c(x ? u : g + (v ? "." : "#") + u, e.forced), !i && void 0 !== d) {
                          if (typeof f == typeof d) continue;
                          l(f, d)
                      }(e.sham || d && d.sham) && r(f, "sham", !0), s(h, u, f, e)
                  }
          }
      },
      8814: e => {
          e.exports = function(e) {
              try {
                  return !!e()
              } catch (t) {
                  return !0
              }
          }
      },
      3218: (e, t, i) => {
          "use strict";
          i(1476);
          var n = i(1636),
              a = i(6717),
              r = i(738),
              s = i(8814),
              o = i(4103),
              l = i(4722),
              c = o("species"),
              h = RegExp.prototype;
          e.exports = function(e, t, i, u) {
              var d = o(e),
                  f = !s((function() {
                      var t = {};
                      return t[d] = function() {
                          return 7
                      }, 7 != "" [e](t)
                  })),
                  p = f && !s((function() {
                      var t = !1,
                          i = /a/;
                      return "split" === e && (i = {}, i.constructor = {}, i.constructor[c] = function() {
                          return i
                      }, i.flags = "", i[d] = /./ [d]), i.exec = function() {
                          return t = !0, null
                      }, i[d](""), !t
                  }));
              if (!f || !p || i) {
                  var g = n(/./ [d]),
                      x = t(d, "" [e], (function(e, t, i, a, s) {
                          var o = n(e),
                              l = t.exec;
                          return l === r || l === h.exec ? f && !s ? {
                              done: !0,
                              value: g(t, i, a)
                          } : {
                              done: !0,
                              value: o(i, t, a)
                          } : {
                              done: !1
                          }
                      }));
                  a(String.prototype, e, x[0]), a(h, d, x[1])
              }
              u && l(h[d], "sham", !0)
          }
      },
      6112: (e, t, i) => {
          var n = i(9793),
              a = Function.prototype,
              r = a.apply,
              s = a.call;
          e.exports = "object" == typeof Reflect && Reflect.apply || (n ? s.bind(r) : function() {
              return s.apply(r, arguments)
          })
      },
      9793: (e, t, i) => {
          var n = i(8814);
          e.exports = !n((function() {
              var e = function() {}.bind();
              return "function" != typeof e || e.hasOwnProperty("prototype")
          }))
      },
      6654: (e, t, i) => {
          var n = i(9793),
              a = Function.prototype.call;
          e.exports = n ? a.bind(a) : function() {
              return a.apply(a, arguments)
          }
      },
      9104: (e, t, i) => {
          var n = i(4133),
              a = i(2924),
              r = Function.prototype,
              s = n && Object.getOwnPropertyDescriptor,
              o = a(r, "name"),
              l = o && "something" === function() {}.name,
              c = o && (!n || n && s(r, "name").configurable);
          e.exports = {
              EXISTS: o,
              PROPER: l,
              CONFIGURABLE: c
          }
      },
      1636: (e, t, i) => {
          var n = i(9793),
              a = Function.prototype,
              r = a.bind,
              s = a.call,
              o = n && r.bind(s, s);
          e.exports = n ? function(e) {
              return e && o(e)
          } : function(e) {
              return e && function() {
                  return s.apply(e, arguments)
              }
          }
      },
      7859: (e, t, i) => {
          var n = i(3834),
              a = i(6107),
              r = function(e) {
                  return a(e) ? e : void 0
              };
          e.exports = function(e, t) {
              return arguments.length < 2 ? r(n[e]) : n[e] && n[e][t]
          }
      },
      7689: (e, t, i) => {
          var n = i(8762);
          e.exports = function(e, t) {
              var i = e[t];
              return null == i ? void 0 : n(i)
          }
      },
      3075: (e, t, i) => {
          var n = i(1636),
              a = i(8332),
              r = Math.floor,
              s = n("".charAt),
              o = n("".replace),
              l = n("".slice),
              c = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
              h = /\$([$&'`]|\d{1,2})/g;
          e.exports = function(e, t, i, n, u, d) {
              var f = i + e.length,
                  p = n.length,
                  g = h;
              return void 0 !== u && (u = a(u), g = c), o(d, g, (function(a, o) {
                  var c;
                  switch (s(o, 0)) {
                      case "$":
                          return "$";
                      case "&":
                          return e;
                      case "`":
                          return l(t, 0, i);
                      case "'":
                          return l(t, f);
                      case "<":
                          c = u[l(o, 1, -1)];
                          break;
                      default:
                          var h = +o;
                          if (0 === h) return a;
                          if (h > p) {
                              var d = r(h / 10);
                              return 0 === d ? a : d <= p ? void 0 === n[d - 1] ? s(o, 1) : n[d - 1] + s(o, 1) : a
                          }
                          c = n[h - 1]
                  }
                  return void 0 === c ? "" : c
              }))
          }
      },
      3834: (e, t, i) => {
          var n = function(e) {
              return e && e.Math == Math && e
          };
          e.exports = n("object" == typeof globalThis && globalThis) || n("object" == typeof window && window) || n("object" == typeof self && self) || n("object" == typeof i.g && i.g) || function() {
              return this
          }() || Function("return this")()
      },
      2924: (e, t, i) => {
          var n = i(1636),
              a = i(8332),
              r = n({}.hasOwnProperty);
          e.exports = Object.hasOwn || function(e, t) {
              return r(a(e), t)
          }
      },
      1999: e => {
          e.exports = {}
      },
      6052: (e, t, i) => {
          var n = i(7859);
          e.exports = n("document", "documentElement")
      },
      6335: (e, t, i) => {
          var n = i(4133),
              a = i(8814),
              r = i(1657);
          e.exports = !n && !a((function() {
              return 7 != Object.defineProperty(r("div"), "a", {
                  get: function() {
                      return 7
                  }
              }).a
          }))
      },
      3972: (e, t, i) => {
          var n = i(3834),
              a = i(1636),
              r = i(8814),
              s = i(6749),
              o = n.Object,
              l = a("".split);
          e.exports = r((function() {
              return !o("z").propertyIsEnumerable(0)
          })) ? function(e) {
              return "String" == s(e) ? l(e, "") : o(e)
          } : o
      },
      2511: (e, t, i) => {
          var n = i(6107),
              a = i(1419),
              r = i(6534);
          e.exports = function(e, t, i) {
              var s, o;
              return r && n(s = t.constructor) && s !== i && a(o = s.prototype) && o !== i.prototype && r(e, o), e
          }
      },
      6461: (e, t, i) => {
          var n = i(1636),
              a = i(6107),
              r = i(6081),
              s = n(Function.toString);
          a(r.inspectSource) || (r.inspectSource = function(e) {
              return s(e)
          }), e.exports = r.inspectSource
      },
      6270: (e, t, i) => {
          var n = i(1419),
              a = i(4722);
          e.exports = function(e, t) {
              n(t) && "cause" in t && a(e, "cause", t.cause)
          }
      },
      780: (e, t, i) => {
          var n, a, r, s = i(4825),
              o = i(3834),
              l = i(1636),
              c = i(1419),
              h = i(4722),
              u = i(2924),
              d = i(6081),
              f = i(5315),
              p = i(1999),
              g = "Object already initialized",
              x = o.TypeError,
              v = o.WeakMap,
              m = function(e) {
                  return r(e) ? a(e) : n(e, {})
              },
              b = function(e) {
                  return function(t) {
                      var i;
                      if (!c(t) || (i = a(t)).type !== e) throw x("Incompatible receiver, " + e + " required");
                      return i
                  }
              };
          if (s || d.state) {
              var y = d.state || (d.state = new v),
                  w = l(y.get),
                  k = l(y.has),
                  S = l(y.set);
              n = function(e, t) {
                  if (k(y, e)) throw new x(g);
                  return t.facade = e, S(y, e, t), t
              }, a = function(e) {
                  return w(y, e) || {}
              }, r = function(e) {
                  return k(y, e)
              }
          } else {
              var A = f("state");
              p[A] = !0, n = function(e, t) {
                  if (u(e, A)) throw new x(g);
                  return t.facade = e, h(e, A, t), t
              }, a = function(e) {
                  return u(e, A) ? e[A] : {}
              }, r = function(e) {
                  return u(e, A)
              }
          }
          e.exports = {
              set: n,
              get: a,
              has: r,
              enforce: m,
              getterFor: b
          }
      },
      6107: e => {
          e.exports = function(e) {
              return "function" == typeof e
          }
      },
      2764: (e, t, i) => {
          var n = i(8814),
              a = i(6107),
              r = /#|\.prototype\./,
              s = function(e, t) {
                  var i = l[o(e)];
                  return i == h || i != c && (a(t) ? n(t) : !!t)
              },
              o = s.normalize = function(e) {
                  return String(e).replace(r, ".").toLowerCase()
              },
              l = s.data = {},
              c = s.NATIVE = "N",
              h = s.POLYFILL = "P";
          e.exports = s
      },
      1419: (e, t, i) => {
          var n = i(6107);
          e.exports = function(e) {
              return "object" == typeof e ? null !== e : n(e)
          }
      },
      200: e => {
          e.exports = !1
      },
      1637: (e, t, i) => {
          var n = i(3834),
              a = i(7859),
              r = i(6107),
              s = i(6123),
              o = i(49),
              l = n.Object;
          e.exports = o ? function(e) {
              return "symbol" == typeof e
          } : function(e) {
              var t = a("Symbol");
              return r(t) && s(t.prototype, l(e))
          }
      },
      619: (e, t, i) => {
          "use strict";
          var n, a, r, s = i(8814),
              o = i(6107),
              l = i(5267),
              c = i(7886),
              h = i(6717),
              u = i(4103),
              d = i(200),
              f = u("iterator"),
              p = !1;
          [].keys && (r = [].keys(), "next" in r ? (a = c(c(r)), a !== Object.prototype && (n = a)) : p = !0);
          var g = void 0 == n || s((function() {
              var e = {};
              return n[f].call(e) !== e
          }));
          g ? n = {} : d && (n = l(n)), o(n[f]) || h(n, f, (function() {
              return this
          })), e.exports = {
              IteratorPrototype: n,
              BUGGY_SAFARI_ITERATORS: p
          }
      },
      1366: e => {
          e.exports = {}
      },
      8600: (e, t, i) => {
          var n = i(7302);
          e.exports = function(e) {
              return n(e.length)
          }
      },
      1368: (e, t, i) => {
          var n = i(1418),
              a = i(8814);
          e.exports = !!Object.getOwnPropertySymbols && !a((function() {
              var e = Symbol();
              return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && n && n < 41
          }))
      },
      4825: (e, t, i) => {
          var n = i(3834),
              a = i(6107),
              r = i(6461),
              s = n.WeakMap;
          e.exports = a(s) && /native code/.test(r(s))
      },
      1356: (e, t, i) => {
          var n = i(6975);
          e.exports = function(e, t) {
              return void 0 === e ? arguments.length < 2 ? "" : t : n(e)
          }
      },
      5267: (e, t, i) => {
          var n, a = i(616),
              r = i(6029),
              s = i(203),
              o = i(1999),
              l = i(6052),
              c = i(1657),
              h = i(5315),
              u = ">",
              d = "<",
              f = "prototype",
              p = "script",
              g = h("IE_PROTO"),
              x = function() {},
              v = function(e) {
                  return d + p + u + e + d + "/" + p + u
              },
              m = function(e) {
                  e.write(v("")), e.close();
                  var t = e.parentWindow.Object;
                  return e = null, t
              },
              b = function() {
                  var e, t = c("iframe"),
                      i = "java" + p + ":";
                  return t.style.display = "none", l.appendChild(t), t.src = String(i), e = t.contentWindow.document, e.open(), e.write(v("document.F=Object")), e.close(), e.F
              },
              y = function() {
                  try {
                      n = new ActiveXObject("htmlfile")
                  } catch (t) {}
                  y = "undefined" != typeof document ? document.domain && n ? m(n) : b() : m(n);
                  var e = s.length;
                  while (e--) delete y[f][s[e]];
                  return y()
              };
          o[g] = !0, e.exports = Object.create || function(e, t) {
              var i;
              return null !== e ? (x[f] = a(e), i = new x, x[f] = null, i[g] = e) : i = y(), void 0 === t ? i : r.f(i, t)
          }
      },
      6029: (e, t, i) => {
          var n = i(4133),
              a = i(64),
              r = i(1012),
              s = i(616),
              o = i(7447),
              l = i(4315);
          t.f = n && !a ? Object.defineProperties : function(e, t) {
              s(e);
              var i, n = o(t),
                  a = l(t),
                  c = a.length,
                  h = 0;
              while (c > h) r.f(e, i = a[h++], n[i]);
              return e
          }
      },
      1012: (e, t, i) => {
          var n = i(3834),
              a = i(4133),
              r = i(6335),
              s = i(64),
              o = i(616),
              l = i(1017),
              c = n.TypeError,
              h = Object.defineProperty,
              u = Object.getOwnPropertyDescriptor,
              d = "enumerable",
              f = "configurable",
              p = "writable";
          t.f = a ? s ? function(e, t, i) {
              if (o(e), t = l(t), o(i), "function" === typeof e && "prototype" === t && "value" in i && p in i && !i[p]) {
                  var n = u(e, t);
                  n && n[p] && (e[t] = i.value, i = {
                      configurable: f in i ? i[f] : n[f],
                      enumerable: d in i ? i[d] : n[d],
                      writable: !1
                  })
              }
              return h(e, t, i)
          } : h : function(e, t, i) {
              if (o(e), t = l(t), o(i), r) try {
                  return h(e, t, i)
              } catch (n) {}
              if ("get" in i || "set" in i) throw c("Accessors not supported");
              return "value" in i && (e[t] = i.value), e
          }
      },
      863: (e, t, i) => {
          var n = i(4133),
              a = i(6654),
              r = i(8068),
              s = i(3386),
              o = i(7447),
              l = i(1017),
              c = i(2924),
              h = i(6335),
              u = Object.getOwnPropertyDescriptor;
          t.f = n ? u : function(e, t) {
              if (e = o(e), t = l(t), h) try {
                  return u(e, t)
              } catch (i) {}
              if (c(e, t)) return s(!a(r.f, e, t), e[t])
          }
      },
      3450: (e, t, i) => {
          var n = i(6682),
              a = i(203),
              r = a.concat("length", "prototype");
          t.f = Object.getOwnPropertyNames || function(e) {
              return n(e, r)
          }
      },
      1996: (e, t) => {
          t.f = Object.getOwnPropertySymbols
      },
      7886: (e, t, i) => {
          var n = i(3834),
              a = i(2924),
              r = i(6107),
              s = i(8332),
              o = i(5315),
              l = i(911),
              c = o("IE_PROTO"),
              h = n.Object,
              u = h.prototype;
          e.exports = l ? h.getPrototypeOf : function(e) {
              var t = s(e);
              if (a(t, c)) return t[c];
              var i = t.constructor;
              return r(i) && t instanceof i ? i.prototype : t instanceof h ? u : null
          }
      },
      6123: (e, t, i) => {
          var n = i(1636);
          e.exports = n({}.isPrototypeOf)
      },
      6682: (e, t, i) => {
          var n = i(1636),
              a = i(2924),
              r = i(7447),
              s = i(7714).indexOf,
              o = i(1999),
              l = n([].push);
          e.exports = function(e, t) {
              var i, n = r(e),
                  c = 0,
                  h = [];
              for (i in n) !a(o, i) && a(n, i) && l(h, i);
              while (t.length > c) a(n, i = t[c++]) && (~s(h, i) || l(h, i));
              return h
          }
      },
      4315: (e, t, i) => {
          var n = i(6682),
              a = i(203);
          e.exports = Object.keys || function(e) {
              return n(e, a)
          }
      },
      8068: (e, t) => {
          "use strict";
          var i = {}.propertyIsEnumerable,
              n = Object.getOwnPropertyDescriptor,
              a = n && !i.call({
                  1: 2
              }, 1);
          t.f = a ? function(e) {
              var t = n(this, e);
              return !!t && t.enumerable
          } : i
      },
      6534: (e, t, i) => {
          var n = i(1636),
              a = i(616),
              r = i(9220);
          e.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
              var e, t = !1,
                  i = {};
              try {
                  e = n(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), e(i, []), t = i instanceof Array
              } catch (s) {}
              return function(i, n) {
                  return a(i), r(n), t ? e(i, n) : i.__proto__ = n, i
              }
          }() : void 0)
      },
      9370: (e, t, i) => {
          var n = i(3834),
              a = i(6654),
              r = i(6107),
              s = i(1419),
              o = n.TypeError;
          e.exports = function(e, t) {
              var i, n;
              if ("string" === t && r(i = e.toString) && !s(n = a(i, e))) return n;
              if (r(i = e.valueOf) && !s(n = a(i, e))) return n;
              if ("string" !== t && r(i = e.toString) && !s(n = a(i, e))) return n;
              throw o("Can't convert object to primitive value")
          }
      },
      1240: (e, t, i) => {
          var n = i(7859),
              a = i(1636),
              r = i(3450),
              s = i(1996),
              o = i(616),
              l = a([].concat);
          e.exports = n("Reflect", "ownKeys") || function(e) {
              var t = r.f(o(e)),
                  i = s.f;
              return i ? l(t, i(e)) : t
          }
      },
      6717: (e, t, i) => {
          var n = i(3834),
              a = i(6107),
              r = i(2924),
              s = i(4722),
              o = i(4650),
              l = i(6461),
              c = i(780),
              h = i(9104).CONFIGURABLE,
              u = c.get,
              d = c.enforce,
              f = String(String).split("String");
          (e.exports = function(e, t, i, l) {
              var c, u = !!l && !!l.unsafe,
                  p = !!l && !!l.enumerable,
                  g = !!l && !!l.noTargetGet,
                  x = l && void 0 !== l.name ? l.name : t;
              a(i) && ("Symbol(" === String(x).slice(0, 7) && (x = "[" + String(x).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!r(i, "name") || h && i.name !== x) && s(i, "name", x), c = d(i), c.source || (c.source = f.join("string" == typeof x ? x : ""))), e !== n ? (u ? !g && e[t] && (p = !0) : delete e[t], p ? e[t] = i : s(e, t, i)) : p ? e[t] = i : o(t, i)
          })(Function.prototype, "toString", (function() {
              return a(this) && u(this).source || l(this)
          }))
      },
      3808: (e, t, i) => {
          var n = i(3834),
              a = i(6654),
              r = i(616),
              s = i(6107),
              o = i(6749),
              l = i(738),
              c = n.TypeError;
          e.exports = function(e, t) {
              var i = e.exec;
              if (s(i)) {
                  var n = a(i, e, t);
                  return null !== n && r(n), n
              }
              if ("RegExp" === o(e)) return a(l, e, t);
              throw c("RegExp#exec called on incompatible receiver")
          }
      },
      738: (e, t, i) => {
          "use strict";
          var n = i(6654),
              a = i(1636),
              r = i(6975),
              s = i(9592),
              o = i(9165),
              l = i(8850),
              c = i(5267),
              h = i(780).get,
              u = i(3425),
              d = i(10),
              f = l("native-string-replace", String.prototype.replace),
              p = RegExp.prototype.exec,
              g = p,
              x = a("".charAt),
              v = a("".indexOf),
              m = a("".replace),
              b = a("".slice),
              y = function() {
                  var e = /a/,
                      t = /b*/g;
                  return n(p, e, "a"), n(p, t, "a"), 0 !== e.lastIndex || 0 !== t.lastIndex
              }(),
              w = o.BROKEN_CARET,
              k = void 0 !== /()??/.exec("")[1],
              S = y || k || w || u || d;
          S && (g = function(e) {
              var t, i, a, o, l, u, d, S = this,
                  A = h(S),
                  C = r(e),
                  T = A.raw;
              if (T) return T.lastIndex = S.lastIndex, t = n(g, T, C), S.lastIndex = T.lastIndex, t;
              var E = A.groups,
                  L = w && S.sticky,
                  P = n(s, S),
                  M = S.source,
                  I = 0,
                  R = C;
              if (L && (P = m(P, "y", ""), -1 === v(P, "g") && (P += "g"), R = b(C, S.lastIndex), S.lastIndex > 0 && (!S.multiline || S.multiline && "\n" !== x(C, S.lastIndex - 1)) && (M = "(?: " + M + ")", R = " " + R, I++), i = new RegExp("^(?:" + M + ")", P)), k && (i = new RegExp("^" + M + "$(?!\\s)", P)), y && (a = S.lastIndex), o = n(p, L ? i : S, R), L ? o ? (o.input = b(o.input, I), o[0] = b(o[0], I), o.index = S.lastIndex, S.lastIndex += o[0].length) : S.lastIndex = 0 : y && o && (S.lastIndex = S.global ? o.index + o[0].length : a), k && o && o.length > 1 && n(f, o[0], i, (function() {
                      for (l = 1; l < arguments.length - 2; l++) void 0 === arguments[l] && (o[l] = void 0)
                  })), o && E)
                  for (o.groups = u = c(null), l = 0; l < E.length; l++) d = E[l], u[d[0]] = o[d[1]];
              return o
          }), e.exports = g
      },
      9592: (e, t, i) => {
          "use strict";
          var n = i(616);
          e.exports = function() {
              var e = n(this),
                  t = "";
              return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), e.dotAll && (t += "s"), e.unicode && (t += "u"), e.sticky && (t += "y"), t
          }
      },
      9165: (e, t, i) => {
          var n = i(8814),
              a = i(3834),
              r = a.RegExp,
              s = n((function() {
                  var e = r("a", "y");
                  return e.lastIndex = 2, null != e.exec("abcd")
              })),
              o = s || n((function() {
                  return !r("a", "y").sticky
              })),
              l = s || n((function() {
                  var e = r("^r", "gy");
                  return e.lastIndex = 2, null != e.exec("str")
              }));
          e.exports = {
              BROKEN_CARET: l,
              MISSED_STICKY: o,
              UNSUPPORTED_Y: s
          }
      },
      3425: (e, t, i) => {
          var n = i(8814),
              a = i(3834),
              r = a.RegExp;
          e.exports = n((function() {
              var e = r(".", "s");
              return !(e.dotAll && e.exec("\n") && "s" === e.flags)
          }))
      },
      10: (e, t, i) => {
          var n = i(8814),
              a = i(3834),
              r = a.RegExp;
          e.exports = n((function() {
              var e = r("(?<a>b)", "g");
              return "b" !== e.exec("b").groups.a || "bc" !== "b".replace(e, "$<a>c")
          }))
      },
      5177: (e, t, i) => {
          var n = i(3834),
              a = n.TypeError;
          e.exports = function(e) {
              if (void 0 == e) throw a("Can't call method on " + e);
              return e
          }
      },
      4650: (e, t, i) => {
          var n = i(3834),
              a = Object.defineProperty;
          e.exports = function(e, t) {
              try {
                  a(n, e, {
                      value: t,
                      configurable: !0,
                      writable: !0
                  })
              } catch (i) {
                  n[e] = t
              }
              return t
          }
      },
      2365: (e, t, i) => {
          var n = i(1012).f,
              a = i(2924),
              r = i(4103),
              s = r("toStringTag");
          e.exports = function(e, t, i) {
              e && !i && (e = e.prototype), e && !a(e, s) && n(e, s, {
                  configurable: !0,
                  value: t
              })
          }
      },
      5315: (e, t, i) => {
          var n = i(8850),
              a = i(3965),
              r = n("keys");
          e.exports = function(e) {
              return r[e] || (r[e] = a(e))
          }
      },
      6081: (e, t, i) => {
          var n = i(3834),
              a = i(4650),
              r = "__core-js_shared__",
              s = n[r] || a(r, {});
          e.exports = s
      },
      8850: (e, t, i) => {
          var n = i(200),
              a = i(6081);
          (e.exports = function(e, t) {
              return a[e] || (a[e] = void 0 !== t ? t : {})
          })("versions", []).push({
              version: "3.21.1",
              mode: n ? "pure" : "global",
              copyright: "© 2014-2022 Denis Pushkarev (zloirock.ru)",
              license: "https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",
              source: "https://github.com/zloirock/core-js"
          })
      },
      6823: (e, t, i) => {
          var n = i(1636),
              a = i(6675),
              r = i(6975),
              s = i(5177),
              o = n("".charAt),
              l = n("".charCodeAt),
              c = n("".slice),
              h = function(e) {
                  return function(t, i) {
                      var n, h, u = r(s(t)),
                          d = a(i),
                          f = u.length;
                      return d < 0 || d >= f ? e ? "" : void 0 : (n = l(u, d), n < 55296 || n > 56319 || d + 1 === f || (h = l(u, d + 1)) < 56320 || h > 57343 ? e ? o(u, d) : n : e ? c(u, d, d + 2) : h - 56320 + (n - 55296 << 10) + 65536)
                  }
              };
          e.exports = {
              codeAt: h(!1),
              charAt: h(!0)
          }
      },
      2661: (e, t, i) => {
          var n = i(6675),
              a = Math.max,
              r = Math.min;
          e.exports = function(e, t) {
              var i = n(e);
              return i < 0 ? a(i + t, 0) : r(i, t)
          }
      },
      7447: (e, t, i) => {
          var n = i(3972),
              a = i(5177);
          e.exports = function(e) {
              return n(a(e))
          }
      },
      6675: e => {
          var t = Math.ceil,
              i = Math.floor;
          e.exports = function(e) {
              var n = +e;
              return n !== n || 0 === n ? 0 : (n > 0 ? i : t)(n)
          }
      },
      7302: (e, t, i) => {
          var n = i(6675),
              a = Math.min;
          e.exports = function(e) {
              return e > 0 ? a(n(e), 9007199254740991) : 0
          }
      },
      8332: (e, t, i) => {
          var n = i(3834),
              a = i(5177),
              r = n.Object;
          e.exports = function(e) {
              return r(a(e))
          }
      },
      4384: (e, t, i) => {
          var n = i(3834),
              a = i(6654),
              r = i(1419),
              s = i(1637),
              o = i(7689),
              l = i(9370),
              c = i(4103),
              h = n.TypeError,
              u = c("toPrimitive");
          e.exports = function(e, t) {
              if (!r(e) || s(e)) return e;
              var i, n = o(e, u);
              if (n) {
                  if (void 0 === t && (t = "default"), i = a(n, e, t), !r(i) || s(i)) return i;
                  throw h("Can't convert object to primitive value")
              }
              return void 0 === t && (t = "number"), l(e, t)
          }
      },
      1017: (e, t, i) => {
          var n = i(4384),
              a = i(1637);
          e.exports = function(e) {
              var t = n(e, "string");
              return a(t) ? t : t + ""
          }
      },
      4130: (e, t, i) => {
          var n = i(4103),
              a = n("toStringTag"),
              r = {};
          r[a] = "z", e.exports = "[object z]" === String(r)
      },
      6975: (e, t, i) => {
          var n = i(3834),
              a = i(4239),
              r = n.String;
          e.exports = function(e) {
              if ("Symbol" === a(e)) throw TypeError("Cannot convert a Symbol value to a string");
              return r(e)
          }
      },
      7545: (e, t, i) => {
          var n = i(3834),
              a = n.String;
          e.exports = function(e) {
              try {
                  return a(e)
              } catch (t) {
                  return "Object"
              }
          }
      },
      3965: (e, t, i) => {
          var n = i(1636),
              a = 0,
              r = Math.random(),
              s = n(1..toString);
          e.exports = function(e) {
              return "Symbol(" + (void 0 === e ? "" : e) + ")_" + s(++a + r, 36)
          }
      },
      49: (e, t, i) => {
          var n = i(1368);
          e.exports = n && !Symbol.sham && "symbol" == typeof Symbol.iterator
      },
      64: (e, t, i) => {
          var n = i(4133),
              a = i(8814);
          e.exports = n && a((function() {
              return 42 != Object.defineProperty((function() {}), "prototype", {
                  value: 42,
                  writable: !1
              }).prototype
          }))
      },
      4103: (e, t, i) => {
          var n = i(3834),
              a = i(8850),
              r = i(2924),
              s = i(3965),
              o = i(1368),
              l = i(49),
              c = a("wks"),
              h = n.Symbol,
              u = h && h["for"],
              d = l ? h : h && h.withoutSetter || s;
          e.exports = function(e) {
              if (!r(c, e) || !o && "string" != typeof c[e]) {
                  var t = "Symbol." + e;
                  o && r(h, e) ? c[e] = h[e] : c[e] = l && u ? u(t) : d(t)
              }
              return c[e]
          }
      },
      8376: (e, t, i) => {
          "use strict";
          var n = i(7859),
              a = i(2924),
              r = i(4722),
              s = i(6123),
              o = i(6534),
              l = i(7366),
              c = i(2511),
              h = i(1356),
              u = i(6270),
              d = i(1328),
              f = i(9277),
              p = i(200);
          e.exports = function(e, t, i, g) {
              var x = g ? 2 : 1,
                  v = e.split("."),
                  m = v[v.length - 1],
                  b = n.apply(null, v);
              if (b) {
                  var y = b.prototype;
                  if (!p && a(y, "cause") && delete y.cause, !i) return b;
                  var w = n("Error"),
                      k = t((function(e, t) {
                          var i = h(g ? t : e, void 0),
                              n = g ? new b(e) : new b;
                          return void 0 !== i && r(n, "message", i), f && r(n, "stack", d(n.stack, 2)), this && s(y, this) && c(n, this, k), arguments.length > x && u(n, arguments[x]), n
                      }));
                  if (k.prototype = y, "Error" !== m && (o ? o(k, w) : l(k, w, {
                          name: !0
                      })), l(k, b), !p) try {
                      y.name !== m && r(y, "name", m), y.constructor = k
                  } catch (S) {}
                  return k
              }
          }
      },
      8998: (e, t, i) => {
          "use strict";
          var n = i(7447),
              a = i(5323),
              r = i(1366),
              s = i(780),
              o = i(1012).f,
              l = i(3532),
              c = i(200),
              h = i(4133),
              u = "Array Iterator",
              d = s.set,
              f = s.getterFor(u);
          e.exports = l(Array, "Array", (function(e, t) {
              d(this, {
                  type: u,
                  target: n(e),
                  index: 0,
                  kind: t
              })
          }), (function() {
              var e = f(this),
                  t = e.target,
                  i = e.kind,
                  n = e.index++;
              return !t || n >= t.length ? (e.target = void 0, {
                  value: void 0,
                  done: !0
              }) : "keys" == i ? {
                  value: n,
                  done: !1
              } : "values" == i ? {
                  value: t[n],
                  done: !1
              } : {
                  value: [n, t[n]],
                  done: !1
              }
          }), "values");
          var p = r.Arguments = r.Array;
          if (a("keys"), a("values"), a("entries"), !c && h && "values" !== p.name) try {
              o(p, "name", {
                  value: "values"
              })
          } catch (g) {}
      },
      5583: (e, t, i) => {
          var n = i(5323);
          n("flat")
      },
      6822: (e, t, i) => {
          var n = i(6943),
              a = i(3834),
              r = i(6112),
              s = i(8376),
              o = "WebAssembly",
              l = a[o],
              c = 7 !== Error("e", {
                  cause: 7
              }).cause,
              h = function(e, t) {
                  var i = {};
                  i[e] = s(e, t, c), n({
                      global: !0,
                      forced: c
                  }, i)
              },
              u = function(e, t) {
                  if (l && l[e]) {
                      var i = {};
                      i[e] = s(o + "." + e, t, c), n({
                          target: o,
                          stat: !0,
                          forced: c
                      }, i)
                  }
              };
          h("Error", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("EvalError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("RangeError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("ReferenceError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("SyntaxError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("TypeError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), h("URIError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), u("CompileError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), u("LinkError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          })), u("RuntimeError", (function(e) {
              return function(t) {
                  return r(e, this, arguments)
              }
          }))
      },
      1476: (e, t, i) => {
          "use strict";
          var n = i(6943),
              a = i(738);
          n({
              target: "RegExp",
              proto: !0,
              forced: /./.exec !== a
          }, {
              exec: a
          })
      },
      8964: (e, t, i) => {
          "use strict";
          var n = i(6112),
              a = i(6654),
              r = i(1636),
              s = i(3218),
              o = i(8814),
              l = i(616),
              c = i(6107),
              h = i(6675),
              u = i(7302),
              d = i(6975),
              f = i(5177),
              p = i(3366),
              g = i(7689),
              x = i(3075),
              v = i(3808),
              m = i(4103),
              b = m("replace"),
              y = Math.max,
              w = Math.min,
              k = r([].concat),
              S = r([].push),
              A = r("".indexOf),
              C = r("".slice),
              T = function(e) {
                  return void 0 === e ? e : String(e)
              },
              E = function() {
                  return "$0" === "a".replace(/./, "$0")
              }(),
              L = function() {
                  return !!/./ [b] && "" === /./ [b]("a", "$0")
              }(),
              P = !o((function() {
                  var e = /./;
                  return e.exec = function() {
                      var e = [];
                      return e.groups = {
                          a: "7"
                      }, e
                  }, "7" !== "".replace(e, "$<a>")
              }));
          s("replace", (function(e, t, i) {
              var r = L ? "$" : "$0";
              return [function(e, i) {
                  var n = f(this),
                      r = void 0 == e ? void 0 : g(e, b);
                  return r ? a(r, e, n, i) : a(t, d(n), e, i)
              }, function(e, a) {
                  var s = l(this),
                      o = d(e);
                  if ("string" == typeof a && -1 === A(a, r) && -1 === A(a, "$<")) {
                      var f = i(t, s, o, a);
                      if (f.done) return f.value
                  }
                  var g = c(a);
                  g || (a = d(a));
                  var m = s.global;
                  if (m) {
                      var b = s.unicode;
                      s.lastIndex = 0
                  }
                  var E = [];
                  while (1) {
                      var L = v(s, o);
                      if (null === L) break;
                      if (S(E, L), !m) break;
                      var P = d(L[0]);
                      "" === P && (s.lastIndex = p(o, u(s.lastIndex), b))
                  }
                  for (var M = "", I = 0, R = 0; R < E.length; R++) {
                      L = E[R];
                      for (var _ = d(L[0]), O = y(w(h(L.index), o.length), 0), F = [], N = 1; N < L.length; N++) S(F, T(L[N]));
                      var z = L.groups;
                      if (g) {
                          var D = k([_], F, O, o);
                          void 0 !== z && S(D, z);
                          var H = d(n(a, void 0, D))
                      } else H = x(_, o, O, F, z, a);
                      O >= I && (M += C(o, I, O) + H, I = O + _.length)
                  }
                  return M + C(o, I)
              }]
          }), !P || !E || L)
      },
      702: (e, t, i) => {
          var n = i(3834),
              a = i(5243),
              r = i(210),
              s = i(8998),
              o = i(4722),
              l = i(4103),
              c = l("iterator"),
              h = l("toStringTag"),
              u = s.values,
              d = function(e, t) {
                  if (e) {
                      if (e[c] !== u) try {
                          o(e, c, u)
                      } catch (n) {
                          e[c] = u
                      }
                      if (e[h] || o(e, h, t), a[t])
                          for (var i in s)
                              if (e[i] !== s[i]) try {
                                  o(e, i, s[i])
                              } catch (n) {
                                  e[i] = s[i]
                              }
                  }
              };
          for (var f in a) d(n[f] && n[f].prototype, f);
          d(r, "DOMTokenList")
      },
      3632: function(e, t) {
          var i, n;
          /*!
           * jQuery JavaScript Library v3.6.0
           * https://jquery.com/
           *
           * Includes Sizzle.js
           * https://sizzlejs.com/
           *
           * Copyright OpenJS Foundation and other contributors
           * Released under the MIT license
           * https://jquery.org/license
           *
           * Date: 2021-03-02T17:08Z
           */
          (function(t, i) {
              "use strict";
              "object" === typeof e.exports ? e.exports = t.document ? i(t, !0) : function(e) {
                  if (!e.document) throw new Error("jQuery requires a window with a document");
                  return i(e)
              } : i(t)
          })("undefined" !== typeof window ? window : this, (function(a, r) {
              "use strict";
              var s = [],
                  o = Object.getPrototypeOf,
                  l = s.slice,
                  c = s.flat ? function(e) {
                      return s.flat.call(e)
                  } : function(e) {
                      return s.concat.apply([], e)
                  },
                  h = s.push,
                  u = s.indexOf,
                  d = {},
                  f = d.toString,
                  p = d.hasOwnProperty,
                  g = p.toString,
                  x = g.call(Object),
                  v = {},
                  m = function(e) {
                      return "function" === typeof e && "number" !== typeof e.nodeType && "function" !== typeof e.item
                  },
                  b = function(e) {
                      return null != e && e === e.window
                  },
                  y = a.document,
                  w = {
                      type: !0,
                      src: !0,
                      nonce: !0,
                      noModule: !0
                  };

              function k(e, t, i) {
                  i = i || y;
                  var n, a, r = i.createElement("script");
                  if (r.text = e, t)
                      for (n in w) a = t[n] || t.getAttribute && t.getAttribute(n), a && r.setAttribute(n, a);
                  i.head.appendChild(r).parentNode.removeChild(r)
              }

              function S(e) {
                  return null == e ? e + "" : "object" === typeof e || "function" === typeof e ? d[f.call(e)] || "object" : typeof e
              }
              var A = "3.6.0",
                  C = function(e, t) {
                      return new C.fn.init(e, t)
                  };

              function T(e) {
                  var t = !!e && "length" in e && e.length,
                      i = S(e);
                  return !m(e) && !b(e) && ("array" === i || 0 === t || "number" === typeof t && t > 0 && t - 1 in e)
              }
              C.fn = C.prototype = {
                  jquery: A,
                  constructor: C,
                  length: 0,
                  toArray: function() {
                      return l.call(this)
                  },
                  get: function(e) {
                      return null == e ? l.call(this) : e < 0 ? this[e + this.length] : this[e]
                  },
                  pushStack: function(e) {
                      var t = C.merge(this.constructor(), e);
                      return t.prevObject = this, t
                  },
                  each: function(e) {
                      return C.each(this, e)
                  },
                  map: function(e) {
                      return this.pushStack(C.map(this, (function(t, i) {
                          return e.call(t, i, t)
                      })))
                  },
                  slice: function() {
                      return this.pushStack(l.apply(this, arguments))
                  },
                  first: function() {
                      return this.eq(0)
                  },
                  last: function() {
                      return this.eq(-1)
                  },
                  even: function() {
                      return this.pushStack(C.grep(this, (function(e, t) {
                          return (t + 1) % 2
                      })))
                  },
                  odd: function() {
                      return this.pushStack(C.grep(this, (function(e, t) {
                          return t % 2
                      })))
                  },
                  eq: function(e) {
                      var t = this.length,
                          i = +e + (e < 0 ? t : 0);
                      return this.pushStack(i >= 0 && i < t ? [this[i]] : [])
                  },
                  end: function() {
                      return this.prevObject || this.constructor()
                  },
                  push: h,
                  sort: s.sort,
                  splice: s.splice
              }, C.extend = C.fn.extend = function() {
                  var e, t, i, n, a, r, s = arguments[0] || {},
                      o = 1,
                      l = arguments.length,
                      c = !1;
                  for ("boolean" === typeof s && (c = s, s = arguments[o] || {}, o++), "object" === typeof s || m(s) || (s = {}), o === l && (s = this, o--); o < l; o++)
                      if (null != (e = arguments[o]))
                          for (t in e) n = e[t], "__proto__" !== t && s !== n && (c && n && (C.isPlainObject(n) || (a = Array.isArray(n))) ? (i = s[t], r = a && !Array.isArray(i) ? [] : a || C.isPlainObject(i) ? i : {}, a = !1, s[t] = C.extend(c, r, n)) : void 0 !== n && (s[t] = n));
                  return s
              }, C.extend({
                  expando: "jQuery" + (A + Math.random()).replace(/\D/g, ""),
                  isReady: !0,
                  error: function(e) {
                      throw new Error(e)
                  },
                  noop: function() {},
                  isPlainObject: function(e) {
                      var t, i;
                      return !(!e || "[object Object]" !== f.call(e)) && (t = o(e), !t || (i = p.call(t, "constructor") && t.constructor, "function" === typeof i && g.call(i) === x))
                  },
                  isEmptyObject: function(e) {
                      var t;
                      for (t in e) return !1;
                      return !0
                  },
                  globalEval: function(e, t, i) {
                      k(e, {
                          nonce: t && t.nonce
                      }, i)
                  },
                  each: function(e, t) {
                      var i, n = 0;
                      if (T(e)) {
                          for (i = e.length; n < i; n++)
                              if (!1 === t.call(e[n], n, e[n])) break
                      } else
                          for (n in e)
                              if (!1 === t.call(e[n], n, e[n])) break;
                      return e
                  },
                  makeArray: function(e, t) {
                      var i = t || [];
                      return null != e && (T(Object(e)) ? C.merge(i, "string" === typeof e ? [e] : e) : h.call(i, e)), i
                  },
                  inArray: function(e, t, i) {
                      return null == t ? -1 : u.call(t, e, i)
                  },
                  merge: function(e, t) {
                      for (var i = +t.length, n = 0, a = e.length; n < i; n++) e[a++] = t[n];
                      return e.length = a, e
                  },
                  grep: function(e, t, i) {
                      for (var n, a = [], r = 0, s = e.length, o = !i; r < s; r++) n = !t(e[r], r), n !== o && a.push(e[r]);
                      return a
                  },
                  map: function(e, t, i) {
                      var n, a, r = 0,
                          s = [];
                      if (T(e))
                          for (n = e.length; r < n; r++) a = t(e[r], r, i), null != a && s.push(a);
                      else
                          for (r in e) a = t(e[r], r, i), null != a && s.push(a);
                      return c(s)
                  },
                  guid: 1,
                  support: v
              }), "function" === typeof Symbol && (C.fn[Symbol.iterator] = s[Symbol.iterator]), C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), (function(e, t) {
                  d["[object " + t + "]"] = t.toLowerCase()
              }));
              var E =
                  /*!
                   * Sizzle CSS Selector Engine v2.3.6
                   * https://sizzlejs.com/
                   *
                   * Copyright JS Foundation and other contributors
                   * Released under the MIT license
                   * https://js.foundation/
                   *
                   * Date: 2021-02-16
                   */
                  function(e) {
                      var t, i, n, a, r, s, o, l, c, h, u, d, f, p, g, x, v, m, b, y = "sizzle" + 1 * new Date,
                          w = e.document,
                          k = 0,
                          S = 0,
                          A = le(),
                          C = le(),
                          T = le(),
                          E = le(),
                          L = function(e, t) {
                              return e === t && (u = !0), 0
                          },
                          P = {}.hasOwnProperty,
                          M = [],
                          I = M.pop,
                          R = M.push,
                          _ = M.push,
                          O = M.slice,
                          F = function(e, t) {
                              for (var i = 0, n = e.length; i < n; i++)
                                  if (e[i] === t) return i;
                              return -1
                          },
                          N = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                          z = "[\\x20\\t\\r\\n\\f]",
                          D = "(?:\\\\[\\da-fA-F]{1,6}" + z + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                          H = "\\[" + z + "*(" + D + ")(?:" + z + "*([*^$|!~]?=)" + z + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + D + "))|)" + z + "*\\]",
                          X = ":(" + D + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + H + ")*)|.*)\\)|)",
                          Y = new RegExp(z + "+", "g"),
                          B = new RegExp("^" + z + "+|((?:^|[^\\\\])(?:\\\\.)*)" + z + "+$", "g"),
                          j = new RegExp("^" + z + "*," + z + "*"),
                          W = new RegExp("^" + z + "*([>+~]|" + z + ")" + z + "*"),
                          V = new RegExp(z + "|>"),
                          q = new RegExp(X),
                          G = new RegExp("^" + D + "$"),
                          U = {
                              ID: new RegExp("^#(" + D + ")"),
                              CLASS: new RegExp("^\\.(" + D + ")"),
                              TAG: new RegExp("^(" + D + "|[*])"),
                              ATTR: new RegExp("^" + H),
                              PSEUDO: new RegExp("^" + X),
                              CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + z + "*(even|odd|(([+-]|)(\\d*)n|)" + z + "*(?:([+-]|)" + z + "*(\\d+)|))" + z + "*\\)|)", "i"),
                              bool: new RegExp("^(?:" + N + ")$", "i"),
                              needsContext: new RegExp("^" + z + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + z + "*((?:-\\d)?\\d*)" + z + "*\\)|)(?=[^-]|$)", "i")
                          },
                          $ = /HTML$/i,
                          Z = /^(?:input|select|textarea|button)$/i,
                          J = /^h\d$/i,
                          K = /^[^{]+\{\s*\[native \w/,
                          Q = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                          ee = /[+~]/,
                          te = new RegExp("\\\\[\\da-fA-F]{1,6}" + z + "?|\\\\([^\\r\\n\\f])", "g"),
                          ie = function(e, t) {
                              var i = "0x" + e.slice(1) - 65536;
                              return t || (i < 0 ? String.fromCharCode(i + 65536) : String.fromCharCode(i >> 10 | 55296, 1023 & i | 56320))
                          },
                          ne = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                          ae = function(e, t) {
                              return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
                          },
                          re = function() {
                              d()
                          },
                          se = ye((function(e) {
                              return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase()
                          }), {
                              dir: "parentNode",
                              next: "legend"
                          });
                      try {
                          _.apply(M = O.call(w.childNodes), w.childNodes), M[w.childNodes.length].nodeType
                      } catch (Ee) {
                          _ = {
                              apply: M.length ? function(e, t) {
                                  R.apply(e, O.call(t))
                              } : function(e, t) {
                                  var i = e.length,
                                      n = 0;
                                  while (e[i++] = t[n++]);
                                  e.length = i - 1
                              }
                          }
                      }

                      function oe(e, t, n, a) {
                          var r, o, c, h, u, p, v, m = t && t.ownerDocument,
                              w = t ? t.nodeType : 9;
                          if (n = n || [], "string" !== typeof e || !e || 1 !== w && 9 !== w && 11 !== w) return n;
                          if (!a && (d(t), t = t || f, g)) {
                              if (11 !== w && (u = Q.exec(e)))
                                  if (r = u[1]) {
                                      if (9 === w) {
                                          if (!(c = t.getElementById(r))) return n;
                                          if (c.id === r) return n.push(c), n
                                      } else if (m && (c = m.getElementById(r)) && b(t, c) && c.id === r) return n.push(c), n
                                  } else {
                                      if (u[2]) return _.apply(n, t.getElementsByTagName(e)), n;
                                      if ((r = u[3]) && i.getElementsByClassName && t.getElementsByClassName) return _.apply(n, t.getElementsByClassName(r)), n
                                  } if (i.qsa && !E[e + " "] && (!x || !x.test(e)) && (1 !== w || "object" !== t.nodeName.toLowerCase())) {
                                  if (v = e, m = t, 1 === w && (V.test(e) || W.test(e))) {
                                      m = ee.test(e) && ve(t.parentNode) || t, m === t && i.scope || ((h = t.getAttribute("id")) ? h = h.replace(ne, ae) : t.setAttribute("id", h = y)), p = s(e), o = p.length;
                                      while (o--) p[o] = (h ? "#" + h : ":scope") + " " + be(p[o]);
                                      v = p.join(",")
                                  }
                                  try {
                                      return _.apply(n, m.querySelectorAll(v)), n
                                  } catch (k) {
                                      E(e, !0)
                                  } finally {
                                      h === y && t.removeAttribute("id")
                                  }
                              }
                          }
                          return l(e.replace(B, "$1"), t, n, a)
                      }

                      function le() {
                          var e = [];

                          function t(i, a) {
                              return e.push(i + " ") > n.cacheLength && delete t[e.shift()], t[i + " "] = a
                          }
                          return t
                      }

                      function ce(e) {
                          return e[y] = !0, e
                      }

                      function he(e) {
                          var t = f.createElement("fieldset");
                          try {
                              return !!e(t)
                          } catch (Ee) {
                              return !1
                          } finally {
                              t.parentNode && t.parentNode.removeChild(t), t = null
                          }
                      }

                      function ue(e, t) {
                          var i = e.split("|"),
                              a = i.length;
                          while (a--) n.attrHandle[i[a]] = t
                      }

                      function de(e, t) {
                          var i = t && e,
                              n = i && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
                          if (n) return n;
                          if (i)
                              while (i = i.nextSibling)
                                  if (i === t) return -1;
                          return e ? 1 : -1
                      }

                      function fe(e) {
                          return function(t) {
                              var i = t.nodeName.toLowerCase();
                              return "input" === i && t.type === e
                          }
                      }

                      function pe(e) {
                          return function(t) {
                              var i = t.nodeName.toLowerCase();
                              return ("input" === i || "button" === i) && t.type === e
                          }
                      }

                      function ge(e) {
                          return function(t) {
                              return "form" in t ? t.parentNode && !1 === t.disabled ? "label" in t ? "label" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && se(t) === e : t.disabled === e : "label" in t && t.disabled === e
                          }
                      }

                      function xe(e) {
                          return ce((function(t) {
                              return t = +t, ce((function(i, n) {
                                  var a, r = e([], i.length, t),
                                      s = r.length;
                                  while (s--) i[a = r[s]] && (i[a] = !(n[a] = i[a]))
                              }))
                          }))
                      }

                      function ve(e) {
                          return e && "undefined" !== typeof e.getElementsByTagName && e
                      }
                      for (t in i = oe.support = {}, r = oe.isXML = function(e) {
                              var t = e && e.namespaceURI,
                                  i = e && (e.ownerDocument || e).documentElement;
                              return !$.test(t || i && i.nodeName || "HTML")
                          }, d = oe.setDocument = function(e) {
                              var t, a, s = e ? e.ownerDocument || e : w;
                              return s != f && 9 === s.nodeType && s.documentElement ? (f = s, p = f.documentElement, g = !r(f), w != f && (a = f.defaultView) && a.top !== a && (a.addEventListener ? a.addEventListener("unload", re, !1) : a.attachEvent && a.attachEvent("onunload", re)), i.scope = he((function(e) {
                                  return p.appendChild(e).appendChild(f.createElement("div")), "undefined" !== typeof e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length
                              })), i.attributes = he((function(e) {
                                  return e.className = "i", !e.getAttribute("className")
                              })), i.getElementsByTagName = he((function(e) {
                                  return e.appendChild(f.createComment("")), !e.getElementsByTagName("*").length
                              })), i.getElementsByClassName = K.test(f.getElementsByClassName), i.getById = he((function(e) {
                                  return p.appendChild(e).id = y, !f.getElementsByName || !f.getElementsByName(y).length
                              })), i.getById ? (n.filter["ID"] = function(e) {
                                  var t = e.replace(te, ie);
                                  return function(e) {
                                      return e.getAttribute("id") === t
                                  }
                              }, n.find["ID"] = function(e, t) {
                                  if ("undefined" !== typeof t.getElementById && g) {
                                      var i = t.getElementById(e);
                                      return i ? [i] : []
                                  }
                              }) : (n.filter["ID"] = function(e) {
                                  var t = e.replace(te, ie);
                                  return function(e) {
                                      var i = "undefined" !== typeof e.getAttributeNode && e.getAttributeNode("id");
                                      return i && i.value === t
                                  }
                              }, n.find["ID"] = function(e, t) {
                                  if ("undefined" !== typeof t.getElementById && g) {
                                      var i, n, a, r = t.getElementById(e);
                                      if (r) {
                                          if (i = r.getAttributeNode("id"), i && i.value === e) return [r];
                                          a = t.getElementsByName(e), n = 0;
                                          while (r = a[n++])
                                              if (i = r.getAttributeNode("id"), i && i.value === e) return [r]
                                      }
                                      return []
                                  }
                              }), n.find["TAG"] = i.getElementsByTagName ? function(e, t) {
                                  return "undefined" !== typeof t.getElementsByTagName ? t.getElementsByTagName(e) : i.qsa ? t.querySelectorAll(e) : void 0
                              } : function(e, t) {
                                  var i, n = [],
                                      a = 0,
                                      r = t.getElementsByTagName(e);
                                  if ("*" === e) {
                                      while (i = r[a++]) 1 === i.nodeType && n.push(i);
                                      return n
                                  }
                                  return r
                              }, n.find["CLASS"] = i.getElementsByClassName && function(e, t) {
                                  if ("undefined" !== typeof t.getElementsByClassName && g) return t.getElementsByClassName(e)
                              }, v = [], x = [], (i.qsa = K.test(f.querySelectorAll)) && (he((function(e) {
                                  var t;
                                  p.appendChild(e).innerHTML = "<a id='" + y + "'></a><select id='" + y + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && x.push("[*^$]=" + z + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || x.push("\\[" + z + "*(?:value|" + N + ")"), e.querySelectorAll("[id~=" + y + "-]").length || x.push("~="), t = f.createElement("input"), t.setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || x.push("\\[" + z + "*name" + z + "*=" + z + "*(?:''|\"\")"), e.querySelectorAll(":checked").length || x.push(":checked"), e.querySelectorAll("a#" + y + "+*").length || x.push(".#.+[+~]"), e.querySelectorAll("\\\f"), x.push("[\\r\\n\\f]")
                              })), he((function(e) {
                                  e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                                  var t = f.createElement("input");
                                  t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && x.push("name" + z + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && x.push(":enabled", ":disabled"), p.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && x.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), x.push(",.*:")
                              }))), (i.matchesSelector = K.test(m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.oMatchesSelector || p.msMatchesSelector)) && he((function(e) {
                                  i.disconnectedMatch = m.call(e, "*"), m.call(e, "[s!='']:x"), v.push("!=", X)
                              })), x = x.length && new RegExp(x.join("|")), v = v.length && new RegExp(v.join("|")), t = K.test(p.compareDocumentPosition), b = t || K.test(p.contains) ? function(e, t) {
                                  var i = 9 === e.nodeType ? e.documentElement : e,
                                      n = t && t.parentNode;
                                  return e === n || !(!n || 1 !== n.nodeType || !(i.contains ? i.contains(n) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(n)))
                              } : function(e, t) {
                                  if (t)
                                      while (t = t.parentNode)
                                          if (t === e) return !0;
                                  return !1
                              }, L = t ? function(e, t) {
                                  if (e === t) return u = !0, 0;
                                  var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                                  return n || (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1, 1 & n || !i.sortDetached && t.compareDocumentPosition(e) === n ? e == f || e.ownerDocument == w && b(w, e) ? -1 : t == f || t.ownerDocument == w && b(w, t) ? 1 : h ? F(h, e) - F(h, t) : 0 : 4 & n ? -1 : 1)
                              } : function(e, t) {
                                  if (e === t) return u = !0, 0;
                                  var i, n = 0,
                                      a = e.parentNode,
                                      r = t.parentNode,
                                      s = [e],
                                      o = [t];
                                  if (!a || !r) return e == f ? -1 : t == f ? 1 : a ? -1 : r ? 1 : h ? F(h, e) - F(h, t) : 0;
                                  if (a === r) return de(e, t);
                                  i = e;
                                  while (i = i.parentNode) s.unshift(i);
                                  i = t;
                                  while (i = i.parentNode) o.unshift(i);
                                  while (s[n] === o[n]) n++;
                                  return n ? de(s[n], o[n]) : s[n] == w ? -1 : o[n] == w ? 1 : 0
                              }, f) : f
                          }, oe.matches = function(e, t) {
                              return oe(e, null, null, t)
                          }, oe.matchesSelector = function(e, t) {
                              if (d(e), i.matchesSelector && g && !E[t + " "] && (!v || !v.test(t)) && (!x || !x.test(t))) try {
                                  var n = m.call(e, t);
                                  if (n || i.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n
                              } catch (Ee) {
                                  E(t, !0)
                              }
                              return oe(t, f, null, [e]).length > 0
                          }, oe.contains = function(e, t) {
                              return (e.ownerDocument || e) != f && d(e), b(e, t)
                          }, oe.attr = function(e, t) {
                              (e.ownerDocument || e) != f && d(e);
                              var a = n.attrHandle[t.toLowerCase()],
                                  r = a && P.call(n.attrHandle, t.toLowerCase()) ? a(e, t, !g) : void 0;
                              return void 0 !== r ? r : i.attributes || !g ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null
                          }, oe.escape = function(e) {
                              return (e + "").replace(ne, ae)
                          }, oe.error = function(e) {
                              throw new Error("Syntax error, unrecognized expression: " + e)
                          }, oe.uniqueSort = function(e) {
                              var t, n = [],
                                  a = 0,
                                  r = 0;
                              if (u = !i.detectDuplicates, h = !i.sortStable && e.slice(0), e.sort(L), u) {
                                  while (t = e[r++]) t === e[r] && (a = n.push(r));
                                  while (a--) e.splice(n[a], 1)
                              }
                              return h = null, e
                          }, a = oe.getText = function(e) {
                              var t, i = "",
                                  n = 0,
                                  r = e.nodeType;
                              if (r) {
                                  if (1 === r || 9 === r || 11 === r) {
                                      if ("string" === typeof e.textContent) return e.textContent;
                                      for (e = e.firstChild; e; e = e.nextSibling) i += a(e)
                                  } else if (3 === r || 4 === r) return e.nodeValue
                              } else
                                  while (t = e[n++]) i += a(t);
                              return i
                          }, n = oe.selectors = {
                              cacheLength: 50,
                              createPseudo: ce,
                              match: U,
                              attrHandle: {},
                              find: {},
                              relative: {
                                  ">": {
                                      dir: "parentNode",
                                      first: !0
                                  },
                                  " ": {
                                      dir: "parentNode"
                                  },
                                  "+": {
                                      dir: "previousSibling",
                                      first: !0
                                  },
                                  "~": {
                                      dir: "previousSibling"
                                  }
                              },
                              preFilter: {
                                  ATTR: function(e) {
                                      return e[1] = e[1].replace(te, ie), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ie), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                                  },
                                  CHILD: function(e) {
                                      return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || oe.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && oe.error(e[0]), e
                                  },
                                  PSEUDO: function(e) {
                                      var t, i = !e[6] && e[2];
                                      return U["CHILD"].test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : i && q.test(i) && (t = s(i, !0)) && (t = i.indexOf(")", i.length - t) - i.length) && (e[0] = e[0].slice(0, t), e[2] = i.slice(0, t)), e.slice(0, 3))
                                  }
                              },
                              filter: {
                                  TAG: function(e) {
                                      var t = e.replace(te, ie).toLowerCase();
                                      return "*" === e ? function() {
                                          return !0
                                      } : function(e) {
                                          return e.nodeName && e.nodeName.toLowerCase() === t
                                      }
                                  },
                                  CLASS: function(e) {
                                      var t = A[e + " "];
                                      return t || (t = new RegExp("(^|" + z + ")" + e + "(" + z + "|$)")) && A(e, (function(e) {
                                          return t.test("string" === typeof e.className && e.className || "undefined" !== typeof e.getAttribute && e.getAttribute("class") || "")
                                      }))
                                  },
                                  ATTR: function(e, t, i) {
                                      return function(n) {
                                          var a = oe.attr(n, e);
                                          return null == a ? "!=" === t : !t || (a += "", "=" === t ? a === i : "!=" === t ? a !== i : "^=" === t ? i && 0 === a.indexOf(i) : "*=" === t ? i && a.indexOf(i) > -1 : "$=" === t ? i && a.slice(-i.length) === i : "~=" === t ? (" " + a.replace(Y, " ") + " ").indexOf(i) > -1 : "|=" === t && (a === i || a.slice(0, i.length + 1) === i + "-"))
                                      }
                                  },
                                  CHILD: function(e, t, i, n, a) {
                                      var r = "nth" !== e.slice(0, 3),
                                          s = "last" !== e.slice(-4),
                                          o = "of-type" === t;
                                      return 1 === n && 0 === a ? function(e) {
                                          return !!e.parentNode
                                      } : function(t, i, l) {
                                          var c, h, u, d, f, p, g = r !== s ? "nextSibling" : "previousSibling",
                                              x = t.parentNode,
                                              v = o && t.nodeName.toLowerCase(),
                                              m = !l && !o,
                                              b = !1;
                                          if (x) {
                                              if (r) {
                                                  while (g) {
                                                      d = t;
                                                      while (d = d[g])
                                                          if (o ? d.nodeName.toLowerCase() === v : 1 === d.nodeType) return !1;
                                                      p = g = "only" === e && !p && "nextSibling"
                                                  }
                                                  return !0
                                              }
                                              if (p = [s ? x.firstChild : x.lastChild], s && m) {
                                                  d = x, u = d[y] || (d[y] = {}), h = u[d.uniqueID] || (u[d.uniqueID] = {}), c = h[e] || [], f = c[0] === k && c[1], b = f && c[2], d = f && x.childNodes[f];
                                                  while (d = ++f && d && d[g] || (b = f = 0) || p.pop())
                                                      if (1 === d.nodeType && ++b && d === t) {
                                                          h[e] = [k, f, b];
                                                          break
                                                      }
                                              } else if (m && (d = t, u = d[y] || (d[y] = {}), h = u[d.uniqueID] || (u[d.uniqueID] = {}), c = h[e] || [], f = c[0] === k && c[1], b = f), !1 === b)
                                                  while (d = ++f && d && d[g] || (b = f = 0) || p.pop())
                                                      if ((o ? d.nodeName.toLowerCase() === v : 1 === d.nodeType) && ++b && (m && (u = d[y] || (d[y] = {}), h = u[d.uniqueID] || (u[d.uniqueID] = {}), h[e] = [k, b]), d === t)) break;
                                              return b -= a, b === n || b % n === 0 && b / n >= 0
                                          }
                                      }
                                  },
                                  PSEUDO: function(e, t) {
                                      var i, a = n.pseudos[e] || n.setFilters[e.toLowerCase()] || oe.error("unsupported pseudo: " + e);
                                      return a[y] ? a(t) : a.length > 1 ? (i = [e, e, "", t], n.setFilters.hasOwnProperty(e.toLowerCase()) ? ce((function(e, i) {
                                          var n, r = a(e, t),
                                              s = r.length;
                                          while (s--) n = F(e, r[s]), e[n] = !(i[n] = r[s])
                                      })) : function(e) {
                                          return a(e, 0, i)
                                      }) : a
                                  }
                              },
                              pseudos: {
                                  not: ce((function(e) {
                                      var t = [],
                                          i = [],
                                          n = o(e.replace(B, "$1"));
                                      return n[y] ? ce((function(e, t, i, a) {
                                          var r, s = n(e, null, a, []),
                                              o = e.length;
                                          while (o--)(r = s[o]) && (e[o] = !(t[o] = r))
                                      })) : function(e, a, r) {
                                          return t[0] = e, n(t, null, r, i), t[0] = null, !i.pop()
                                      }
                                  })),
                                  has: ce((function(e) {
                                      return function(t) {
                                          return oe(e, t).length > 0
                                      }
                                  })),
                                  contains: ce((function(e) {
                                      return e = e.replace(te, ie),
                                          function(t) {
                                              return (t.textContent || a(t)).indexOf(e) > -1
                                          }
                                  })),
                                  lang: ce((function(e) {
                                      return G.test(e || "") || oe.error("unsupported lang: " + e), e = e.replace(te, ie).toLowerCase(),
                                          function(t) {
                                              var i;
                                              do {
                                                  if (i = g ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return i = i.toLowerCase(), i === e || 0 === i.indexOf(e + "-")
                                              } while ((t = t.parentNode) && 1 === t.nodeType);
                                              return !1
                                          }
                                  })),
                                  target: function(t) {
                                      var i = e.location && e.location.hash;
                                      return i && i.slice(1) === t.id
                                  },
                                  root: function(e) {
                                      return e === p
                                  },
                                  focus: function(e) {
                                      return e === f.activeElement && (!f.hasFocus || f.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                                  },
                                  enabled: ge(!1),
                                  disabled: ge(!0),
                                  checked: function(e) {
                                      var t = e.nodeName.toLowerCase();
                                      return "input" === t && !!e.checked || "option" === t && !!e.selected
                                  },
                                  selected: function(e) {
                                      return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                                  },
                                  empty: function(e) {
                                      for (e = e.firstChild; e; e = e.nextSibling)
                                          if (e.nodeType < 6) return !1;
                                      return !0
                                  },
                                  parent: function(e) {
                                      return !n.pseudos["empty"](e)
                                  },
                                  header: function(e) {
                                      return J.test(e.nodeName)
                                  },
                                  input: function(e) {
                                      return Z.test(e.nodeName)
                                  },
                                  button: function(e) {
                                      var t = e.nodeName.toLowerCase();
                                      return "input" === t && "button" === e.type || "button" === t
                                  },
                                  text: function(e) {
                                      var t;
                                      return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                                  },
                                  first: xe((function() {
                                      return [0]
                                  })),
                                  last: xe((function(e, t) {
                                      return [t - 1]
                                  })),
                                  eq: xe((function(e, t, i) {
                                      return [i < 0 ? i + t : i]
                                  })),
                                  even: xe((function(e, t) {
                                      for (var i = 0; i < t; i += 2) e.push(i);
                                      return e
                                  })),
                                  odd: xe((function(e, t) {
                                      for (var i = 1; i < t; i += 2) e.push(i);
                                      return e
                                  })),
                                  lt: xe((function(e, t, i) {
                                      for (var n = i < 0 ? i + t : i > t ? t : i; --n >= 0;) e.push(n);
                                      return e
                                  })),
                                  gt: xe((function(e, t, i) {
                                      for (var n = i < 0 ? i + t : i; ++n < t;) e.push(n);
                                      return e
                                  }))
                              }
                          }, n.pseudos["nth"] = n.pseudos["eq"], {
                              radio: !0,
                              checkbox: !0,
                              file: !0,
                              password: !0,
                              image: !0
                          }) n.pseudos[t] = fe(t);
                      for (t in {
                              submit: !0,
                              reset: !0
                          }) n.pseudos[t] = pe(t);

                      function me() {}

                      function be(e) {
                          for (var t = 0, i = e.length, n = ""; t < i; t++) n += e[t].value;
                          return n
                      }

                      function ye(e, t, i) {
                          var n = t.dir,
                              a = t.next,
                              r = a || n,
                              s = i && "parentNode" === r,
                              o = S++;
                          return t.first ? function(t, i, a) {
                              while (t = t[n])
                                  if (1 === t.nodeType || s) return e(t, i, a);
                              return !1
                          } : function(t, i, l) {
                              var c, h, u, d = [k, o];
                              if (l) {
                                  while (t = t[n])
                                      if ((1 === t.nodeType || s) && e(t, i, l)) return !0
                              } else
                                  while (t = t[n])
                                      if (1 === t.nodeType || s)
                                          if (u = t[y] || (t[y] = {}), h = u[t.uniqueID] || (u[t.uniqueID] = {}), a && a === t.nodeName.toLowerCase()) t = t[n] || t;
                                          else {
                                              if ((c = h[r]) && c[0] === k && c[1] === o) return d[2] = c[2];
                                              if (h[r] = d, d[2] = e(t, i, l)) return !0
                                          } return !1
                          }
                      }

                      function we(e) {
                          return e.length > 1 ? function(t, i, n) {
                              var a = e.length;
                              while (a--)
                                  if (!e[a](t, i, n)) return !1;
                              return !0
                          } : e[0]
                      }

                      function ke(e, t, i) {
                          for (var n = 0, a = t.length; n < a; n++) oe(e, t[n], i);
                          return i
                      }

                      function Se(e, t, i, n, a) {
                          for (var r, s = [], o = 0, l = e.length, c = null != t; o < l; o++)(r = e[o]) && (i && !i(r, n, a) || (s.push(r), c && t.push(o)));
                          return s
                      }

                      function Ae(e, t, i, n, a, r) {
                          return n && !n[y] && (n = Ae(n)), a && !a[y] && (a = Ae(a, r)), ce((function(r, s, o, l) {
                              var c, h, u, d = [],
                                  f = [],
                                  p = s.length,
                                  g = r || ke(t || "*", o.nodeType ? [o] : o, []),
                                  x = !e || !r && t ? g : Se(g, d, e, o, l),
                                  v = i ? a || (r ? e : p || n) ? [] : s : x;
                              if (i && i(x, v, o, l), n) {
                                  c = Se(v, f), n(c, [], o, l), h = c.length;
                                  while (h--)(u = c[h]) && (v[f[h]] = !(x[f[h]] = u))
                              }
                              if (r) {
                                  if (a || e) {
                                      if (a) {
                                          c = [], h = v.length;
                                          while (h--)(u = v[h]) && c.push(x[h] = u);
                                          a(null, v = [], c, l)
                                      }
                                      h = v.length;
                                      while (h--)(u = v[h]) && (c = a ? F(r, u) : d[h]) > -1 && (r[c] = !(s[c] = u))
                                  }
                              } else v = Se(v === s ? v.splice(p, v.length) : v), a ? a(null, s, v, l) : _.apply(s, v)
                          }))
                      }

                      function Ce(e) {
                          for (var t, i, a, r = e.length, s = n.relative[e[0].type], o = s || n.relative[" "], l = s ? 1 : 0, h = ye((function(e) {
                                  return e === t
                              }), o, !0), u = ye((function(e) {
                                  return F(t, e) > -1
                              }), o, !0), d = [function(e, i, n) {
                                  var a = !s && (n || i !== c) || ((t = i).nodeType ? h(e, i, n) : u(e, i, n));
                                  return t = null, a
                              }]; l < r; l++)
                              if (i = n.relative[e[l].type]) d = [ye(we(d), i)];
                              else {
                                  if (i = n.filter[e[l].type].apply(null, e[l].matches), i[y]) {
                                      for (a = ++l; a < r; a++)
                                          if (n.relative[e[a].type]) break;
                                      return Ae(l > 1 && we(d), l > 1 && be(e.slice(0, l - 1).concat({
                                          value: " " === e[l - 2].type ? "*" : ""
                                      })).replace(B, "$1"), i, l < a && Ce(e.slice(l, a)), a < r && Ce(e = e.slice(a)), a < r && be(e))
                                  }
                                  d.push(i)
                              } return we(d)
                      }

                      function Te(e, t) {
                          var i = t.length > 0,
                              a = e.length > 0,
                              r = function(r, s, o, l, h) {
                                  var u, p, x, v = 0,
                                      m = "0",
                                      b = r && [],
                                      y = [],
                                      w = c,
                                      S = r || a && n.find["TAG"]("*", h),
                                      A = k += null == w ? 1 : Math.random() || .1,
                                      C = S.length;
                                  for (h && (c = s == f || s || h); m !== C && null != (u = S[m]); m++) {
                                      if (a && u) {
                                          p = 0, s || u.ownerDocument == f || (d(u), o = !g);
                                          while (x = e[p++])
                                              if (x(u, s || f, o)) {
                                                  l.push(u);
                                                  break
                                              } h && (k = A)
                                      }
                                      i && ((u = !x && u) && v--, r && b.push(u))
                                  }
                                  if (v += m, i && m !== v) {
                                      p = 0;
                                      while (x = t[p++]) x(b, y, s, o);
                                      if (r) {
                                          if (v > 0)
                                              while (m--) b[m] || y[m] || (y[m] = I.call(l));
                                          y = Se(y)
                                      }
                                      _.apply(l, y), h && !r && y.length > 0 && v + t.length > 1 && oe.uniqueSort(l)
                                  }
                                  return h && (k = A, c = w), b
                              };
                          return i ? ce(r) : r
                      }
                      return me.prototype = n.filters = n.pseudos, n.setFilters = new me, s = oe.tokenize = function(e, t) {
                          var i, a, r, s, o, l, c, h = C[e + " "];
                          if (h) return t ? 0 : h.slice(0);
                          o = e, l = [], c = n.preFilter;
                          while (o) {
                              for (s in i && !(a = j.exec(o)) || (a && (o = o.slice(a[0].length) || o), l.push(r = [])), i = !1, (a = W.exec(o)) && (i = a.shift(), r.push({
                                      value: i,
                                      type: a[0].replace(B, " ")
                                  }), o = o.slice(i.length)), n.filter) !(a = U[s].exec(o)) || c[s] && !(a = c[s](a)) || (i = a.shift(), r.push({
                                  value: i,
                                  type: s,
                                  matches: a
                              }), o = o.slice(i.length));
                              if (!i) break
                          }
                          return t ? o.length : o ? oe.error(e) : C(e, l).slice(0)
                      }, o = oe.compile = function(e, t) {
                          var i, n = [],
                              a = [],
                              r = T[e + " "];
                          if (!r) {
                              t || (t = s(e)), i = t.length;
                              while (i--) r = Ce(t[i]), r[y] ? n.push(r) : a.push(r);
                              r = T(e, Te(a, n)), r.selector = e
                          }
                          return r
                      }, l = oe.select = function(e, t, i, a) {
                          var r, l, c, h, u, d = "function" === typeof e && e,
                              f = !a && s(e = d.selector || e);
                          if (i = i || [], 1 === f.length) {
                              if (l = f[0] = f[0].slice(0), l.length > 2 && "ID" === (c = l[0]).type && 9 === t.nodeType && g && n.relative[l[1].type]) {
                                  if (t = (n.find["ID"](c.matches[0].replace(te, ie), t) || [])[0], !t) return i;
                                  d && (t = t.parentNode), e = e.slice(l.shift().value.length)
                              }
                              r = U["needsContext"].test(e) ? 0 : l.length;
                              while (r--) {
                                  if (c = l[r], n.relative[h = c.type]) break;
                                  if ((u = n.find[h]) && (a = u(c.matches[0].replace(te, ie), ee.test(l[0].type) && ve(t.parentNode) || t))) {
                                      if (l.splice(r, 1), e = a.length && be(l), !e) return _.apply(i, a), i;
                                      break
                                  }
                              }
                          }
                          return (d || o(e, f))(a, t, !g, i, !t || ee.test(e) && ve(t.parentNode) || t), i
                      }, i.sortStable = y.split("").sort(L).join("") === y, i.detectDuplicates = !!u, d(), i.sortDetached = he((function(e) {
                          return 1 & e.compareDocumentPosition(f.createElement("fieldset"))
                      })), he((function(e) {
                          return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
                      })) || ue("type|href|height|width", (function(e, t, i) {
                          if (!i) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
                      })), i.attributes && he((function(e) {
                          return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
                      })) || ue("value", (function(e, t, i) {
                          if (!i && "input" === e.nodeName.toLowerCase()) return e.defaultValue
                      })), he((function(e) {
                          return null == e.getAttribute("disabled")
                      })) || ue(N, (function(e, t, i) {
                          var n;
                          if (!i) return !0 === e[t] ? t.toLowerCase() : (n = e.getAttributeNode(t)) && n.specified ? n.value : null
                      })), oe
                  }(a);
              C.find = E, C.expr = E.selectors, C.expr[":"] = C.expr.pseudos, C.uniqueSort = C.unique = E.uniqueSort, C.text = E.getText, C.isXMLDoc = E.isXML, C.contains = E.contains, C.escapeSelector = E.escape;
              var L = function(e, t, i) {
                      var n = [],
                          a = void 0 !== i;
                      while ((e = e[t]) && 9 !== e.nodeType)
                          if (1 === e.nodeType) {
                              if (a && C(e).is(i)) break;
                              n.push(e)
                          } return n
                  },
                  P = function(e, t) {
                      for (var i = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && i.push(e);
                      return i
                  },
                  M = C.expr.match.needsContext;

              function I(e, t) {
                  return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
              }
              var R = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

              function _(e, t, i) {
                  return m(t) ? C.grep(e, (function(e, n) {
                      return !!t.call(e, n, e) !== i
                  })) : t.nodeType ? C.grep(e, (function(e) {
                      return e === t !== i
                  })) : "string" !== typeof t ? C.grep(e, (function(e) {
                      return u.call(t, e) > -1 !== i
                  })) : C.filter(t, e, i)
              }
              C.filter = function(e, t, i) {
                  var n = t[0];
                  return i && (e = ":not(" + e + ")"), 1 === t.length && 1 === n.nodeType ? C.find.matchesSelector(n, e) ? [n] : [] : C.find.matches(e, C.grep(t, (function(e) {
                      return 1 === e.nodeType
                  })))
              }, C.fn.extend({
                  find: function(e) {
                      var t, i, n = this.length,
                          a = this;
                      if ("string" !== typeof e) return this.pushStack(C(e).filter((function() {
                          for (t = 0; t < n; t++)
                              if (C.contains(a[t], this)) return !0
                      })));
                      for (i = this.pushStack([]), t = 0; t < n; t++) C.find(e, a[t], i);
                      return n > 1 ? C.uniqueSort(i) : i
                  },
                  filter: function(e) {
                      return this.pushStack(_(this, e || [], !1))
                  },
                  not: function(e) {
                      return this.pushStack(_(this, e || [], !0))
                  },
                  is: function(e) {
                      return !!_(this, "string" === typeof e && M.test(e) ? C(e) : e || [], !1).length
                  }
              });
              var O, F = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
                  N = C.fn.init = function(e, t, i) {
                      var n, a;
                      if (!e) return this;
                      if (i = i || O, "string" === typeof e) {
                          if (n = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : F.exec(e), !n || !n[1] && t) return !t || t.jquery ? (t || i).find(e) : this.constructor(t).find(e);
                          if (n[1]) {
                              if (t = t instanceof C ? t[0] : t, C.merge(this, C.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : y, !0)), R.test(n[1]) && C.isPlainObject(t))
                                  for (n in t) m(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
                              return this
                          }
                          return a = y.getElementById(n[2]), a && (this[0] = a, this.length = 1), this
                      }
                      return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== i.ready ? i.ready(e) : e(C) : C.makeArray(e, this)
                  };
              N.prototype = C.fn, O = C(y);
              var z = /^(?:parents|prev(?:Until|All))/,
                  D = {
                      children: !0,
                      contents: !0,
                      next: !0,
                      prev: !0
                  };

              function H(e, t) {
                  while ((e = e[t]) && 1 !== e.nodeType);
                  return e
              }
              C.fn.extend({
                  has: function(e) {
                      var t = C(e, this),
                          i = t.length;
                      return this.filter((function() {
                          for (var e = 0; e < i; e++)
                              if (C.contains(this, t[e])) return !0
                      }))
                  },
                  closest: function(e, t) {
                      var i, n = 0,
                          a = this.length,
                          r = [],
                          s = "string" !== typeof e && C(e);
                      if (!M.test(e))
                          for (; n < a; n++)
                              for (i = this[n]; i && i !== t; i = i.parentNode)
                                  if (i.nodeType < 11 && (s ? s.index(i) > -1 : 1 === i.nodeType && C.find.matchesSelector(i, e))) {
                                      r.push(i);
                                      break
                                  } return this.pushStack(r.length > 1 ? C.uniqueSort(r) : r)
                  },
                  index: function(e) {
                      return e ? "string" === typeof e ? u.call(C(e), this[0]) : u.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                  },
                  add: function(e, t) {
                      return this.pushStack(C.uniqueSort(C.merge(this.get(), C(e, t))))
                  },
                  addBack: function(e) {
                      return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
                  }
              }), C.each({
                  parent: function(e) {
                      var t = e.parentNode;
                      return t && 11 !== t.nodeType ? t : null
                  },
                  parents: function(e) {
                      return L(e, "parentNode")
                  },
                  parentsUntil: function(e, t, i) {
                      return L(e, "parentNode", i)
                  },
                  next: function(e) {
                      return H(e, "nextSibling")
                  },
                  prev: function(e) {
                      return H(e, "previousSibling")
                  },
                  nextAll: function(e) {
                      return L(e, "nextSibling")
                  },
                  prevAll: function(e) {
                      return L(e, "previousSibling")
                  },
                  nextUntil: function(e, t, i) {
                      return L(e, "nextSibling", i)
                  },
                  prevUntil: function(e, t, i) {
                      return L(e, "previousSibling", i)
                  },
                  siblings: function(e) {
                      return P((e.parentNode || {}).firstChild, e)
                  },
                  children: function(e) {
                      return P(e.firstChild)
                  },
                  contents: function(e) {
                      return null != e.contentDocument && o(e.contentDocument) ? e.contentDocument : (I(e, "template") && (e = e.content || e), C.merge([], e.childNodes))
                  }
              }, (function(e, t) {
                  C.fn[e] = function(i, n) {
                      var a = C.map(this, t, i);
                      return "Until" !== e.slice(-5) && (n = i), n && "string" === typeof n && (a = C.filter(n, a)), this.length > 1 && (D[e] || C.uniqueSort(a), z.test(e) && a.reverse()), this.pushStack(a)
                  }
              }));
              var X = /[^\x20\t\r\n\f]+/g;

              function Y(e) {
                  var t = {};
                  return C.each(e.match(X) || [], (function(e, i) {
                      t[i] = !0
                  })), t
              }

              function B(e) {
                  return e
              }

              function j(e) {
                  throw e
              }

              function W(e, t, i, n) {
                  var a;
                  try {
                      e && m(a = e.promise) ? a.call(e).done(t).fail(i) : e && m(a = e.then) ? a.call(e, t, i) : t.apply(void 0, [e].slice(n))
                  } catch (e) {
                      i.apply(void 0, [e])
                  }
              }
              C.Callbacks = function(e) {
                  e = "string" === typeof e ? Y(e) : C.extend({}, e);
                  var t, i, n, a, r = [],
                      s = [],
                      o = -1,
                      l = function() {
                          for (a = a || e.once, n = t = !0; s.length; o = -1) {
                              i = s.shift();
                              while (++o < r.length) !1 === r[o].apply(i[0], i[1]) && e.stopOnFalse && (o = r.length, i = !1)
                          }
                          e.memory || (i = !1), t = !1, a && (r = i ? [] : "")
                      },
                      c = {
                          add: function() {
                              return r && (i && !t && (o = r.length - 1, s.push(i)), function t(i) {
                                  C.each(i, (function(i, n) {
                                      m(n) ? e.unique && c.has(n) || r.push(n) : n && n.length && "string" !== S(n) && t(n)
                                  }))
                              }(arguments), i && !t && l()), this
                          },
                          remove: function() {
                              return C.each(arguments, (function(e, t) {
                                  var i;
                                  while ((i = C.inArray(t, r, i)) > -1) r.splice(i, 1), i <= o && o--
                              })), this
                          },
                          has: function(e) {
                              return e ? C.inArray(e, r) > -1 : r.length > 0
                          },
                          empty: function() {
                              return r && (r = []), this
                          },
                          disable: function() {
                              return a = s = [], r = i = "", this
                          },
                          disabled: function() {
                              return !r
                          },
                          lock: function() {
                              return a = s = [], i || t || (r = i = ""), this
                          },
                          locked: function() {
                              return !!a
                          },
                          fireWith: function(e, i) {
                              return a || (i = i || [], i = [e, i.slice ? i.slice() : i], s.push(i), t || l()), this
                          },
                          fire: function() {
                              return c.fireWith(this, arguments), this
                          },
                          fired: function() {
                              return !!n
                          }
                      };
                  return c
              }, C.extend({
                  Deferred: function(e) {
                      var t = [
                              ["notify", "progress", C.Callbacks("memory"), C.Callbacks("memory"), 2],
                              ["resolve", "done", C.Callbacks("once memory"), C.Callbacks("once memory"), 0, "resolved"],
                              ["reject", "fail", C.Callbacks("once memory"), C.Callbacks("once memory"), 1, "rejected"]
                          ],
                          i = "pending",
                          n = {
                              state: function() {
                                  return i
                              },
                              always: function() {
                                  return r.done(arguments).fail(arguments), this
                              },
                              catch: function(e) {
                                  return n.then(null, e)
                              },
                              pipe: function() {
                                  var e = arguments;
                                  return C.Deferred((function(i) {
                                      C.each(t, (function(t, n) {
                                          var a = m(e[n[4]]) && e[n[4]];
                                          r[n[1]]((function() {
                                              var e = a && a.apply(this, arguments);
                                              e && m(e.promise) ? e.promise().progress(i.notify).done(i.resolve).fail(i.reject) : i[n[0] + "With"](this, a ? [e] : arguments)
                                          }))
                                      })), e = null
                                  })).promise()
                              },
                              then: function(e, i, n) {
                                  var r = 0;

                                  function s(e, t, i, n) {
                                      return function() {
                                          var o = this,
                                              l = arguments,
                                              c = function() {
                                                  var a, c;
                                                  if (!(e < r)) {
                                                      if (a = i.apply(o, l), a === t.promise()) throw new TypeError("Thenable self-resolution");
                                                      c = a && ("object" === typeof a || "function" === typeof a) && a.then, m(c) ? n ? c.call(a, s(r, t, B, n), s(r, t, j, n)) : (r++, c.call(a, s(r, t, B, n), s(r, t, j, n), s(r, t, B, t.notifyWith))) : (i !== B && (o = void 0, l = [a]), (n || t.resolveWith)(o, l))
                                                  }
                                              },
                                              h = n ? c : function() {
                                                  try {
                                                      c()
                                                  } catch (n) {
                                                      C.Deferred.exceptionHook && C.Deferred.exceptionHook(n, h.stackTrace), e + 1 >= r && (i !== j && (o = void 0, l = [n]), t.rejectWith(o, l))
                                                  }
                                              };
                                          e ? h() : (C.Deferred.getStackHook && (h.stackTrace = C.Deferred.getStackHook()), a.setTimeout(h))
                                      }
                                  }
                                  return C.Deferred((function(a) {
                                      t[0][3].add(s(0, a, m(n) ? n : B, a.notifyWith)), t[1][3].add(s(0, a, m(e) ? e : B)), t[2][3].add(s(0, a, m(i) ? i : j))
                                  })).promise()
                              },
                              promise: function(e) {
                                  return null != e ? C.extend(e, n) : n
                              }
                          },
                          r = {};
                      return C.each(t, (function(e, a) {
                          var s = a[2],
                              o = a[5];
                          n[a[1]] = s.add, o && s.add((function() {
                              i = o
                          }), t[3 - e][2].disable, t[3 - e][3].disable, t[0][2].lock, t[0][3].lock), s.add(a[3].fire), r[a[0]] = function() {
                              return r[a[0] + "With"](this === r ? void 0 : this, arguments), this
                          }, r[a[0] + "With"] = s.fireWith
                      })), n.promise(r), e && e.call(r, r), r
                  },
                  when: function(e) {
                      var t = arguments.length,
                          i = t,
                          n = Array(i),
                          a = l.call(arguments),
                          r = C.Deferred(),
                          s = function(e) {
                              return function(i) {
                                  n[e] = this, a[e] = arguments.length > 1 ? l.call(arguments) : i, --t || r.resolveWith(n, a)
                              }
                          };
                      if (t <= 1 && (W(e, r.done(s(i)).resolve, r.reject, !t), "pending" === r.state() || m(a[i] && a[i].then))) return r.then();
                      while (i--) W(a[i], s(i), r.reject);
                      return r.promise()
                  }
              });
              var V = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
              C.Deferred.exceptionHook = function(e, t) {
                  a.console && a.console.warn && e && V.test(e.name) && a.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
              }, C.readyException = function(e) {
                  a.setTimeout((function() {
                      throw e
                  }))
              };
              var q = C.Deferred();

              function G() {
                  y.removeEventListener("DOMContentLoaded", G), a.removeEventListener("load", G), C.ready()
              }
              C.fn.ready = function(e) {
                  return q.then(e).catch((function(e) {
                      C.readyException(e)
                  })), this
              }, C.extend({
                  isReady: !1,
                  readyWait: 1,
                  ready: function(e) {
                      (!0 === e ? --C.readyWait : C.isReady) || (C.isReady = !0, !0 !== e && --C.readyWait > 0 || q.resolveWith(y, [C]))
                  }
              }), C.ready.then = q.then, "complete" === y.readyState || "loading" !== y.readyState && !y.documentElement.doScroll ? a.setTimeout(C.ready) : (y.addEventListener("DOMContentLoaded", G), a.addEventListener("load", G));
              var U = function(e, t, i, n, a, r, s) {
                      var o = 0,
                          l = e.length,
                          c = null == i;
                      if ("object" === S(i))
                          for (o in a = !0, i) U(e, t, o, i[o], !0, r, s);
                      else if (void 0 !== n && (a = !0, m(n) || (s = !0), c && (s ? (t.call(e, n), t = null) : (c = t, t = function(e, t, i) {
                              return c.call(C(e), i)
                          })), t))
                          for (; o < l; o++) t(e[o], i, s ? n : n.call(e[o], o, t(e[o], i)));
                      return a ? e : c ? t.call(e) : l ? t(e[0], i) : r
                  },
                  $ = /^-ms-/,
                  Z = /-([a-z])/g;

              function J(e, t) {
                  return t.toUpperCase()
              }

              function K(e) {
                  return e.replace($, "ms-").replace(Z, J)
              }
              var Q = function(e) {
                  return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
              };

              function ee() {
                  this.expando = C.expando + ee.uid++
              }
              ee.uid = 1, ee.prototype = {
                  cache: function(e) {
                      var t = e[this.expando];
                      return t || (t = {}, Q(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                          value: t,
                          configurable: !0
                      }))), t
                  },
                  set: function(e, t, i) {
                      var n, a = this.cache(e);
                      if ("string" === typeof t) a[K(t)] = i;
                      else
                          for (n in t) a[K(n)] = t[n];
                      return a
                  },
                  get: function(e, t) {
                      return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][K(t)]
                  },
                  access: function(e, t, i) {
                      return void 0 === t || t && "string" === typeof t && void 0 === i ? this.get(e, t) : (this.set(e, t, i), void 0 !== i ? i : t)
                  },
                  remove: function(e, t) {
                      var i, n = e[this.expando];
                      if (void 0 !== n) {
                          if (void 0 !== t) {
                              Array.isArray(t) ? t = t.map(K) : (t = K(t), t = t in n ? [t] : t.match(X) || []), i = t.length;
                              while (i--) delete n[t[i]]
                          }(void 0 === t || C.isEmptyObject(n)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
                      }
                  },
                  hasData: function(e) {
                      var t = e[this.expando];
                      return void 0 !== t && !C.isEmptyObject(t)
                  }
              };
              var te = new ee,
                  ie = new ee,
                  ne = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                  ae = /[A-Z]/g;

              function re(e) {
                  return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : ne.test(e) ? JSON.parse(e) : e)
              }

              function se(e, t, i) {
                  var n;
                  if (void 0 === i && 1 === e.nodeType)
                      if (n = "data-" + t.replace(ae, "-$&").toLowerCase(), i = e.getAttribute(n), "string" === typeof i) {
                          try {
                              i = re(i)
                          } catch (a) {}
                          ie.set(e, t, i)
                      } else i = void 0;
                  return i
              }
              C.extend({
                  hasData: function(e) {
                      return ie.hasData(e) || te.hasData(e)
                  },
                  data: function(e, t, i) {
                      return ie.access(e, t, i)
                  },
                  removeData: function(e, t) {
                      ie.remove(e, t)
                  },
                  _data: function(e, t, i) {
                      return te.access(e, t, i)
                  },
                  _removeData: function(e, t) {
                      te.remove(e, t)
                  }
              }), C.fn.extend({
                  data: function(e, t) {
                      var i, n, a, r = this[0],
                          s = r && r.attributes;
                      if (void 0 === e) {
                          if (this.length && (a = ie.get(r), 1 === r.nodeType && !te.get(r, "hasDataAttrs"))) {
                              i = s.length;
                              while (i--) s[i] && (n = s[i].name, 0 === n.indexOf("data-") && (n = K(n.slice(5)), se(r, n, a[n])));
                              te.set(r, "hasDataAttrs", !0)
                          }
                          return a
                      }
                      return "object" === typeof e ? this.each((function() {
                          ie.set(this, e)
                      })) : U(this, (function(t) {
                          var i;
                          if (r && void 0 === t) return i = ie.get(r, e), void 0 !== i ? i : (i = se(r, e), void 0 !== i ? i : void 0);
                          this.each((function() {
                              ie.set(this, e, t)
                          }))
                      }), null, t, arguments.length > 1, null, !0)
                  },
                  removeData: function(e) {
                      return this.each((function() {
                          ie.remove(this, e)
                      }))
                  }
              }), C.extend({
                  queue: function(e, t, i) {
                      var n;
                      if (e) return t = (t || "fx") + "queue", n = te.get(e, t), i && (!n || Array.isArray(i) ? n = te.access(e, t, C.makeArray(i)) : n.push(i)), n || []
                  },
                  dequeue: function(e, t) {
                      t = t || "fx";
                      var i = C.queue(e, t),
                          n = i.length,
                          a = i.shift(),
                          r = C._queueHooks(e, t),
                          s = function() {
                              C.dequeue(e, t)
                          };
                      "inprogress" === a && (a = i.shift(), n--), a && ("fx" === t && i.unshift("inprogress"), delete r.stop, a.call(e, s, r)), !n && r && r.empty.fire()
                  },
                  _queueHooks: function(e, t) {
                      var i = t + "queueHooks";
                      return te.get(e, i) || te.access(e, i, {
                          empty: C.Callbacks("once memory").add((function() {
                              te.remove(e, [t + "queue", i])
                          }))
                      })
                  }
              }), C.fn.extend({
                  queue: function(e, t) {
                      var i = 2;
                      return "string" !== typeof e && (t = e, e = "fx", i--), arguments.length < i ? C.queue(this[0], e) : void 0 === t ? this : this.each((function() {
                          var i = C.queue(this, e, t);
                          C._queueHooks(this, e), "fx" === e && "inprogress" !== i[0] && C.dequeue(this, e)
                      }))
                  },
                  dequeue: function(e) {
                      return this.each((function() {
                          C.dequeue(this, e)
                      }))
                  },
                  clearQueue: function(e) {
                      return this.queue(e || "fx", [])
                  },
                  promise: function(e, t) {
                      var i, n = 1,
                          a = C.Deferred(),
                          r = this,
                          s = this.length,
                          o = function() {
                              --n || a.resolveWith(r, [r])
                          };
                      "string" !== typeof e && (t = e, e = void 0), e = e || "fx";
                      while (s--) i = te.get(r[s], e + "queueHooks"), i && i.empty && (n++, i.empty.add(o));
                      return o(), a.promise(t)
                  }
              });
              var oe = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                  le = new RegExp("^(?:([+-])=|)(" + oe + ")([a-z%]*)$", "i"),
                  ce = ["Top", "Right", "Bottom", "Left"],
                  he = y.documentElement,
                  ue = function(e) {
                      return C.contains(e.ownerDocument, e)
                  },
                  de = {
                      composed: !0
                  };
              he.getRootNode && (ue = function(e) {
                  return C.contains(e.ownerDocument, e) || e.getRootNode(de) === e.ownerDocument
              });
              var fe = function(e, t) {
                  return e = t || e, "none" === e.style.display || "" === e.style.display && ue(e) && "none" === C.css(e, "display")
              };

              function pe(e, t, i, n) {
                  var a, r, s = 20,
                      o = n ? function() {
                          return n.cur()
                      } : function() {
                          return C.css(e, t, "")
                      },
                      l = o(),
                      c = i && i[3] || (C.cssNumber[t] ? "" : "px"),
                      h = e.nodeType && (C.cssNumber[t] || "px" !== c && +l) && le.exec(C.css(e, t));
                  if (h && h[3] !== c) {
                      l /= 2, c = c || h[3], h = +l || 1;
                      while (s--) C.style(e, t, h + c), (1 - r) * (1 - (r = o() / l || .5)) <= 0 && (s = 0), h /= r;
                      h *= 2, C.style(e, t, h + c), i = i || []
                  }
                  return i && (h = +h || +l || 0, a = i[1] ? h + (i[1] + 1) * i[2] : +i[2], n && (n.unit = c, n.start = h, n.end = a)), a
              }
              var ge = {};

              function xe(e) {
                  var t, i = e.ownerDocument,
                      n = e.nodeName,
                      a = ge[n];
                  return a || (t = i.body.appendChild(i.createElement(n)), a = C.css(t, "display"), t.parentNode.removeChild(t), "none" === a && (a = "block"), ge[n] = a, a)
              }

              function ve(e, t) {
                  for (var i, n, a = [], r = 0, s = e.length; r < s; r++) n = e[r], n.style && (i = n.style.display, t ? ("none" === i && (a[r] = te.get(n, "display") || null, a[r] || (n.style.display = "")), "" === n.style.display && fe(n) && (a[r] = xe(n))) : "none" !== i && (a[r] = "none", te.set(n, "display", i)));
                  for (r = 0; r < s; r++) null != a[r] && (e[r].style.display = a[r]);
                  return e
              }
              C.fn.extend({
                  show: function() {
                      return ve(this, !0)
                  },
                  hide: function() {
                      return ve(this)
                  },
                  toggle: function(e) {
                      return "boolean" === typeof e ? e ? this.show() : this.hide() : this.each((function() {
                          fe(this) ? C(this).show() : C(this).hide()
                      }))
                  }
              });
              var me = /^(?:checkbox|radio)$/i,
                  be = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                  ye = /^$|^module$|\/(?:java|ecma)script/i;
              (function() {
                  var e = y.createDocumentFragment(),
                      t = e.appendChild(y.createElement("div")),
                      i = y.createElement("input");
                  i.setAttribute("type", "radio"), i.setAttribute("checked", "checked"), i.setAttribute("name", "t"), t.appendChild(i), v.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked, t.innerHTML = "<textarea>x</textarea>", v.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue, t.innerHTML = "<option></option>", v.option = !!t.lastChild
              })();
              var we = {
                  thead: [1, "<table>", "</table>"],
                  col: [2, "<table><colgroup>", "</colgroup></table>"],
                  tr: [2, "<table><tbody>", "</tbody></table>"],
                  td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                  _default: [0, "", ""]
              };

              function ke(e, t) {
                  var i;
                  return i = "undefined" !== typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" !== typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && I(e, t) ? C.merge([e], i) : i
              }

              function Se(e, t) {
                  for (var i = 0, n = e.length; i < n; i++) te.set(e[i], "globalEval", !t || te.get(t[i], "globalEval"))
              }
              we.tbody = we.tfoot = we.colgroup = we.caption = we.thead, we.th = we.td, v.option || (we.optgroup = we.option = [1, "<select multiple='multiple'>", "</select>"]);
              var Ae = /<|&#?\w+;/;

              function Ce(e, t, i, n, a) {
                  for (var r, s, o, l, c, h, u = t.createDocumentFragment(), d = [], f = 0, p = e.length; f < p; f++)
                      if (r = e[f], r || 0 === r)
                          if ("object" === S(r)) C.merge(d, r.nodeType ? [r] : r);
                          else if (Ae.test(r)) {
                      s = s || u.appendChild(t.createElement("div")), o = (be.exec(r) || ["", ""])[1].toLowerCase(), l = we[o] || we._default, s.innerHTML = l[1] + C.htmlPrefilter(r) + l[2], h = l[0];
                      while (h--) s = s.lastChild;
                      C.merge(d, s.childNodes), s = u.firstChild, s.textContent = ""
                  } else d.push(t.createTextNode(r));
                  u.textContent = "", f = 0;
                  while (r = d[f++])
                      if (n && C.inArray(r, n) > -1) a && a.push(r);
                      else if (c = ue(r), s = ke(u.appendChild(r), "script"), c && Se(s), i) {
                      h = 0;
                      while (r = s[h++]) ye.test(r.type || "") && i.push(r)
                  }
                  return u
              }
              var Te = /^([^.]*)(?:\.(.+)|)/;

              function Ee() {
                  return !0
              }

              function Le() {
                  return !1
              }

              function Pe(e, t) {
                  return e === Me() === ("focus" === t)
              }

              function Me() {
                  try {
                      return y.activeElement
                  } catch (e) {}
              }

              function Ie(e, t, i, n, a, r) {
                  var s, o;
                  if ("object" === typeof t) {
                      for (o in "string" !== typeof i && (n = n || i, i = void 0), t) Ie(e, o, i, n, t[o], r);
                      return e
                  }
                  if (null == n && null == a ? (a = i, n = i = void 0) : null == a && ("string" === typeof i ? (a = n, n = void 0) : (a = n, n = i, i = void 0)), !1 === a) a = Le;
                  else if (!a) return e;
                  return 1 === r && (s = a, a = function(e) {
                      return C().off(e), s.apply(this, arguments)
                  }, a.guid = s.guid || (s.guid = C.guid++)), e.each((function() {
                      C.event.add(this, t, a, n, i)
                  }))
              }

              function Re(e, t, i) {
                  i ? (te.set(e, t, !1), C.event.add(e, t, {
                      namespace: !1,
                      handler: function(e) {
                          var n, a, r = te.get(this, t);
                          if (1 & e.isTrigger && this[t]) {
                              if (r.length)(C.event.special[t] || {}).delegateType && e.stopPropagation();
                              else if (r = l.call(arguments), te.set(this, t, r), n = i(this, t), this[t](), a = te.get(this, t), r !== a || n ? te.set(this, t, !1) : a = {}, r !== a) return e.stopImmediatePropagation(), e.preventDefault(), a && a.value
                          } else r.length && (te.set(this, t, {
                              value: C.event.trigger(C.extend(r[0], C.Event.prototype), r.slice(1), this)
                          }), e.stopImmediatePropagation())
                      }
                  })) : void 0 === te.get(e, t) && C.event.add(e, t, Ee)
              }
              C.event = {
                  global: {},
                  add: function(e, t, i, n, a) {
                      var r, s, o, l, c, h, u, d, f, p, g, x = te.get(e);
                      if (Q(e)) {
                          i.handler && (r = i, i = r.handler, a = r.selector), a && C.find.matchesSelector(he, a), i.guid || (i.guid = C.guid++), (l = x.events) || (l = x.events = Object.create(null)), (s = x.handle) || (s = x.handle = function(t) {
                              return "undefined" !== typeof C && C.event.triggered !== t.type ? C.event.dispatch.apply(e, arguments) : void 0
                          }), t = (t || "").match(X) || [""], c = t.length;
                          while (c--) o = Te.exec(t[c]) || [], f = g = o[1], p = (o[2] || "").split(".").sort(), f && (u = C.event.special[f] || {}, f = (a ? u.delegateType : u.bindType) || f, u = C.event.special[f] || {}, h = C.extend({
                              type: f,
                              origType: g,
                              data: n,
                              handler: i,
                              guid: i.guid,
                              selector: a,
                              needsContext: a && C.expr.match.needsContext.test(a),
                              namespace: p.join(".")
                          }, r), (d = l[f]) || (d = l[f] = [], d.delegateCount = 0, u.setup && !1 !== u.setup.call(e, n, p, s) || e.addEventListener && e.addEventListener(f, s)), u.add && (u.add.call(e, h), h.handler.guid || (h.handler.guid = i.guid)), a ? d.splice(d.delegateCount++, 0, h) : d.push(h), C.event.global[f] = !0)
                      }
                  },
                  remove: function(e, t, i, n, a) {
                      var r, s, o, l, c, h, u, d, f, p, g, x = te.hasData(e) && te.get(e);
                      if (x && (l = x.events)) {
                          t = (t || "").match(X) || [""], c = t.length;
                          while (c--)
                              if (o = Te.exec(t[c]) || [], f = g = o[1], p = (o[2] || "").split(".").sort(), f) {
                                  u = C.event.special[f] || {}, f = (n ? u.delegateType : u.bindType) || f, d = l[f] || [], o = o[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), s = r = d.length;
                                  while (r--) h = d[r], !a && g !== h.origType || i && i.guid !== h.guid || o && !o.test(h.namespace) || n && n !== h.selector && ("**" !== n || !h.selector) || (d.splice(r, 1), h.selector && d.delegateCount--, u.remove && u.remove.call(e, h));
                                  s && !d.length && (u.teardown && !1 !== u.teardown.call(e, p, x.handle) || C.removeEvent(e, f, x.handle), delete l[f])
                              } else
                                  for (f in l) C.event.remove(e, f + t[c], i, n, !0);
                          C.isEmptyObject(l) && te.remove(e, "handle events")
                      }
                  },
                  dispatch: function(e) {
                      var t, i, n, a, r, s, o = new Array(arguments.length),
                          l = C.event.fix(e),
                          c = (te.get(this, "events") || Object.create(null))[l.type] || [],
                          h = C.event.special[l.type] || {};
                      for (o[0] = l, t = 1; t < arguments.length; t++) o[t] = arguments[t];
                      if (l.delegateTarget = this, !h.preDispatch || !1 !== h.preDispatch.call(this, l)) {
                          s = C.event.handlers.call(this, l, c), t = 0;
                          while ((a = s[t++]) && !l.isPropagationStopped()) {
                              l.currentTarget = a.elem, i = 0;
                              while ((r = a.handlers[i++]) && !l.isImmediatePropagationStopped()) l.rnamespace && !1 !== r.namespace && !l.rnamespace.test(r.namespace) || (l.handleObj = r, l.data = r.data, n = ((C.event.special[r.origType] || {}).handle || r.handler).apply(a.elem, o), void 0 !== n && !1 === (l.result = n) && (l.preventDefault(), l.stopPropagation()))
                          }
                          return h.postDispatch && h.postDispatch.call(this, l), l.result
                      }
                  },
                  handlers: function(e, t) {
                      var i, n, a, r, s, o = [],
                          l = t.delegateCount,
                          c = e.target;
                      if (l && c.nodeType && !("click" === e.type && e.button >= 1))
                          for (; c !== this; c = c.parentNode || this)
                              if (1 === c.nodeType && ("click" !== e.type || !0 !== c.disabled)) {
                                  for (r = [], s = {}, i = 0; i < l; i++) n = t[i], a = n.selector + " ", void 0 === s[a] && (s[a] = n.needsContext ? C(a, this).index(c) > -1 : C.find(a, this, null, [c]).length), s[a] && r.push(n);
                                  r.length && o.push({
                                      elem: c,
                                      handlers: r
                                  })
                              } return c = this, l < t.length && o.push({
                          elem: c,
                          handlers: t.slice(l)
                      }), o
                  },
                  addProp: function(e, t) {
                      Object.defineProperty(C.Event.prototype, e, {
                          enumerable: !0,
                          configurable: !0,
                          get: m(t) ? function() {
                              if (this.originalEvent) return t(this.originalEvent)
                          } : function() {
                              if (this.originalEvent) return this.originalEvent[e]
                          },
                          set: function(t) {
                              Object.defineProperty(this, e, {
                                  enumerable: !0,
                                  configurable: !0,
                                  writable: !0,
                                  value: t
                              })
                          }
                      })
                  },
                  fix: function(e) {
                      return e[C.expando] ? e : new C.Event(e)
                  },
                  special: {
                      load: {
                          noBubble: !0
                      },
                      click: {
                          setup: function(e) {
                              var t = this || e;
                              return me.test(t.type) && t.click && I(t, "input") && Re(t, "click", Ee), !1
                          },
                          trigger: function(e) {
                              var t = this || e;
                              return me.test(t.type) && t.click && I(t, "input") && Re(t, "click"), !0
                          },
                          _default: function(e) {
                              var t = e.target;
                              return me.test(t.type) && t.click && I(t, "input") && te.get(t, "click") || I(t, "a")
                          }
                      },
                      beforeunload: {
                          postDispatch: function(e) {
                              void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                          }
                      }
                  }
              }, C.removeEvent = function(e, t, i) {
                  e.removeEventListener && e.removeEventListener(t, i)
              }, C.Event = function(e, t) {
                  if (!(this instanceof C.Event)) return new C.Event(e, t);
                  e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ee : Le, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && C.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[C.expando] = !0
              }, C.Event.prototype = {
                  constructor: C.Event,
                  isDefaultPrevented: Le,
                  isPropagationStopped: Le,
                  isImmediatePropagationStopped: Le,
                  isSimulated: !1,
                  preventDefault: function() {
                      var e = this.originalEvent;
                      this.isDefaultPrevented = Ee, e && !this.isSimulated && e.preventDefault()
                  },
                  stopPropagation: function() {
                      var e = this.originalEvent;
                      this.isPropagationStopped = Ee, e && !this.isSimulated && e.stopPropagation()
                  },
                  stopImmediatePropagation: function() {
                      var e = this.originalEvent;
                      this.isImmediatePropagationStopped = Ee, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation()
                  }
              }, C.each({
                  altKey: !0,
                  bubbles: !0,
                  cancelable: !0,
                  changedTouches: !0,
                  ctrlKey: !0,
                  detail: !0,
                  eventPhase: !0,
                  metaKey: !0,
                  pageX: !0,
                  pageY: !0,
                  shiftKey: !0,
                  view: !0,
                  char: !0,
                  code: !0,
                  charCode: !0,
                  key: !0,
                  keyCode: !0,
                  button: !0,
                  buttons: !0,
                  clientX: !0,
                  clientY: !0,
                  offsetX: !0,
                  offsetY: !0,
                  pointerId: !0,
                  pointerType: !0,
                  screenX: !0,
                  screenY: !0,
                  targetTouches: !0,
                  toElement: !0,
                  touches: !0,
                  which: !0
              }, C.event.addProp), C.each({
                  focus: "focusin",
                  blur: "focusout"
              }, (function(e, t) {
                  C.event.special[e] = {
                      setup: function() {
                          return Re(this, e, Pe), !1
                      },
                      trigger: function() {
                          return Re(this, e), !0
                      },
                      _default: function() {
                          return !0
                      },
                      delegateType: t
                  }
              })), C.each({
                  mouseenter: "mouseover",
                  mouseleave: "mouseout",
                  pointerenter: "pointerover",
                  pointerleave: "pointerout"
              }, (function(e, t) {
                  C.event.special[e] = {
                      delegateType: t,
                      bindType: t,
                      handle: function(e) {
                          var i, n = this,
                              a = e.relatedTarget,
                              r = e.handleObj;
                          return a && (a === n || C.contains(n, a)) || (e.type = r.origType, i = r.handler.apply(this, arguments), e.type = t), i
                      }
                  }
              })), C.fn.extend({
                  on: function(e, t, i, n) {
                      return Ie(this, e, t, i, n)
                  },
                  one: function(e, t, i, n) {
                      return Ie(this, e, t, i, n, 1)
                  },
                  off: function(e, t, i) {
                      var n, a;
                      if (e && e.preventDefault && e.handleObj) return n = e.handleObj, C(e.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler), this;
                      if ("object" === typeof e) {
                          for (a in e) this.off(a, t, e[a]);
                          return this
                      }
                      return !1 !== t && "function" !== typeof t || (i = t, t = void 0), !1 === i && (i = Le), this.each((function() {
                          C.event.remove(this, e, i, t)
                      }))
                  }
              });
              var _e = /<script|<style|<link/i,
                  Oe = /checked\s*(?:[^=]|=\s*.checked.)/i,
                  Fe = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

              function Ne(e, t) {
                  return I(e, "table") && I(11 !== t.nodeType ? t : t.firstChild, "tr") && C(e).children("tbody")[0] || e
              }

              function ze(e) {
                  return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e
              }

              function De(e) {
                  return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e
              }

              function He(e, t) {
                  var i, n, a, r, s, o, l;
                  if (1 === t.nodeType) {
                      if (te.hasData(e) && (r = te.get(e), l = r.events, l))
                          for (a in te.remove(t, "handle events"), l)
                              for (i = 0, n = l[a].length; i < n; i++) C.event.add(t, a, l[a][i]);
                      ie.hasData(e) && (s = ie.access(e), o = C.extend({}, s), ie.set(t, o))
                  }
              }

              function Xe(e, t) {
                  var i = t.nodeName.toLowerCase();
                  "input" === i && me.test(e.type) ? t.checked = e.checked : "input" !== i && "textarea" !== i || (t.defaultValue = e.defaultValue)
              }

              function Ye(e, t, i, n) {
                  t = c(t);
                  var a, r, s, o, l, h, u = 0,
                      d = e.length,
                      f = d - 1,
                      p = t[0],
                      g = m(p);
                  if (g || d > 1 && "string" === typeof p && !v.checkClone && Oe.test(p)) return e.each((function(a) {
                      var r = e.eq(a);
                      g && (t[0] = p.call(this, a, r.html())), Ye(r, t, i, n)
                  }));
                  if (d && (a = Ce(t, e[0].ownerDocument, !1, e, n), r = a.firstChild, 1 === a.childNodes.length && (a = r), r || n)) {
                      for (s = C.map(ke(a, "script"), ze), o = s.length; u < d; u++) l = a, u !== f && (l = C.clone(l, !0, !0), o && C.merge(s, ke(l, "script"))), i.call(e[u], l, u);
                      if (o)
                          for (h = s[s.length - 1].ownerDocument, C.map(s, De), u = 0; u < o; u++) l = s[u], ye.test(l.type || "") && !te.access(l, "globalEval") && C.contains(h, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? C._evalUrl && !l.noModule && C._evalUrl(l.src, {
                              nonce: l.nonce || l.getAttribute("nonce")
                          }, h) : k(l.textContent.replace(Fe, ""), l, h))
                  }
                  return e
              }

              function Be(e, t, i) {
                  for (var n, a = t ? C.filter(t, e) : e, r = 0; null != (n = a[r]); r++) i || 1 !== n.nodeType || C.cleanData(ke(n)), n.parentNode && (i && ue(n) && Se(ke(n, "script")), n.parentNode.removeChild(n));
                  return e
              }
              C.extend({
                  htmlPrefilter: function(e) {
                      return e
                  },
                  clone: function(e, t, i) {
                      var n, a, r, s, o = e.cloneNode(!0),
                          l = ue(e);
                      if (!v.noCloneChecked && (1 === e.nodeType || 11 === e.nodeType) && !C.isXMLDoc(e))
                          for (s = ke(o), r = ke(e), n = 0, a = r.length; n < a; n++) Xe(r[n], s[n]);
                      if (t)
                          if (i)
                              for (r = r || ke(e), s = s || ke(o), n = 0, a = r.length; n < a; n++) He(r[n], s[n]);
                          else He(e, o);
                      return s = ke(o, "script"), s.length > 0 && Se(s, !l && ke(e, "script")), o
                  },
                  cleanData: function(e) {
                      for (var t, i, n, a = C.event.special, r = 0; void 0 !== (i = e[r]); r++)
                          if (Q(i)) {
                              if (t = i[te.expando]) {
                                  if (t.events)
                                      for (n in t.events) a[n] ? C.event.remove(i, n) : C.removeEvent(i, n, t.handle);
                                  i[te.expando] = void 0
                              }
                              i[ie.expando] && (i[ie.expando] = void 0)
                          }
                  }
              }), C.fn.extend({
                  detach: function(e) {
                      return Be(this, e, !0)
                  },
                  remove: function(e) {
                      return Be(this, e)
                  },
                  text: function(e) {
                      return U(this, (function(e) {
                          return void 0 === e ? C.text(this) : this.empty().each((function() {
                              1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                          }))
                      }), null, e, arguments.length)
                  },
                  append: function() {
                      return Ye(this, arguments, (function(e) {
                          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                              var t = Ne(this, e);
                              t.appendChild(e)
                          }
                      }))
                  },
                  prepend: function() {
                      return Ye(this, arguments, (function(e) {
                          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                              var t = Ne(this, e);
                              t.insertBefore(e, t.firstChild)
                          }
                      }))
                  },
                  before: function() {
                      return Ye(this, arguments, (function(e) {
                          this.parentNode && this.parentNode.insertBefore(e, this)
                      }))
                  },
                  after: function() {
                      return Ye(this, arguments, (function(e) {
                          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                      }))
                  },
                  empty: function() {
                      for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (C.cleanData(ke(e, !1)), e.textContent = "");
                      return this
                  },
                  clone: function(e, t) {
                      return e = null != e && e, t = null == t ? e : t, this.map((function() {
                          return C.clone(this, e, t)
                      }))
                  },
                  html: function(e) {
                      return U(this, (function(e) {
                          var t = this[0] || {},
                              i = 0,
                              n = this.length;
                          if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                          if ("string" === typeof e && !_e.test(e) && !we[(be.exec(e) || ["", ""])[1].toLowerCase()]) {
                              e = C.htmlPrefilter(e);
                              try {
                                  for (; i < n; i++) t = this[i] || {}, 1 === t.nodeType && (C.cleanData(ke(t, !1)), t.innerHTML = e);
                                  t = 0
                              } catch (a) {}
                          }
                          t && this.empty().append(e)
                      }), null, e, arguments.length)
                  },
                  replaceWith: function() {
                      var e = [];
                      return Ye(this, arguments, (function(t) {
                          var i = this.parentNode;
                          C.inArray(this, e) < 0 && (C.cleanData(ke(this)), i && i.replaceChild(t, this))
                      }), e)
                  }
              }), C.each({
                  appendTo: "append",
                  prependTo: "prepend",
                  insertBefore: "before",
                  insertAfter: "after",
                  replaceAll: "replaceWith"
              }, (function(e, t) {
                  C.fn[e] = function(e) {
                      for (var i, n = [], a = C(e), r = a.length - 1, s = 0; s <= r; s++) i = s === r ? this : this.clone(!0), C(a[s])[t](i), h.apply(n, i.get());
                      return this.pushStack(n)
                  }
              }));
              var je = new RegExp("^(" + oe + ")(?!px)[a-z%]+$", "i"),
                  We = function(e) {
                      var t = e.ownerDocument.defaultView;
                      return t && t.opener || (t = a), t.getComputedStyle(e)
                  },
                  Ve = function(e, t, i) {
                      var n, a, r = {};
                      for (a in t) r[a] = e.style[a], e.style[a] = t[a];
                      for (a in n = i.call(e), t) e.style[a] = r[a];
                      return n
                  },
                  qe = new RegExp(ce.join("|"), "i");

              function Ge(e, t, i) {
                  var n, a, r, s, o = e.style;
                  return i = i || We(e), i && (s = i.getPropertyValue(t) || i[t], "" !== s || ue(e) || (s = C.style(e, t)), !v.pixelBoxStyles() && je.test(s) && qe.test(t) && (n = o.width, a = o.minWidth, r = o.maxWidth, o.minWidth = o.maxWidth = o.width = s, s = i.width, o.width = n, o.minWidth = a, o.maxWidth = r)), void 0 !== s ? s + "" : s
              }

              function Ue(e, t) {
                  return {
                      get: function() {
                          if (!e()) return (this.get = t).apply(this, arguments);
                          delete this.get
                      }
                  }
              }(function() {
                  function e() {
                      if (h) {
                          c.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", h.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", he.appendChild(c).appendChild(h);
                          var e = a.getComputedStyle(h);
                          i = "1%" !== e.top, l = 12 === t(e.marginLeft), h.style.right = "60%", s = 36 === t(e.right), n = 36 === t(e.width), h.style.position = "absolute", r = 12 === t(h.offsetWidth / 3), he.removeChild(c), h = null
                      }
                  }

                  function t(e) {
                      return Math.round(parseFloat(e))
                  }
                  var i, n, r, s, o, l, c = y.createElement("div"),
                      h = y.createElement("div");
                  h.style && (h.style.backgroundClip = "content-box", h.cloneNode(!0).style.backgroundClip = "", v.clearCloneStyle = "content-box" === h.style.backgroundClip, C.extend(v, {
                      boxSizingReliable: function() {
                          return e(), n
                      },
                      pixelBoxStyles: function() {
                          return e(), s
                      },
                      pixelPosition: function() {
                          return e(), i
                      },
                      reliableMarginLeft: function() {
                          return e(), l
                      },
                      scrollboxSize: function() {
                          return e(), r
                      },
                      reliableTrDimensions: function() {
                          var e, t, i, n;
                          return null == o && (e = y.createElement("table"), t = y.createElement("tr"), i = y.createElement("div"), e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", t.style.cssText = "border:1px solid", t.style.height = "1px", i.style.height = "9px", i.style.display = "block", he.appendChild(e).appendChild(t).appendChild(i), n = a.getComputedStyle(t), o = parseInt(n.height, 10) + parseInt(n.borderTopWidth, 10) + parseInt(n.borderBottomWidth, 10) === t.offsetHeight, he.removeChild(e)), o
                      }
                  }))
              })();
              var $e = ["Webkit", "Moz", "ms"],
                  Ze = y.createElement("div").style,
                  Je = {};

              function Ke(e) {
                  var t = e[0].toUpperCase() + e.slice(1),
                      i = $e.length;
                  while (i--)
                      if (e = $e[i] + t, e in Ze) return e
              }

              function Qe(e) {
                  var t = C.cssProps[e] || Je[e];
                  return t || (e in Ze ? e : Je[e] = Ke(e) || e)
              }
              var et = /^(none|table(?!-c[ea]).+)/,
                  tt = /^--/,
                  it = {
                      position: "absolute",
                      visibility: "hidden",
                      display: "block"
                  },
                  nt = {
                      letterSpacing: "0",
                      fontWeight: "400"
                  };

              function at(e, t, i) {
                  var n = le.exec(t);
                  return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : t
              }

              function rt(e, t, i, n, a, r) {
                  var s = "width" === t ? 1 : 0,
                      o = 0,
                      l = 0;
                  if (i === (n ? "border" : "content")) return 0;
                  for (; s < 4; s += 2) "margin" === i && (l += C.css(e, i + ce[s], !0, a)), n ? ("content" === i && (l -= C.css(e, "padding" + ce[s], !0, a)), "margin" !== i && (l -= C.css(e, "border" + ce[s] + "Width", !0, a))) : (l += C.css(e, "padding" + ce[s], !0, a), "padding" !== i ? l += C.css(e, "border" + ce[s] + "Width", !0, a) : o += C.css(e, "border" + ce[s] + "Width", !0, a));
                  return !n && r >= 0 && (l += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - r - l - o - .5)) || 0), l
              }

              function st(e, t, i) {
                  var n = We(e),
                      a = !v.boxSizingReliable() || i,
                      r = a && "border-box" === C.css(e, "boxSizing", !1, n),
                      s = r,
                      o = Ge(e, t, n),
                      l = "offset" + t[0].toUpperCase() + t.slice(1);
                  if (je.test(o)) {
                      if (!i) return o;
                      o = "auto"
                  }
                  return (!v.boxSizingReliable() && r || !v.reliableTrDimensions() && I(e, "tr") || "auto" === o || !parseFloat(o) && "inline" === C.css(e, "display", !1, n)) && e.getClientRects().length && (r = "border-box" === C.css(e, "boxSizing", !1, n), s = l in e, s && (o = e[l])), o = parseFloat(o) || 0, o + rt(e, t, i || (r ? "border" : "content"), s, n, o) + "px"
              }

              function ot(e, t, i, n, a) {
                  return new ot.prototype.init(e, t, i, n, a)
              }
              C.extend({
                  cssHooks: {
                      opacity: {
                          get: function(e, t) {
                              if (t) {
                                  var i = Ge(e, "opacity");
                                  return "" === i ? "1" : i
                              }
                          }
                      }
                  },
                  cssNumber: {
                      animationIterationCount: !0,
                      columnCount: !0,
                      fillOpacity: !0,
                      flexGrow: !0,
                      flexShrink: !0,
                      fontWeight: !0,
                      gridArea: !0,
                      gridColumn: !0,
                      gridColumnEnd: !0,
                      gridColumnStart: !0,
                      gridRow: !0,
                      gridRowEnd: !0,
                      gridRowStart: !0,
                      lineHeight: !0,
                      opacity: !0,
                      order: !0,
                      orphans: !0,
                      widows: !0,
                      zIndex: !0,
                      zoom: !0
                  },
                  cssProps: {},
                  style: function(e, t, i, n) {
                      if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                          var a, r, s, o = K(t),
                              l = tt.test(t),
                              c = e.style;
                          if (l || (t = Qe(o)), s = C.cssHooks[t] || C.cssHooks[o], void 0 === i) return s && "get" in s && void 0 !== (a = s.get(e, !1, n)) ? a : c[t];
                          r = typeof i, "string" === r && (a = le.exec(i)) && a[1] && (i = pe(e, t, a), r = "number"), null != i && i === i && ("number" !== r || l || (i += a && a[3] || (C.cssNumber[o] ? "" : "px")), v.clearCloneStyle || "" !== i || 0 !== t.indexOf("background") || (c[t] = "inherit"), s && "set" in s && void 0 === (i = s.set(e, i, n)) || (l ? c.setProperty(t, i) : c[t] = i))
                      }
                  },
                  css: function(e, t, i, n) {
                      var a, r, s, o = K(t),
                          l = tt.test(t);
                      return l || (t = Qe(o)), s = C.cssHooks[t] || C.cssHooks[o], s && "get" in s && (a = s.get(e, !0, i)), void 0 === a && (a = Ge(e, t, n)), "normal" === a && t in nt && (a = nt[t]), "" === i || i ? (r = parseFloat(a), !0 === i || isFinite(r) ? r || 0 : a) : a
                  }
              }), C.each(["height", "width"], (function(e, t) {
                  C.cssHooks[t] = {
                      get: function(e, i, n) {
                          if (i) return !et.test(C.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? st(e, t, n) : Ve(e, it, (function() {
                              return st(e, t, n)
                          }))
                      },
                      set: function(e, i, n) {
                          var a, r = We(e),
                              s = !v.scrollboxSize() && "absolute" === r.position,
                              o = s || n,
                              l = o && "border-box" === C.css(e, "boxSizing", !1, r),
                              c = n ? rt(e, t, n, l, r) : 0;
                          return l && s && (c -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(r[t]) - rt(e, t, "border", !1, r) - .5)), c && (a = le.exec(i)) && "px" !== (a[3] || "px") && (e.style[t] = i, i = C.css(e, t)), at(e, i, c)
                      }
                  }
              })), C.cssHooks.marginLeft = Ue(v.reliableMarginLeft, (function(e, t) {
                  if (t) return (parseFloat(Ge(e, "marginLeft")) || e.getBoundingClientRect().left - Ve(e, {
                      marginLeft: 0
                  }, (function() {
                      return e.getBoundingClientRect().left
                  }))) + "px"
              })), C.each({
                  margin: "",
                  padding: "",
                  border: "Width"
              }, (function(e, t) {
                  C.cssHooks[e + t] = {
                      expand: function(i) {
                          for (var n = 0, a = {}, r = "string" === typeof i ? i.split(" ") : [i]; n < 4; n++) a[e + ce[n] + t] = r[n] || r[n - 2] || r[0];
                          return a
                      }
                  }, "margin" !== e && (C.cssHooks[e + t].set = at)
              })), C.fn.extend({
                  css: function(e, t) {
                      return U(this, (function(e, t, i) {
                          var n, a, r = {},
                              s = 0;
                          if (Array.isArray(t)) {
                              for (n = We(e), a = t.length; s < a; s++) r[t[s]] = C.css(e, t[s], !1, n);
                              return r
                          }
                          return void 0 !== i ? C.style(e, t, i) : C.css(e, t)
                      }), e, t, arguments.length > 1)
                  }
              }), C.Tween = ot, ot.prototype = {
                  constructor: ot,
                  init: function(e, t, i, n, a, r) {
                      this.elem = e, this.prop = i, this.easing = a || C.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = n, this.unit = r || (C.cssNumber[i] ? "" : "px")
                  },
                  cur: function() {
                      var e = ot.propHooks[this.prop];
                      return e && e.get ? e.get(this) : ot.propHooks._default.get(this)
                  },
                  run: function(e) {
                      var t, i = ot.propHooks[this.prop];
                      return this.options.duration ? this.pos = t = C.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), i && i.set ? i.set(this) : ot.propHooks._default.set(this), this
                  }
              }, ot.prototype.init.prototype = ot.prototype, ot.propHooks = {
                  _default: {
                      get: function(e) {
                          var t;
                          return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = C.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0)
                      },
                      set: function(e) {
                          C.fx.step[e.prop] ? C.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !C.cssHooks[e.prop] && null == e.elem.style[Qe(e.prop)] ? e.elem[e.prop] = e.now : C.style(e.elem, e.prop, e.now + e.unit)
                      }
                  }
              }, ot.propHooks.scrollTop = ot.propHooks.scrollLeft = {
                  set: function(e) {
                      e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
                  }
              }, C.easing = {
                  linear: function(e) {
                      return e
                  },
                  swing: function(e) {
                      return .5 - Math.cos(e * Math.PI) / 2
                  },
                  _default: "swing"
              }, C.fx = ot.prototype.init, C.fx.step = {};
              var lt, ct, ht = /^(?:toggle|show|hide)$/,
                  ut = /queueHooks$/;

              function dt() {
                  ct && (!1 === y.hidden && a.requestAnimationFrame ? a.requestAnimationFrame(dt) : a.setTimeout(dt, C.fx.interval), C.fx.tick())
              }

              function ft() {
                  return a.setTimeout((function() {
                      lt = void 0
                  })), lt = Date.now()
              }

              function pt(e, t) {
                  var i, n = 0,
                      a = {
                          height: e
                      };
                  for (t = t ? 1 : 0; n < 4; n += 2 - t) i = ce[n], a["margin" + i] = a["padding" + i] = e;
                  return t && (a.opacity = a.width = e), a
              }

              function gt(e, t, i) {
                  for (var n, a = (mt.tweeners[t] || []).concat(mt.tweeners["*"]), r = 0, s = a.length; r < s; r++)
                      if (n = a[r].call(i, t, e)) return n
              }

              function xt(e, t, i) {
                  var n, a, r, s, o, l, c, h, u = "width" in t || "height" in t,
                      d = this,
                      f = {},
                      p = e.style,
                      g = e.nodeType && fe(e),
                      x = te.get(e, "fxshow");
                  for (n in i.queue || (s = C._queueHooks(e, "fx"), null == s.unqueued && (s.unqueued = 0, o = s.empty.fire, s.empty.fire = function() {
                          s.unqueued || o()
                      }), s.unqueued++, d.always((function() {
                          d.always((function() {
                              s.unqueued--, C.queue(e, "fx").length || s.empty.fire()
                          }))
                      }))), t)
                      if (a = t[n], ht.test(a)) {
                          if (delete t[n], r = r || "toggle" === a, a === (g ? "hide" : "show")) {
                              if ("show" !== a || !x || void 0 === x[n]) continue;
                              g = !0
                          }
                          f[n] = x && x[n] || C.style(e, n)
                      } if (l = !C.isEmptyObject(t), l || !C.isEmptyObject(f))
                      for (n in u && 1 === e.nodeType && (i.overflow = [p.overflow, p.overflowX, p.overflowY], c = x && x.display, null == c && (c = te.get(e, "display")), h = C.css(e, "display"), "none" === h && (c ? h = c : (ve([e], !0), c = e.style.display || c, h = C.css(e, "display"), ve([e]))), ("inline" === h || "inline-block" === h && null != c) && "none" === C.css(e, "float") && (l || (d.done((function() {
                              p.display = c
                          })), null == c && (h = p.display, c = "none" === h ? "" : h)), p.display = "inline-block")), i.overflow && (p.overflow = "hidden", d.always((function() {
                              p.overflow = i.overflow[0], p.overflowX = i.overflow[1], p.overflowY = i.overflow[2]
                          }))), l = !1, f) l || (x ? "hidden" in x && (g = x.hidden) : x = te.access(e, "fxshow", {
                          display: c
                      }), r && (x.hidden = !g), g && ve([e], !0), d.done((function() {
                          for (n in g || ve([e]), te.remove(e, "fxshow"), f) C.style(e, n, f[n])
                      }))), l = gt(g ? x[n] : 0, n, d), n in x || (x[n] = l.start, g && (l.end = l.start, l.start = 0))
              }

              function vt(e, t) {
                  var i, n, a, r, s;
                  for (i in e)
                      if (n = K(i), a = t[n], r = e[i], Array.isArray(r) && (a = r[1], r = e[i] = r[0]), i !== n && (e[n] = r, delete e[i]), s = C.cssHooks[n], s && "expand" in s)
                          for (i in r = s.expand(r), delete e[n], r) i in e || (e[i] = r[i], t[i] = a);
                      else t[n] = a
              }

              function mt(e, t, i) {
                  var n, a, r = 0,
                      s = mt.prefilters.length,
                      o = C.Deferred().always((function() {
                          delete l.elem
                      })),
                      l = function() {
                          if (a) return !1;
                          for (var t = lt || ft(), i = Math.max(0, c.startTime + c.duration - t), n = i / c.duration || 0, r = 1 - n, s = 0, l = c.tweens.length; s < l; s++) c.tweens[s].run(r);
                          return o.notifyWith(e, [c, r, i]), r < 1 && l ? i : (l || o.notifyWith(e, [c, 1, 0]), o.resolveWith(e, [c]), !1)
                      },
                      c = o.promise({
                          elem: e,
                          props: C.extend({}, t),
                          opts: C.extend(!0, {
                              specialEasing: {},
                              easing: C.easing._default
                          }, i),
                          originalProperties: t,
                          originalOptions: i,
                          startTime: lt || ft(),
                          duration: i.duration,
                          tweens: [],
                          createTween: function(t, i) {
                              var n = C.Tween(e, c.opts, t, i, c.opts.specialEasing[t] || c.opts.easing);
                              return c.tweens.push(n), n
                          },
                          stop: function(t) {
                              var i = 0,
                                  n = t ? c.tweens.length : 0;
                              if (a) return this;
                              for (a = !0; i < n; i++) c.tweens[i].run(1);
                              return t ? (o.notifyWith(e, [c, 1, 0]), o.resolveWith(e, [c, t])) : o.rejectWith(e, [c, t]), this
                          }
                      }),
                      h = c.props;
                  for (vt(h, c.opts.specialEasing); r < s; r++)
                      if (n = mt.prefilters[r].call(c, e, h, c.opts), n) return m(n.stop) && (C._queueHooks(c.elem, c.opts.queue).stop = n.stop.bind(n)), n;
                  return C.map(h, gt, c), m(c.opts.start) && c.opts.start.call(e, c), c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always), C.fx.timer(C.extend(l, {
                      elem: e,
                      anim: c,
                      queue: c.opts.queue
                  })), c
              }
              C.Animation = C.extend(mt, {
                      tweeners: {
                          "*": [function(e, t) {
                              var i = this.createTween(e, t);
                              return pe(i.elem, e, le.exec(t), i), i
                          }]
                      },
                      tweener: function(e, t) {
                          m(e) ? (t = e, e = ["*"]) : e = e.match(X);
                          for (var i, n = 0, a = e.length; n < a; n++) i = e[n], mt.tweeners[i] = mt.tweeners[i] || [], mt.tweeners[i].unshift(t)
                      },
                      prefilters: [xt],
                      prefilter: function(e, t) {
                          t ? mt.prefilters.unshift(e) : mt.prefilters.push(e)
                      }
                  }), C.speed = function(e, t, i) {
                      var n = e && "object" === typeof e ? C.extend({}, e) : {
                          complete: i || !i && t || m(e) && e,
                          duration: e,
                          easing: i && t || t && !m(t) && t
                      };
                      return C.fx.off ? n.duration = 0 : "number" !== typeof n.duration && (n.duration in C.fx.speeds ? n.duration = C.fx.speeds[n.duration] : n.duration = C.fx.speeds._default), null != n.queue && !0 !== n.queue || (n.queue = "fx"), n.old = n.complete, n.complete = function() {
                          m(n.old) && n.old.call(this), n.queue && C.dequeue(this, n.queue)
                      }, n
                  }, C.fn.extend({
                      fadeTo: function(e, t, i, n) {
                          return this.filter(fe).css("opacity", 0).show().end().animate({
                              opacity: t
                          }, e, i, n)
                      },
                      animate: function(e, t, i, n) {
                          var a = C.isEmptyObject(e),
                              r = C.speed(t, i, n),
                              s = function() {
                                  var t = mt(this, C.extend({}, e), r);
                                  (a || te.get(this, "finish")) && t.stop(!0)
                              };
                          return s.finish = s, a || !1 === r.queue ? this.each(s) : this.queue(r.queue, s)
                      },
                      stop: function(e, t, i) {
                          var n = function(e) {
                              var t = e.stop;
                              delete e.stop, t(i)
                          };
                          return "string" !== typeof e && (i = t, t = e, e = void 0), t && this.queue(e || "fx", []), this.each((function() {
                              var t = !0,
                                  a = null != e && e + "queueHooks",
                                  r = C.timers,
                                  s = te.get(this);
                              if (a) s[a] && s[a].stop && n(s[a]);
                              else
                                  for (a in s) s[a] && s[a].stop && ut.test(a) && n(s[a]);
                              for (a = r.length; a--;) r[a].elem !== this || null != e && r[a].queue !== e || (r[a].anim.stop(i), t = !1, r.splice(a, 1));
                              !t && i || C.dequeue(this, e)
                          }))
                      },
                      finish: function(e) {
                          return !1 !== e && (e = e || "fx"), this.each((function() {
                              var t, i = te.get(this),
                                  n = i[e + "queue"],
                                  a = i[e + "queueHooks"],
                                  r = C.timers,
                                  s = n ? n.length : 0;
                              for (i.finish = !0, C.queue(this, e, []), a && a.stop && a.stop.call(this, !0), t = r.length; t--;) r[t].elem === this && r[t].queue === e && (r[t].anim.stop(!0), r.splice(t, 1));
                              for (t = 0; t < s; t++) n[t] && n[t].finish && n[t].finish.call(this);
                              delete i.finish
                          }))
                      }
                  }), C.each(["toggle", "show", "hide"], (function(e, t) {
                      var i = C.fn[t];
                      C.fn[t] = function(e, n, a) {
                          return null == e || "boolean" === typeof e ? i.apply(this, arguments) : this.animate(pt(t, !0), e, n, a)
                      }
                  })), C.each({
                      slideDown: pt("show"),
                      slideUp: pt("hide"),
                      slideToggle: pt("toggle"),
                      fadeIn: {
                          opacity: "show"
                      },
                      fadeOut: {
                          opacity: "hide"
                      },
                      fadeToggle: {
                          opacity: "toggle"
                      }
                  }, (function(e, t) {
                      C.fn[e] = function(e, i, n) {
                          return this.animate(t, e, i, n)
                      }
                  })), C.timers = [], C.fx.tick = function() {
                      var e, t = 0,
                          i = C.timers;
                      for (lt = Date.now(); t < i.length; t++) e = i[t], e() || i[t] !== e || i.splice(t--, 1);
                      i.length || C.fx.stop(), lt = void 0
                  }, C.fx.timer = function(e) {
                      C.timers.push(e), C.fx.start()
                  }, C.fx.interval = 13, C.fx.start = function() {
                      ct || (ct = !0, dt())
                  }, C.fx.stop = function() {
                      ct = null
                  }, C.fx.speeds = {
                      slow: 600,
                      fast: 200,
                      _default: 400
                  }, C.fn.delay = function(e, t) {
                      return e = C.fx && C.fx.speeds[e] || e, t = t || "fx", this.queue(t, (function(t, i) {
                          var n = a.setTimeout(t, e);
                          i.stop = function() {
                              a.clearTimeout(n)
                          }
                      }))
                  },
                  function() {
                      var e = y.createElement("input"),
                          t = y.createElement("select"),
                          i = t.appendChild(y.createElement("option"));
                      e.type = "checkbox", v.checkOn = "" !== e.value, v.optSelected = i.selected, e = y.createElement("input"), e.value = "t", e.type = "radio", v.radioValue = "t" === e.value
                  }();
              var bt, yt = C.expr.attrHandle;
              C.fn.extend({
                  attr: function(e, t) {
                      return U(this, C.attr, e, t, arguments.length > 1)
                  },
                  removeAttr: function(e) {
                      return this.each((function() {
                          C.removeAttr(this, e)
                      }))
                  }
              }), C.extend({
                  attr: function(e, t, i) {
                      var n, a, r = e.nodeType;
                      if (3 !== r && 8 !== r && 2 !== r) return "undefined" === typeof e.getAttribute ? C.prop(e, t, i) : (1 === r && C.isXMLDoc(e) || (a = C.attrHooks[t.toLowerCase()] || (C.expr.match.bool.test(t) ? bt : void 0)), void 0 !== i ? null === i ? void C.removeAttr(e, t) : a && "set" in a && void 0 !== (n = a.set(e, i, t)) ? n : (e.setAttribute(t, i + ""), i) : a && "get" in a && null !== (n = a.get(e, t)) ? n : (n = C.find.attr(e, t), null == n ? void 0 : n))
                  },
                  attrHooks: {
                      type: {
                          set: function(e, t) {
                              if (!v.radioValue && "radio" === t && I(e, "input")) {
                                  var i = e.value;
                                  return e.setAttribute("type", t), i && (e.value = i), t
                              }
                          }
                      }
                  },
                  removeAttr: function(e, t) {
                      var i, n = 0,
                          a = t && t.match(X);
                      if (a && 1 === e.nodeType)
                          while (i = a[n++]) e.removeAttribute(i)
                  }
              }), bt = {
                  set: function(e, t, i) {
                      return !1 === t ? C.removeAttr(e, i) : e.setAttribute(i, i), i
                  }
              }, C.each(C.expr.match.bool.source.match(/\w+/g), (function(e, t) {
                  var i = yt[t] || C.find.attr;
                  yt[t] = function(e, t, n) {
                      var a, r, s = t.toLowerCase();
                      return n || (r = yt[s], yt[s] = a, a = null != i(e, t, n) ? s : null, yt[s] = r), a
                  }
              }));
              var wt = /^(?:input|select|textarea|button)$/i,
                  kt = /^(?:a|area)$/i;

              function St(e) {
                  var t = e.match(X) || [];
                  return t.join(" ")
              }

              function At(e) {
                  return e.getAttribute && e.getAttribute("class") || ""
              }

              function Ct(e) {
                  return Array.isArray(e) ? e : "string" === typeof e && e.match(X) || []
              }
              C.fn.extend({
                  prop: function(e, t) {
                      return U(this, C.prop, e, t, arguments.length > 1)
                  },
                  removeProp: function(e) {
                      return this.each((function() {
                          delete this[C.propFix[e] || e]
                      }))
                  }
              }), C.extend({
                  prop: function(e, t, i) {
                      var n, a, r = e.nodeType;
                      if (3 !== r && 8 !== r && 2 !== r) return 1 === r && C.isXMLDoc(e) || (t = C.propFix[t] || t, a = C.propHooks[t]), void 0 !== i ? a && "set" in a && void 0 !== (n = a.set(e, i, t)) ? n : e[t] = i : a && "get" in a && null !== (n = a.get(e, t)) ? n : e[t]
                  },
                  propHooks: {
                      tabIndex: {
                          get: function(e) {
                              var t = C.find.attr(e, "tabindex");
                              return t ? parseInt(t, 10) : wt.test(e.nodeName) || kt.test(e.nodeName) && e.href ? 0 : -1
                          }
                      }
                  },
                  propFix: {
                      for: "htmlFor",
                      class: "className"
                  }
              }), v.optSelected || (C.propHooks.selected = {
                  get: function(e) {
                      var t = e.parentNode;
                      return t && t.parentNode && t.parentNode.selectedIndex, null
                  },
                  set: function(e) {
                      var t = e.parentNode;
                      t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex)
                  }
              }), C.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], (function() {
                  C.propFix[this.toLowerCase()] = this
              })), C.fn.extend({
                  addClass: function(e) {
                      var t, i, n, a, r, s, o, l = 0;
                      if (m(e)) return this.each((function(t) {
                          C(this).addClass(e.call(this, t, At(this)))
                      }));
                      if (t = Ct(e), t.length)
                          while (i = this[l++])
                              if (a = At(i), n = 1 === i.nodeType && " " + St(a) + " ", n) {
                                  s = 0;
                                  while (r = t[s++]) n.indexOf(" " + r + " ") < 0 && (n += r + " ");
                                  o = St(n), a !== o && i.setAttribute("class", o)
                              } return this
                  },
                  removeClass: function(e) {
                      var t, i, n, a, r, s, o, l = 0;
                      if (m(e)) return this.each((function(t) {
                          C(this).removeClass(e.call(this, t, At(this)))
                      }));
                      if (!arguments.length) return this.attr("class", "");
                      if (t = Ct(e), t.length)
                          while (i = this[l++])
                              if (a = At(i), n = 1 === i.nodeType && " " + St(a) + " ", n) {
                                  s = 0;
                                  while (r = t[s++])
                                      while (n.indexOf(" " + r + " ") > -1) n = n.replace(" " + r + " ", " ");
                                  o = St(n), a !== o && i.setAttribute("class", o)
                              } return this
                  },
                  toggleClass: function(e, t) {
                      var i = typeof e,
                          n = "string" === i || Array.isArray(e);
                      return "boolean" === typeof t && n ? t ? this.addClass(e) : this.removeClass(e) : m(e) ? this.each((function(i) {
                          C(this).toggleClass(e.call(this, i, At(this), t), t)
                      })) : this.each((function() {
                          var t, a, r, s;
                          if (n) {
                              a = 0, r = C(this), s = Ct(e);
                              while (t = s[a++]) r.hasClass(t) ? r.removeClass(t) : r.addClass(t)
                          } else void 0 !== e && "boolean" !== i || (t = At(this), t && te.set(this, "__className__", t), this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : te.get(this, "__className__") || ""))
                      }))
                  },
                  hasClass: function(e) {
                      var t, i, n = 0;
                      t = " " + e + " ";
                      while (i = this[n++])
                          if (1 === i.nodeType && (" " + St(At(i)) + " ").indexOf(t) > -1) return !0;
                      return !1
                  }
              });
              var Tt = /\r/g;
              C.fn.extend({
                  val: function(e) {
                      var t, i, n, a = this[0];
                      return arguments.length ? (n = m(e), this.each((function(i) {
                          var a;
                          1 === this.nodeType && (a = n ? e.call(this, i, C(this).val()) : e, null == a ? a = "" : "number" === typeof a ? a += "" : Array.isArray(a) && (a = C.map(a, (function(e) {
                              return null == e ? "" : e + ""
                          }))), t = C.valHooks[this.type] || C.valHooks[this.nodeName.toLowerCase()], t && "set" in t && void 0 !== t.set(this, a, "value") || (this.value = a))
                      }))) : a ? (t = C.valHooks[a.type] || C.valHooks[a.nodeName.toLowerCase()], t && "get" in t && void 0 !== (i = t.get(a, "value")) ? i : (i = a.value, "string" === typeof i ? i.replace(Tt, "") : null == i ? "" : i)) : void 0
                  }
              }), C.extend({
                  valHooks: {
                      option: {
                          get: function(e) {
                              var t = C.find.attr(e, "value");
                              return null != t ? t : St(C.text(e))
                          }
                      },
                      select: {
                          get: function(e) {
                              var t, i, n, a = e.options,
                                  r = e.selectedIndex,
                                  s = "select-one" === e.type,
                                  o = s ? null : [],
                                  l = s ? r + 1 : a.length;
                              for (n = r < 0 ? l : s ? r : 0; n < l; n++)
                                  if (i = a[n], (i.selected || n === r) && !i.disabled && (!i.parentNode.disabled || !I(i.parentNode, "optgroup"))) {
                                      if (t = C(i).val(), s) return t;
                                      o.push(t)
                                  } return o
                          },
                          set: function(e, t) {
                              var i, n, a = e.options,
                                  r = C.makeArray(t),
                                  s = a.length;
                              while (s--) n = a[s], (n.selected = C.inArray(C.valHooks.option.get(n), r) > -1) && (i = !0);
                              return i || (e.selectedIndex = -1), r
                          }
                      }
                  }
              }), C.each(["radio", "checkbox"], (function() {
                  C.valHooks[this] = {
                      set: function(e, t) {
                          if (Array.isArray(t)) return e.checked = C.inArray(C(e).val(), t) > -1
                      }
                  }, v.checkOn || (C.valHooks[this].get = function(e) {
                      return null === e.getAttribute("value") ? "on" : e.value
                  })
              })), v.focusin = "onfocusin" in a;
              var Et = /^(?:focusinfocus|focusoutblur)$/,
                  Lt = function(e) {
                      e.stopPropagation()
                  };
              C.extend(C.event, {
                  trigger: function(e, t, i, n) {
                      var r, s, o, l, c, h, u, d, f = [i || y],
                          g = p.call(e, "type") ? e.type : e,
                          x = p.call(e, "namespace") ? e.namespace.split(".") : [];
                      if (s = d = o = i = i || y, 3 !== i.nodeType && 8 !== i.nodeType && !Et.test(g + C.event.triggered) && (g.indexOf(".") > -1 && (x = g.split("."), g = x.shift(), x.sort()), c = g.indexOf(":") < 0 && "on" + g, e = e[C.expando] ? e : new C.Event(g, "object" === typeof e && e), e.isTrigger = n ? 2 : 3, e.namespace = x.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + x.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = i), t = null == t ? [e] : C.makeArray(t, [e]), u = C.event.special[g] || {}, n || !u.trigger || !1 !== u.trigger.apply(i, t))) {
                          if (!n && !u.noBubble && !b(i)) {
                              for (l = u.delegateType || g, Et.test(l + g) || (s = s.parentNode); s; s = s.parentNode) f.push(s), o = s;
                              o === (i.ownerDocument || y) && f.push(o.defaultView || o.parentWindow || a)
                          }
                          r = 0;
                          while ((s = f[r++]) && !e.isPropagationStopped()) d = s, e.type = r > 1 ? l : u.bindType || g, h = (te.get(s, "events") || Object.create(null))[e.type] && te.get(s, "handle"), h && h.apply(s, t), h = c && s[c], h && h.apply && Q(s) && (e.result = h.apply(s, t), !1 === e.result && e.preventDefault());
                          return e.type = g, n || e.isDefaultPrevented() || u._default && !1 !== u._default.apply(f.pop(), t) || !Q(i) || c && m(i[g]) && !b(i) && (o = i[c], o && (i[c] = null), C.event.triggered = g, e.isPropagationStopped() && d.addEventListener(g, Lt), i[g](), e.isPropagationStopped() && d.removeEventListener(g, Lt), C.event.triggered = void 0, o && (i[c] = o)), e.result
                      }
                  },
                  simulate: function(e, t, i) {
                      var n = C.extend(new C.Event, i, {
                          type: e,
                          isSimulated: !0
                      });
                      C.event.trigger(n, null, t)
                  }
              }), C.fn.extend({
                  trigger: function(e, t) {
                      return this.each((function() {
                          C.event.trigger(e, t, this)
                      }))
                  },
                  triggerHandler: function(e, t) {
                      var i = this[0];
                      if (i) return C.event.trigger(e, t, i, !0)
                  }
              }), v.focusin || C.each({
                  focus: "focusin",
                  blur: "focusout"
              }, (function(e, t) {
                  var i = function(e) {
                      C.event.simulate(t, e.target, C.event.fix(e))
                  };
                  C.event.special[t] = {
                      setup: function() {
                          var n = this.ownerDocument || this.document || this,
                              a = te.access(n, t);
                          a || n.addEventListener(e, i, !0), te.access(n, t, (a || 0) + 1)
                      },
                      teardown: function() {
                          var n = this.ownerDocument || this.document || this,
                              a = te.access(n, t) - 1;
                          a ? te.access(n, t, a) : (n.removeEventListener(e, i, !0), te.remove(n, t))
                      }
                  }
              }));
              var Pt = a.location,
                  Mt = {
                      guid: Date.now()
                  },
                  It = /\?/;
              C.parseXML = function(e) {
                  var t, i;
                  if (!e || "string" !== typeof e) return null;
                  try {
                      t = (new a.DOMParser).parseFromString(e, "text/xml")
                  } catch (n) {}
                  return i = t && t.getElementsByTagName("parsererror")[0], t && !i || C.error("Invalid XML: " + (i ? C.map(i.childNodes, (function(e) {
                      return e.textContent
                  })).join("\n") : e)), t
              };
              var Rt = /\[\]$/,
                  _t = /\r?\n/g,
                  Ot = /^(?:submit|button|image|reset|file)$/i,
                  Ft = /^(?:input|select|textarea|keygen)/i;

              function Nt(e, t, i, n) {
                  var a;
                  if (Array.isArray(t)) C.each(t, (function(t, a) {
                      i || Rt.test(e) ? n(e, a) : Nt(e + "[" + ("object" === typeof a && null != a ? t : "") + "]", a, i, n)
                  }));
                  else if (i || "object" !== S(t)) n(e, t);
                  else
                      for (a in t) Nt(e + "[" + a + "]", t[a], i, n)
              }
              C.param = function(e, t) {
                  var i, n = [],
                      a = function(e, t) {
                          var i = m(t) ? t() : t;
                          n[n.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == i ? "" : i)
                      };
                  if (null == e) return "";
                  if (Array.isArray(e) || e.jquery && !C.isPlainObject(e)) C.each(e, (function() {
                      a(this.name, this.value)
                  }));
                  else
                      for (i in e) Nt(i, e[i], t, a);
                  return n.join("&")
              }, C.fn.extend({
                  serialize: function() {
                      return C.param(this.serializeArray())
                  },
                  serializeArray: function() {
                      return this.map((function() {
                          var e = C.prop(this, "elements");
                          return e ? C.makeArray(e) : this
                      })).filter((function() {
                          var e = this.type;
                          return this.name && !C(this).is(":disabled") && Ft.test(this.nodeName) && !Ot.test(e) && (this.checked || !me.test(e))
                      })).map((function(e, t) {
                          var i = C(this).val();
                          return null == i ? null : Array.isArray(i) ? C.map(i, (function(e) {
                              return {
                                  name: t.name,
                                  value: e.replace(_t, "\r\n")
                              }
                          })) : {
                              name: t.name,
                              value: i.replace(_t, "\r\n")
                          }
                      })).get()
                  }
              });
              var zt = /%20/g,
                  Dt = /#.*$/,
                  Ht = /([?&])_=[^&]*/,
                  Xt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                  Yt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                  Bt = /^(?:GET|HEAD)$/,
                  jt = /^\/\//,
                  Wt = {},
                  Vt = {},
                  qt = "*/".concat("*"),
                  Gt = y.createElement("a");

              function Ut(e) {
                  return function(t, i) {
                      "string" !== typeof t && (i = t, t = "*");
                      var n, a = 0,
                          r = t.toLowerCase().match(X) || [];
                      if (m(i))
                          while (n = r[a++]) "+" === n[0] ? (n = n.slice(1) || "*", (e[n] = e[n] || []).unshift(i)) : (e[n] = e[n] || []).push(i)
                  }
              }

              function $t(e, t, i, n) {
                  var a = {},
                      r = e === Vt;

                  function s(o) {
                      var l;
                      return a[o] = !0, C.each(e[o] || [], (function(e, o) {
                          var c = o(t, i, n);
                          return "string" !== typeof c || r || a[c] ? r ? !(l = c) : void 0 : (t.dataTypes.unshift(c), s(c), !1)
                      })), l
                  }
                  return s(t.dataTypes[0]) || !a["*"] && s("*")
              }

              function Zt(e, t) {
                  var i, n, a = C.ajaxSettings.flatOptions || {};
                  for (i in t) void 0 !== t[i] && ((a[i] ? e : n || (n = {}))[i] = t[i]);
                  return n && C.extend(!0, e, n), e
              }

              function Jt(e, t, i) {
                  var n, a, r, s, o = e.contents,
                      l = e.dataTypes;
                  while ("*" === l[0]) l.shift(), void 0 === n && (n = e.mimeType || t.getResponseHeader("Content-Type"));
                  if (n)
                      for (a in o)
                          if (o[a] && o[a].test(n)) {
                              l.unshift(a);
                              break
                          } if (l[0] in i) r = l[0];
                  else {
                      for (a in i) {
                          if (!l[0] || e.converters[a + " " + l[0]]) {
                              r = a;
                              break
                          }
                          s || (s = a)
                      }
                      r = r || s
                  }
                  if (r) return r !== l[0] && l.unshift(r), i[r]
              }

              function Kt(e, t, i, n) {
                  var a, r, s, o, l, c = {},
                      h = e.dataTypes.slice();
                  if (h[1])
                      for (s in e.converters) c[s.toLowerCase()] = e.converters[s];
                  r = h.shift();
                  while (r)
                      if (e.responseFields[r] && (i[e.responseFields[r]] = t), !l && n && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = r, r = h.shift(), r)
                          if ("*" === r) r = l;
                          else if ("*" !== l && l !== r) {
                      if (s = c[l + " " + r] || c["* " + r], !s)
                          for (a in c)
                              if (o = a.split(" "), o[1] === r && (s = c[l + " " + o[0]] || c["* " + o[0]], s)) {
                                  !0 === s ? s = c[a] : !0 !== c[a] && (r = o[0], h.unshift(o[1]));
                                  break
                              } if (!0 !== s)
                          if (s && e.throws) t = s(t);
                          else try {
                              t = s(t)
                          } catch (u) {
                              return {
                                  state: "parsererror",
                                  error: s ? u : "No conversion from " + l + " to " + r
                              }
                          }
                  }
                  return {
                      state: "success",
                      data: t
                  }
              }
              Gt.href = Pt.href, C.extend({
                  active: 0,
                  lastModified: {},
                  etag: {},
                  ajaxSettings: {
                      url: Pt.href,
                      type: "GET",
                      isLocal: Yt.test(Pt.protocol),
                      global: !0,
                      processData: !0,
                      async: !0,
                      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                      accepts: {
                          "*": qt,
                          text: "text/plain",
                          html: "text/html",
                          xml: "application/xml, text/xml",
                          json: "application/json, text/javascript"
                      },
                      contents: {
                          xml: /\bxml\b/,
                          html: /\bhtml/,
                          json: /\bjson\b/
                      },
                      responseFields: {
                          xml: "responseXML",
                          text: "responseText",
                          json: "responseJSON"
                      },
                      converters: {
                          "* text": String,
                          "text html": !0,
                          "text json": JSON.parse,
                          "text xml": C.parseXML
                      },
                      flatOptions: {
                          url: !0,
                          context: !0
                      }
                  },
                  ajaxSetup: function(e, t) {
                      return t ? Zt(Zt(e, C.ajaxSettings), t) : Zt(C.ajaxSettings, e)
                  },
                  ajaxPrefilter: Ut(Wt),
                  ajaxTransport: Ut(Vt),
                  ajax: function(e, t) {
                      "object" === typeof e && (t = e, e = void 0), t = t || {};
                      var i, n, r, s, o, l, c, h, u, d, f = C.ajaxSetup({}, t),
                          p = f.context || f,
                          g = f.context && (p.nodeType || p.jquery) ? C(p) : C.event,
                          x = C.Deferred(),
                          v = C.Callbacks("once memory"),
                          m = f.statusCode || {},
                          b = {},
                          w = {},
                          k = "canceled",
                          S = {
                              readyState: 0,
                              getResponseHeader: function(e) {
                                  var t;
                                  if (c) {
                                      if (!s) {
                                          s = {};
                                          while (t = Xt.exec(r)) s[t[1].toLowerCase() + " "] = (s[t[1].toLowerCase() + " "] || []).concat(t[2])
                                      }
                                      t = s[e.toLowerCase() + " "]
                                  }
                                  return null == t ? null : t.join(", ")
                              },
                              getAllResponseHeaders: function() {
                                  return c ? r : null
                              },
                              setRequestHeader: function(e, t) {
                                  return null == c && (e = w[e.toLowerCase()] = w[e.toLowerCase()] || e, b[e] = t), this
                              },
                              overrideMimeType: function(e) {
                                  return null == c && (f.mimeType = e), this
                              },
                              statusCode: function(e) {
                                  var t;
                                  if (e)
                                      if (c) S.always(e[S.status]);
                                      else
                                          for (t in e) m[t] = [m[t], e[t]];
                                  return this
                              },
                              abort: function(e) {
                                  var t = e || k;
                                  return i && i.abort(t), A(0, t), this
                              }
                          };
                      if (x.promise(S), f.url = ((e || f.url || Pt.href) + "").replace(jt, Pt.protocol + "//"), f.type = t.method || t.type || f.method || f.type, f.dataTypes = (f.dataType || "*").toLowerCase().match(X) || [""], null == f.crossDomain) {
                          l = y.createElement("a");
                          try {
                              l.href = f.url, l.href = l.href, f.crossDomain = Gt.protocol + "//" + Gt.host !== l.protocol + "//" + l.host
                          } catch (T) {
                              f.crossDomain = !0
                          }
                      }
                      if (f.data && f.processData && "string" !== typeof f.data && (f.data = C.param(f.data, f.traditional)), $t(Wt, f, t, S), c) return S;
                      for (u in h = C.event && f.global, h && 0 === C.active++ && C.event.trigger("ajaxStart"), f.type = f.type.toUpperCase(), f.hasContent = !Bt.test(f.type), n = f.url.replace(Dt, ""), f.hasContent ? f.data && f.processData && 0 === (f.contentType || "").indexOf("application/x-www-form-urlencoded") && (f.data = f.data.replace(zt, "+")) : (d = f.url.slice(n.length), f.data && (f.processData || "string" === typeof f.data) && (n += (It.test(n) ? "&" : "?") + f.data, delete f.data), !1 === f.cache && (n = n.replace(Ht, "$1"), d = (It.test(n) ? "&" : "?") + "_=" + Mt.guid++ + d), f.url = n + d), f.ifModified && (C.lastModified[n] && S.setRequestHeader("If-Modified-Since", C.lastModified[n]), C.etag[n] && S.setRequestHeader("If-None-Match", C.etag[n])), (f.data && f.hasContent && !1 !== f.contentType || t.contentType) && S.setRequestHeader("Content-Type", f.contentType), S.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + qt + "; q=0.01" : "") : f.accepts["*"]), f.headers) S.setRequestHeader(u, f.headers[u]);
                      if (f.beforeSend && (!1 === f.beforeSend.call(p, S, f) || c)) return S.abort();
                      if (k = "abort", v.add(f.complete), S.done(f.success), S.fail(f.error), i = $t(Vt, f, t, S), i) {
                          if (S.readyState = 1, h && g.trigger("ajaxSend", [S, f]), c) return S;
                          f.async && f.timeout > 0 && (o = a.setTimeout((function() {
                              S.abort("timeout")
                          }), f.timeout));
                          try {
                              c = !1, i.send(b, A)
                          } catch (T) {
                              if (c) throw T;
                              A(-1, T)
                          }
                      } else A(-1, "No Transport");

                      function A(e, t, s, l) {
                          var u, d, b, y, w, k = t;
                          c || (c = !0, o && a.clearTimeout(o), i = void 0, r = l || "", S.readyState = e > 0 ? 4 : 0, u = e >= 200 && e < 300 || 304 === e, s && (y = Jt(f, S, s)), !u && C.inArray("script", f.dataTypes) > -1 && C.inArray("json", f.dataTypes) < 0 && (f.converters["text script"] = function() {}), y = Kt(f, y, S, u), u ? (f.ifModified && (w = S.getResponseHeader("Last-Modified"), w && (C.lastModified[n] = w), w = S.getResponseHeader("etag"), w && (C.etag[n] = w)), 204 === e || "HEAD" === f.type ? k = "nocontent" : 304 === e ? k = "notmodified" : (k = y.state, d = y.data, b = y.error, u = !b)) : (b = k, !e && k || (k = "error", e < 0 && (e = 0))), S.status = e, S.statusText = (t || k) + "", u ? x.resolveWith(p, [d, k, S]) : x.rejectWith(p, [S, k, b]), S.statusCode(m), m = void 0, h && g.trigger(u ? "ajaxSuccess" : "ajaxError", [S, f, u ? d : b]), v.fireWith(p, [S, k]), h && (g.trigger("ajaxComplete", [S, f]), --C.active || C.event.trigger("ajaxStop")))
                      }
                      return S
                  },
                  getJSON: function(e, t, i) {
                      return C.get(e, t, i, "json")
                  },
                  getScript: function(e, t) {
                      return C.get(e, void 0, t, "script")
                  }
              }), C.each(["get", "post"], (function(e, t) {
                  C[t] = function(e, i, n, a) {
                      return m(i) && (a = a || n, n = i, i = void 0), C.ajax(C.extend({
                          url: e,
                          type: t,
                          dataType: a,
                          data: i,
                          success: n
                      }, C.isPlainObject(e) && e))
                  }
              })), C.ajaxPrefilter((function(e) {
                  var t;
                  for (t in e.headers) "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "")
              })), C._evalUrl = function(e, t, i) {
                  return C.ajax({
                      url: e,
                      type: "GET",
                      dataType: "script",
                      cache: !0,
                      async: !1,
                      global: !1,
                      converters: {
                          "text script": function() {}
                      },
                      dataFilter: function(e) {
                          C.globalEval(e, t, i)
                      }
                  })
              }, C.fn.extend({
                  wrapAll: function(e) {
                      var t;
                      return this[0] && (m(e) && (e = e.call(this[0])), t = C(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map((function() {
                          var e = this;
                          while (e.firstElementChild) e = e.firstElementChild;
                          return e
                      })).append(this)), this
                  },
                  wrapInner: function(e) {
                      return m(e) ? this.each((function(t) {
                          C(this).wrapInner(e.call(this, t))
                      })) : this.each((function() {
                          var t = C(this),
                              i = t.contents();
                          i.length ? i.wrapAll(e) : t.append(e)
                      }))
                  },
                  wrap: function(e) {
                      var t = m(e);
                      return this.each((function(i) {
                          C(this).wrapAll(t ? e.call(this, i) : e)
                      }))
                  },
                  unwrap: function(e) {
                      return this.parent(e).not("body").each((function() {
                          C(this).replaceWith(this.childNodes)
                      })), this
                  }
              }), C.expr.pseudos.hidden = function(e) {
                  return !C.expr.pseudos.visible(e)
              }, C.expr.pseudos.visible = function(e) {
                  return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
              }, C.ajaxSettings.xhr = function() {
                  try {
                      return new a.XMLHttpRequest
                  } catch (e) {}
              };
              var Qt = {
                      0: 200,
                      1223: 204
                  },
                  ei = C.ajaxSettings.xhr();
              v.cors = !!ei && "withCredentials" in ei, v.ajax = ei = !!ei, C.ajaxTransport((function(e) {
                  var t, i;
                  if (v.cors || ei && !e.crossDomain) return {
                      send: function(n, r) {
                          var s, o = e.xhr();
                          if (o.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields)
                              for (s in e.xhrFields) o[s] = e.xhrFields[s];
                          for (s in e.mimeType && o.overrideMimeType && o.overrideMimeType(e.mimeType), e.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest"), n) o.setRequestHeader(s, n[s]);
                          t = function(e) {
                              return function() {
                                  t && (t = i = o.onload = o.onerror = o.onabort = o.ontimeout = o.onreadystatechange = null, "abort" === e ? o.abort() : "error" === e ? "number" !== typeof o.status ? r(0, "error") : r(o.status, o.statusText) : r(Qt[o.status] || o.status, o.statusText, "text" !== (o.responseType || "text") || "string" !== typeof o.responseText ? {
                                      binary: o.response
                                  } : {
                                      text: o.responseText
                                  }, o.getAllResponseHeaders()))
                              }
                          }, o.onload = t(), i = o.onerror = o.ontimeout = t("error"), void 0 !== o.onabort ? o.onabort = i : o.onreadystatechange = function() {
                              4 === o.readyState && a.setTimeout((function() {
                                  t && i()
                              }))
                          }, t = t("abort");
                          try {
                              o.send(e.hasContent && e.data || null)
                          } catch (l) {
                              if (t) throw l
                          }
                      },
                      abort: function() {
                          t && t()
                      }
                  }
              })), C.ajaxPrefilter((function(e) {
                  e.crossDomain && (e.contents.script = !1)
              })), C.ajaxSetup({
                  accepts: {
                      script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                  },
                  contents: {
                      script: /\b(?:java|ecma)script\b/
                  },
                  converters: {
                      "text script": function(e) {
                          return C.globalEval(e), e
                      }
                  }
              }), C.ajaxPrefilter("script", (function(e) {
                  void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET")
              })), C.ajaxTransport("script", (function(e) {
                  var t, i;
                  if (e.crossDomain || e.scriptAttrs) return {
                      send: function(n, a) {
                          t = C("<script>").attr(e.scriptAttrs || {}).prop({
                              charset: e.scriptCharset,
                              src: e.url
                          }).on("load error", i = function(e) {
                              t.remove(), i = null, e && a("error" === e.type ? 404 : 200, e.type)
                          }), y.head.appendChild(t[0])
                      },
                      abort: function() {
                          i && i()
                      }
                  }
              }));
              var ti = [],
                  ii = /(=)\?(?=&|$)|\?\?/;
              C.ajaxSetup({
                  jsonp: "callback",
                  jsonpCallback: function() {
                      var e = ti.pop() || C.expando + "_" + Mt.guid++;
                      return this[e] = !0, e
                  }
              }), C.ajaxPrefilter("json jsonp", (function(e, t, i) {
                  var n, r, s, o = !1 !== e.jsonp && (ii.test(e.url) ? "url" : "string" === typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && ii.test(e.data) && "data");
                  if (o || "jsonp" === e.dataTypes[0]) return n = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, o ? e[o] = e[o].replace(ii, "$1" + n) : !1 !== e.jsonp && (e.url += (It.test(e.url) ? "&" : "?") + e.jsonp + "=" + n), e.converters["script json"] = function() {
                      return s || C.error(n + " was not called"), s[0]
                  }, e.dataTypes[0] = "json", r = a[n], a[n] = function() {
                      s = arguments
                  }, i.always((function() {
                      void 0 === r ? C(a).removeProp(n) : a[n] = r, e[n] && (e.jsonpCallback = t.jsonpCallback, ti.push(n)), s && m(r) && r(s[0]), s = r = void 0
                  })), "script"
              })), v.createHTMLDocument = function() {
                  var e = y.implementation.createHTMLDocument("").body;
                  return e.innerHTML = "<form></form><form></form>", 2 === e.childNodes.length
              }(), C.parseHTML = function(e, t, i) {
                  return "string" !== typeof e ? [] : ("boolean" === typeof t && (i = t, t = !1), t || (v.createHTMLDocument ? (t = y.implementation.createHTMLDocument(""), n = t.createElement("base"), n.href = y.location.href, t.head.appendChild(n)) : t = y), a = R.exec(e), r = !i && [], a ? [t.createElement(a[1])] : (a = Ce([e], t, r), r && r.length && C(r).remove(), C.merge([], a.childNodes)));
                  var n, a, r
              }, C.fn.load = function(e, t, i) {
                  var n, a, r, s = this,
                      o = e.indexOf(" ");
                  return o > -1 && (n = St(e.slice(o)), e = e.slice(0, o)), m(t) ? (i = t, t = void 0) : t && "object" === typeof t && (a = "POST"), s.length > 0 && C.ajax({
                      url: e,
                      type: a || "GET",
                      dataType: "html",
                      data: t
                  }).done((function(e) {
                      r = arguments, s.html(n ? C("<div>").append(C.parseHTML(e)).find(n) : e)
                  })).always(i && function(e, t) {
                      s.each((function() {
                          i.apply(this, r || [e.responseText, t, e])
                      }))
                  }), this
              }, C.expr.pseudos.animated = function(e) {
                  return C.grep(C.timers, (function(t) {
                      return e === t.elem
                  })).length
              }, C.offset = {
                  setOffset: function(e, t, i) {
                      var n, a, r, s, o, l, c, h = C.css(e, "position"),
                          u = C(e),
                          d = {};
                      "static" === h && (e.style.position = "relative"), o = u.offset(), r = C.css(e, "top"), l = C.css(e, "left"), c = ("absolute" === h || "fixed" === h) && (r + l).indexOf("auto") > -1, c ? (n = u.position(), s = n.top, a = n.left) : (s = parseFloat(r) || 0, a = parseFloat(l) || 0), m(t) && (t = t.call(e, i, C.extend({}, o))), null != t.top && (d.top = t.top - o.top + s), null != t.left && (d.left = t.left - o.left + a), "using" in t ? t.using.call(e, d) : u.css(d)
                  }
              }, C.fn.extend({
                  offset: function(e) {
                      if (arguments.length) return void 0 === e ? this : this.each((function(t) {
                          C.offset.setOffset(this, e, t)
                      }));
                      var t, i, n = this[0];
                      return n ? n.getClientRects().length ? (t = n.getBoundingClientRect(), i = n.ownerDocument.defaultView, {
                          top: t.top + i.pageYOffset,
                          left: t.left + i.pageXOffset
                      }) : {
                          top: 0,
                          left: 0
                      } : void 0
                  },
                  position: function() {
                      if (this[0]) {
                          var e, t, i, n = this[0],
                              a = {
                                  top: 0,
                                  left: 0
                              };
                          if ("fixed" === C.css(n, "position")) t = n.getBoundingClientRect();
                          else {
                              t = this.offset(), i = n.ownerDocument, e = n.offsetParent || i.documentElement;
                              while (e && (e === i.body || e === i.documentElement) && "static" === C.css(e, "position")) e = e.parentNode;
                              e && e !== n && 1 === e.nodeType && (a = C(e).offset(), a.top += C.css(e, "borderTopWidth", !0), a.left += C.css(e, "borderLeftWidth", !0))
                          }
                          return {
                              top: t.top - a.top - C.css(n, "marginTop", !0),
                              left: t.left - a.left - C.css(n, "marginLeft", !0)
                          }
                      }
                  },
                  offsetParent: function() {
                      return this.map((function() {
                          var e = this.offsetParent;
                          while (e && "static" === C.css(e, "position")) e = e.offsetParent;
                          return e || he
                      }))
                  }
              }), C.each({
                  scrollLeft: "pageXOffset",
                  scrollTop: "pageYOffset"
              }, (function(e, t) {
                  var i = "pageYOffset" === t;
                  C.fn[e] = function(n) {
                      return U(this, (function(e, n, a) {
                          var r;
                          if (b(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === a) return r ? r[t] : e[n];
                          r ? r.scrollTo(i ? r.pageXOffset : a, i ? a : r.pageYOffset) : e[n] = a
                      }), e, n, arguments.length)
                  }
              })), C.each(["top", "left"], (function(e, t) {
                  C.cssHooks[t] = Ue(v.pixelPosition, (function(e, i) {
                      if (i) return i = Ge(e, t), je.test(i) ? C(e).position()[t] + "px" : i
                  }))
              })), C.each({
                  Height: "height",
                  Width: "width"
              }, (function(e, t) {
                  C.each({
                      padding: "inner" + e,
                      content: t,
                      "": "outer" + e
                  }, (function(i, n) {
                      C.fn[n] = function(a, r) {
                          var s = arguments.length && (i || "boolean" !== typeof a),
                              o = i || (!0 === a || !0 === r ? "margin" : "border");
                          return U(this, (function(t, i, a) {
                              var r;
                              return b(t) ? 0 === n.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (r = t.documentElement, Math.max(t.body["scroll" + e], r["scroll" + e], t.body["offset" + e], r["offset" + e], r["client" + e])) : void 0 === a ? C.css(t, i, o) : C.style(t, i, a, o)
                          }), t, s ? a : void 0, s)
                      }
                  }))
              })), C.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], (function(e, t) {
                  C.fn[t] = function(e) {
                      return this.on(t, e)
                  }
              })), C.fn.extend({
                  bind: function(e, t, i) {
                      return this.on(e, null, t, i)
                  },
                  unbind: function(e, t) {
                      return this.off(e, null, t)
                  },
                  delegate: function(e, t, i, n) {
                      return this.on(t, e, i, n)
                  },
                  undelegate: function(e, t, i) {
                      return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", i)
                  },
                  hover: function(e, t) {
                      return this.mouseenter(e).mouseleave(t || e)
                  }
              }), C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), (function(e, t) {
                  C.fn[t] = function(e, i) {
                      return arguments.length > 0 ? this.on(t, null, e, i) : this.trigger(t)
                  }
              }));
              var ni = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
              C.proxy = function(e, t) {
                  var i, n, a;
                  if ("string" === typeof t && (i = e[t], t = e, e = i), m(e)) return n = l.call(arguments, 2), a = function() {
                      return e.apply(t || this, n.concat(l.call(arguments)))
                  }, a.guid = e.guid = e.guid || C.guid++, a
              }, C.holdReady = function(e) {
                  e ? C.readyWait++ : C.ready(!0)
              }, C.isArray = Array.isArray, C.parseJSON = JSON.parse, C.nodeName = I, C.isFunction = m, C.isWindow = b, C.camelCase = K, C.type = S, C.now = Date.now, C.isNumeric = function(e) {
                  var t = C.type(e);
                  return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
              }, C.trim = function(e) {
                  return null == e ? "" : (e + "").replace(ni, "")
              }, i = [], n = function() {
                  return C
              }.apply(t, i), void 0 === n || (e.exports = n);
              var ai = a.jQuery,
                  ri = a.$;
              return C.noConflict = function(e) {
                  return a.$ === C && (a.$ = ri), e && a.jQuery === C && (a.jQuery = ai), C
              }, "undefined" === typeof r && (a.jQuery = a.$ = C), C
          }))
      },
      7363: (e, t, i) => {
          "use strict";
          i.d(t, {
              WB: () => w
          });
          var n = !1;
          var a = i(499);
          /*!
           * pinia v2.0.12
           * (c) 2022 Eduardo San Martin Morote
           * @license MIT
           */
          let r;
          const s = e => r = e,
              o = Symbol();
          var l;
          (function(e) {
              e["direct"] = "direct", e["patchObject"] = "patch object", e["patchFunction"] = "patch function"
          })(l || (l = {}));
          const c = "undefined" !== typeof window,
              h = (() => "object" === typeof window && window.window === window ? window : "object" === typeof self && self.self === self ? self : "object" === typeof i.g && i.g.global === i.g ? i.g : "object" === typeof globalThis ? globalThis : {
                  HTMLElement: null
              })();

          function u(e, {
              autoBom: t = !1
          } = {}) {
              return t && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([String.fromCharCode(65279), e], {
                  type: e.type
              }) : e
          }

          function d(e, t, i) {
              const n = new XMLHttpRequest;
              n.open("GET", e), n.responseType = "blob", n.onload = function() {
                  v(n.response, t, i)
              }, n.onerror = function() {
                  console.error("could not download file")
              }, n.send()
          }

          function f(e) {
              const t = new XMLHttpRequest;
              t.open("HEAD", e, !1);
              try {
                  t.send()
              } catch (i) {}
              return t.status >= 200 && t.status <= 299
          }

          function p(e) {
              try {
                  e.dispatchEvent(new MouseEvent("click"))
              } catch (t) {
                  const i = document.createEvent("MouseEvents");
                  i.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), e.dispatchEvent(i)
              }
          }
          const g = "object" === typeof navigator ? navigator : {
                  userAgent: ""
              },
              x = (() => /Macintosh/.test(g.userAgent) && /AppleWebKit/.test(g.userAgent) && !/Safari/.test(g.userAgent))(),
              v = c ? "undefined" !== typeof HTMLAnchorElement && "download" in HTMLAnchorElement.prototype && !x ? m : "msSaveOrOpenBlob" in g ? b : y : () => {};

          function m(e, t = "download", i) {
              const n = document.createElement("a");
              n.download = t, n.rel = "noopener", "string" === typeof e ? (n.href = e, n.origin !== location.origin ? f(n.href) ? d(e, t, i) : (n.target = "_blank", p(n)) : p(n)) : (n.href = URL.createObjectURL(e), setTimeout((function() {
                  URL.revokeObjectURL(n.href)
              }), 4e4), setTimeout((function() {
                  p(n)
              }), 0))
          }

          function b(e, t = "download", i) {
              if ("string" === typeof e)
                  if (f(e)) d(e, t, i);
                  else {
                      const t = document.createElement("a");
                      t.href = e, t.target = "_blank", setTimeout((function() {
                          p(t)
                      }))
                  }
              else navigator.msSaveOrOpenBlob(u(e, i), t)
          }

          function y(e, t, i, n) {
              if (n = n || open("", "_blank"), n && (n.document.title = n.document.body.innerText = "downloading..."), "string" === typeof e) return d(e, t, i);
              const a = "application/octet-stream" === e.type,
                  r = /constructor/i.test(String(h.HTMLElement)) || "safari" in h,
                  s = /CriOS\/[\d]+/.test(navigator.userAgent);
              if ((s || a && r || x) && "undefined" !== typeof FileReader) {
                  const t = new FileReader;
                  t.onloadend = function() {
                      let e = t.result;
                      if ("string" !== typeof e) throw n = null, new Error("Wrong reader.result type");
                      e = s ? e : e.replace(/^data:[^;]*;/, "data:attachment/file;"), n ? n.location.href = e : location.assign(e), n = null
                  }, t.readAsDataURL(e)
              } else {
                  const t = URL.createObjectURL(e);
                  n ? n.location.assign(t) : location.href = t, n = null, setTimeout((function() {
                      URL.revokeObjectURL(t)
                  }), 4e4)
              }
          }

          function w() {
              const e = (0, a.B)(!0),
                  t = e.run((() => (0, a.iH)({})));
              let i = [],
                  r = [];
              const l = (0, a.Xl)({
                  install(e) {
                      s(l), n || (l._a = e, e.provide(o, l), e.config.globalProperties.$pinia = l, r.forEach((e => i.push(e))), r = [])
                  },
                  use(e) {
                      return this._a || n ? i.push(e) : r.push(e), this
                  },
                  _p: i,
                  _a: null,
                  _e: e,
                  _s: new Map,
                  state: t
              });
              return l
          }
          Symbol();
          const {
              assign: k
          } = Object
      },
      1639: (e, t) => {
          "use strict";
          t.Z = (e, t) => {
              const i = e.__vccOpts || e;
              for (const [n, a] of t) i[n] = a;
              return i
          }
      },
      8910: (e, t, i) => {
          "use strict";
          i.d(t, {
              p7: () => it,
              r5: () => q
          });
          var n = i(9835),
              a = i(499);
          /*!
           * vue-router v4.0.14
           * (c) 2022 Eduardo San Martin Morote
           * @license MIT
           */
          const r = "function" === typeof Symbol && "symbol" === typeof Symbol.toStringTag,
              s = e => r ? Symbol(e) : "_vr_" + e,
              o = s("rvlm"),
              l = s("rvd"),
              c = s("r"),
              h = s("rl"),
              u = s("rvl"),
              d = "undefined" !== typeof window;

          function f(e) {
              return e.__esModule || r && "Module" === e[Symbol.toStringTag]
          }
          const p = Object.assign;

          function g(e, t) {
              const i = {};
              for (const n in t) {
                  const a = t[n];
                  i[n] = Array.isArray(a) ? a.map(e) : e(a)
              }
              return i
          }
          const x = () => {};
          const v = /\/$/,
              m = e => e.replace(v, "");

          function b(e, t, i = "/") {
              let n, a = {},
                  r = "",
                  s = "";
              const o = t.indexOf("?"),
                  l = t.indexOf("#", o > -1 ? o : 0);
              return o > -1 && (n = t.slice(0, o), r = t.slice(o + 1, l > -1 ? l : t.length), a = e(r)), l > -1 && (n = n || t.slice(0, l), s = t.slice(l, t.length)), n = E(null != n ? n : t, i), {
                  fullPath: n + (r && "?") + r + s,
                  path: n,
                  query: a,
                  hash: s
              }
          }

          function y(e, t) {
              const i = t.query ? e(t.query) : "";
              return t.path + (i && "?") + i + (t.hash || "")
          }

          function w(e, t) {
              return t && e.toLowerCase().startsWith(t.toLowerCase()) ? e.slice(t.length) || "/" : e
          }

          function k(e, t, i) {
              const n = t.matched.length - 1,
                  a = i.matched.length - 1;
              return n > -1 && n === a && S(t.matched[n], i.matched[a]) && A(t.params, i.params) && e(t.query) === e(i.query) && t.hash === i.hash
          }

          function S(e, t) {
              return (e.aliasOf || e) === (t.aliasOf || t)
          }

          function A(e, t) {
              if (Object.keys(e).length !== Object.keys(t).length) return !1;
              for (const i in e)
                  if (!C(e[i], t[i])) return !1;
              return !0
          }

          function C(e, t) {
              return Array.isArray(e) ? T(e, t) : Array.isArray(t) ? T(t, e) : e === t
          }

          function T(e, t) {
              return Array.isArray(t) ? e.length === t.length && e.every(((e, i) => e === t[i])) : 1 === e.length && e[0] === t
          }

          function E(e, t) {
              if (e.startsWith("/")) return e;
              if (!e) return t;
              const i = t.split("/"),
                  n = e.split("/");
              let a, r, s = i.length - 1;
              for (a = 0; a < n.length; a++)
                  if (r = n[a], 1 !== s && "." !== r) {
                      if (".." !== r) break;
                      s--
                  } return i.slice(0, s).join("/") + "/" + n.slice(a - (a === n.length ? 1 : 0)).join("/")
          }
          var L, P;
          (function(e) {
              e["pop"] = "pop", e["push"] = "push"
          })(L || (L = {})),
          function(e) {
              e["back"] = "back", e["forward"] = "forward", e["unknown"] = ""
          }(P || (P = {}));

          function M(e) {
              if (!e)
                  if (d) {
                      const t = document.querySelector("base");
                      e = t && t.getAttribute("href") || "/", e = e.replace(/^\w+:\/\/[^\/]+/, "")
                  } else e = "/";
              return "/" !== e[0] && "#" !== e[0] && (e = "/" + e), m(e)
          }
          const I = /^[^#]+#/;

          function R(e, t) {
              return e.replace(I, "#") + t
          }

          function _(e, t) {
              const i = document.documentElement.getBoundingClientRect(),
                  n = e.getBoundingClientRect();
              return {
                  behavior: t.behavior,
                  left: n.left - i.left - (t.left || 0),
                  top: n.top - i.top - (t.top || 0)
              }
          }
          const O = () => ({
              left: window.pageXOffset,
              top: window.pageYOffset
          });

          function F(e) {
              let t;
              if ("el" in e) {
                  const i = e.el,
                      n = "string" === typeof i && i.startsWith("#");
                  0;
                  const a = "string" === typeof i ? n ? document.getElementById(i.slice(1)) : document.querySelector(i) : i;
                  if (!a) return;
                  t = _(a, e)
              } else t = e;
              "scrollBehavior" in document.documentElement.style ? window.scrollTo(t) : window.scrollTo(null != t.left ? t.left : window.pageXOffset, null != t.top ? t.top : window.pageYOffset)
          }

          function N(e, t) {
              const i = history.state ? history.state.position - t : -1;
              return i + e
          }
          const z = new Map;

          function D(e, t) {
              z.set(e, t)
          }

          function H(e) {
              const t = z.get(e);
              return z.delete(e), t
          }
          let X = () => location.protocol + "//" + location.host;

          function Y(e, t) {
              const {
                  pathname: i,
                  search: n,
                  hash: a
              } = t, r = e.indexOf("#");
              if (r > -1) {
                  let t = a.includes(e.slice(r)) ? e.slice(r).length : 1,
                      i = a.slice(t);
                  return "/" !== i[0] && (i = "/" + i), w(i, "")
              }
              const s = w(i, e);
              return s + n + a
          }

          function B(e, t, i, n) {
              let a = [],
                  r = [],
                  s = null;
              const o = ({
                  state: r
              }) => {
                  const o = Y(e, location),
                      l = i.value,
                      c = t.value;
                  let h = 0;
                  if (r) {
                      if (i.value = o, t.value = r, s && s === l) return void(s = null);
                      h = c ? r.position - c.position : 0
                  } else n(o);
                  a.forEach((e => {
                      e(i.value, l, {
                          delta: h,
                          type: L.pop,
                          direction: h ? h > 0 ? P.forward : P.back : P.unknown
                      })
                  }))
              };

              function l() {
                  s = i.value
              }

              function c(e) {
                  a.push(e);
                  const t = () => {
                      const t = a.indexOf(e);
                      t > -1 && a.splice(t, 1)
                  };
                  return r.push(t), t
              }

              function h() {
                  const {
                      history: e
                  } = window;
                  e.state && e.replaceState(p({}, e.state, {
                      scroll: O()
                  }), "")
              }

              function u() {
                  for (const e of r) e();
                  r = [], window.removeEventListener("popstate", o), window.removeEventListener("beforeunload", h)
              }
              return window.addEventListener("popstate", o), window.addEventListener("beforeunload", h), {
                  pauseListeners: l,
                  listen: c,
                  destroy: u
              }
          }

          function j(e, t, i, n = !1, a = !1) {
              return {
                  back: e,
                  current: t,
                  forward: i,
                  replaced: n,
                  position: window.history.length,
                  scroll: a ? O() : null
              }
          }

          function W(e) {
              const {
                  history: t,
                  location: i
              } = window, n = {
                  value: Y(e, i)
              }, a = {
                  value: t.state
              };

              function r(n, r, s) {
                  const o = e.indexOf("#"),
                      l = o > -1 ? (i.host && document.querySelector("base") ? e : e.slice(o)) + n : X() + e + n;
                  try {
                      t[s ? "replaceState" : "pushState"](r, "", l), a.value = r
                  } catch (c) {
                      console.error(c), i[s ? "replace" : "assign"](l)
                  }
              }

              function s(e, i) {
                  const s = p({}, t.state, j(a.value.back, e, a.value.forward, !0), i, {
                      position: a.value.position
                  });
                  r(e, s, !0), n.value = e
              }

              function o(e, i) {
                  const s = p({}, a.value, t.state, {
                      forward: e,
                      scroll: O()
                  });
                  r(s.current, s, !0);
                  const o = p({}, j(n.value, e, null), {
                      position: s.position + 1
                  }, i);
                  r(e, o, !1), n.value = e
              }
              return a.value || r(n.value, {
                  back: null,
                  current: n.value,
                  forward: null,
                  position: t.length - 1,
                  replaced: !0,
                  scroll: null
              }, !0), {
                  location: n,
                  state: a,
                  push: o,
                  replace: s
              }
          }

          function V(e) {
              e = M(e);
              const t = W(e),
                  i = B(e, t.state, t.location, t.replace);

              function n(e, t = !0) {
                  t || i.pauseListeners(), history.go(e)
              }
              const a = p({
                  location: "",
                  base: e,
                  go: n,
                  createHref: R.bind(null, e)
              }, t, i);
              return Object.defineProperty(a, "location", {
                  enumerable: !0,
                  get: () => t.location.value
              }), Object.defineProperty(a, "state", {
                  enumerable: !0,
                  get: () => t.state.value
              }), a
          }

          function q(e) {
              return e = location.host ? e || location.pathname + location.search : "", e.includes("#") || (e += "#"), V(e)
          }

          function G(e) {
              return "string" === typeof e || e && "object" === typeof e
          }

          function U(e) {
              return "string" === typeof e || "symbol" === typeof e
          }
          const $ = {
                  path: "/",
                  name: void 0,
                  params: {},
                  query: {},
                  hash: "",
                  fullPath: "/",
                  matched: [],
                  meta: {},
                  redirectedFrom: void 0
              },
              Z = s("nf");
          var J;
          (function(e) {
              e[e["aborted"] = 4] = "aborted", e[e["cancelled"] = 8] = "cancelled", e[e["duplicated"] = 16] = "duplicated"
          })(J || (J = {}));

          function K(e, t) {
              return p(new Error, {
                  type: e,
                  [Z]: !0
              }, t)
          }

          function Q(e, t) {
              return e instanceof Error && Z in e && (null == t || !!(e.type & t))
          }
          const ee = "[^/]+?",
              te = {
                  sensitive: !1,
                  strict: !1,
                  start: !0,
                  end: !0
              },
              ie = /[.+*?^${}()[\]/\\]/g;

          function ne(e, t) {
              const i = p({}, te, t),
                  n = [];
              let a = i.start ? "^" : "";
              const r = [];
              for (const h of e) {
                  const e = h.length ? [] : [90];
                  i.strict && !h.length && (a += "/");
                  for (let t = 0; t < h.length; t++) {
                      const n = h[t];
                      let s = 40 + (i.sensitive ? .25 : 0);
                      if (0 === n.type) t || (a += "/"), a += n.value.replace(ie, "\\$&"), s += 40;
                      else if (1 === n.type) {
                          const {
                              value: e,
                              repeatable: i,
                              optional: o,
                              regexp: l
                          } = n;
                          r.push({
                              name: e,
                              repeatable: i,
                              optional: o
                          });
                          const u = l || ee;
                          if (u !== ee) {
                              s += 10;
                              try {
                                  new RegExp(`(${u})`)
                              } catch (c) {
                                  throw new Error(`Invalid custom RegExp for param "${e}" (${u}): ` + c.message)
                              }
                          }
                          let d = i ? `((?:${u})(?:/(?:${u}))*)` : `(${u})`;
                          t || (d = o && h.length < 2 ? `(?:/${d})` : "/" + d), o && (d += "?"), a += d, s += 20, o && (s += -8), i && (s += -20), ".*" === u && (s += -50)
                      }
                      e.push(s)
                  }
                  n.push(e)
              }
              if (i.strict && i.end) {
                  const e = n.length - 1;
                  n[e][n[e].length - 1] += .7000000000000001
              }
              i.strict || (a += "/?"), i.end ? a += "$" : i.strict && (a += "(?:/|$)");
              const s = new RegExp(a, i.sensitive ? "" : "i");

              function o(e) {
                  const t = e.match(s),
                      i = {};
                  if (!t) return null;
                  for (let n = 1; n < t.length; n++) {
                      const e = t[n] || "",
                          a = r[n - 1];
                      i[a.name] = e && a.repeatable ? e.split("/") : e
                  }
                  return i
              }

              function l(t) {
                  let i = "",
                      n = !1;
                  for (const a of e) {
                      n && i.endsWith("/") || (i += "/"), n = !1;
                      for (const e of a)
                          if (0 === e.type) i += e.value;
                          else if (1 === e.type) {
                          const {
                              value: r,
                              repeatable: s,
                              optional: o
                          } = e, l = r in t ? t[r] : "";
                          if (Array.isArray(l) && !s) throw new Error(`Provided param "${r}" is an array but it is not repeatable (* or + modifiers)`);
                          const c = Array.isArray(l) ? l.join("/") : l;
                          if (!c) {
                              if (!o) throw new Error(`Missing required param "${r}"`);
                              a.length < 2 && (i.endsWith("/") ? i = i.slice(0, -1) : n = !0)
                          }
                          i += c
                      }
                  }
                  return i
              }
              return {
                  re: s,
                  score: n,
                  keys: r,
                  parse: o,
                  stringify: l
              }
          }

          function ae(e, t) {
              let i = 0;
              while (i < e.length && i < t.length) {
                  const n = t[i] - e[i];
                  if (n) return n;
                  i++
              }
              return e.length < t.length ? 1 === e.length && 80 === e[0] ? -1 : 1 : e.length > t.length ? 1 === t.length && 80 === t[0] ? 1 : -1 : 0
          }

          function re(e, t) {
              let i = 0;
              const n = e.score,
                  a = t.score;
              while (i < n.length && i < a.length) {
                  const e = ae(n[i], a[i]);
                  if (e) return e;
                  i++
              }
              return a.length - n.length
          }
          const se = {
                  type: 0,
                  value: ""
              },
              oe = /[a-zA-Z0-9_]/;

          function le(e) {
              if (!e) return [
                  []
              ];
              if ("/" === e) return [
                  [se]
              ];
              if (!e.startsWith("/")) throw new Error(`Invalid path "${e}"`);

              function t(e) {
                  throw new Error(`ERR (${i})/"${c}": ${e}`)
              }
              let i = 0,
                  n = i;
              const a = [];
              let r;

              function s() {
                  r && a.push(r), r = []
              }
              let o, l = 0,
                  c = "",
                  h = "";

              function u() {
                  c && (0 === i ? r.push({
                      type: 0,
                      value: c
                  }) : 1 === i || 2 === i || 3 === i ? (r.length > 1 && ("*" === o || "+" === o) && t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`), r.push({
                      type: 1,
                      value: c,
                      regexp: h,
                      repeatable: "*" === o || "+" === o,
                      optional: "*" === o || "?" === o
                  })) : t("Invalid state to consume buffer"), c = "")
              }

              function d() {
                  c += o
              }
              while (l < e.length)
                  if (o = e[l++], "\\" !== o || 2 === i) switch (i) {
                      case 0:
                          "/" === o ? (c && u(), s()) : ":" === o ? (u(), i = 1) : d();
                          break;
                      case 4:
                          d(), i = n;
                          break;
                      case 1:
                          "(" === o ? i = 2 : oe.test(o) ? d() : (u(), i = 0, "*" !== o && "?" !== o && "+" !== o && l--);
                          break;
                      case 2:
                          ")" === o ? "\\" == h[h.length - 1] ? h = h.slice(0, -1) + o : i = 3 : h += o;
                          break;
                      case 3:
                          u(), i = 0, "*" !== o && "?" !== o && "+" !== o && l--, h = "";
                          break;
                      default:
                          t("Unknown state");
                          break
                  } else n = i, i = 4;
              return 2 === i && t(`Unfinished custom RegExp for param "${c}"`), u(), s(), a
          }

          function ce(e, t, i) {
              const n = ne(le(e.path), i);
              const a = p(n, {
                  record: e,
                  parent: t,
                  children: [],
                  alias: []
              });
              return t && !a.record.aliasOf === !t.record.aliasOf && t.children.push(a), a
          }

          function he(e, t) {
              const i = [],
                  n = new Map;

              function a(e) {
                  return n.get(e)
              }

              function r(e, i, n) {
                  const a = !n,
                      o = de(e);
                  o.aliasOf = n && n.record;
                  const c = xe(t, e),
                      h = [o];
                  if ("alias" in e) {
                      const t = "string" === typeof e.alias ? [e.alias] : e.alias;
                      for (const e of t) h.push(p({}, o, {
                          components: n ? n.record.components : o.components,
                          path: e,
                          aliasOf: n ? n.record : o
                      }))
                  }
                  let u, d;
                  for (const t of h) {
                      const {
                          path: h
                      } = t;
                      if (i && "/" !== h[0]) {
                          const e = i.record.path,
                              n = "/" === e[e.length - 1] ? "" : "/";
                          t.path = i.record.path + (h && n + h)
                      }
                      if (u = ce(t, i, c), n ? n.alias.push(u) : (d = d || u, d !== u && d.alias.push(u), a && e.name && !pe(u) && s(e.name)), "children" in o) {
                          const e = o.children;
                          for (let t = 0; t < e.length; t++) r(e[t], u, n && n.children[t])
                      }
                      n = n || u, l(u)
                  }
                  return d ? () => {
                      s(d)
                  } : x
              }

              function s(e) {
                  if (U(e)) {
                      const t = n.get(e);
                      t && (n.delete(e), i.splice(i.indexOf(t), 1), t.children.forEach(s), t.alias.forEach(s))
                  } else {
                      const t = i.indexOf(e);
                      t > -1 && (i.splice(t, 1), e.record.name && n.delete(e.record.name), e.children.forEach(s), e.alias.forEach(s))
                  }
              }

              function o() {
                  return i
              }

              function l(e) {
                  let t = 0;
                  while (t < i.length && re(e, i[t]) >= 0 && (e.record.path !== i[t].record.path || !ve(e, i[t]))) t++;
                  i.splice(t, 0, e), e.record.name && !pe(e) && n.set(e.record.name, e)
              }

              function c(e, t) {
                  let a, r, s, o = {};
                  if ("name" in e && e.name) {
                      if (a = n.get(e.name), !a) throw K(1, {
                          location: e
                      });
                      s = a.record.name, o = p(ue(t.params, a.keys.filter((e => !e.optional)).map((e => e.name))), e.params), r = a.stringify(o)
                  } else if ("path" in e) r = e.path, a = i.find((e => e.re.test(r))), a && (o = a.parse(r), s = a.record.name);
                  else {
                      if (a = t.name ? n.get(t.name) : i.find((e => e.re.test(t.path))), !a) throw K(1, {
                          location: e,
                          currentLocation: t
                      });
                      s = a.record.name, o = p({}, t.params, e.params), r = a.stringify(o)
                  }
                  const l = [];
                  let c = a;
                  while (c) l.unshift(c.record), c = c.parent;
                  return {
                      name: s,
                      path: r,
                      params: o,
                      matched: l,
                      meta: ge(l)
                  }
              }
              return t = xe({
                  strict: !1,
                  end: !0,
                  sensitive: !1
              }, t), e.forEach((e => r(e))), {
                  addRoute: r,
                  resolve: c,
                  removeRoute: s,
                  getRoutes: o,
                  getRecordMatcher: a
              }
          }

          function ue(e, t) {
              const i = {};
              for (const n of t) n in e && (i[n] = e[n]);
              return i
          }

          function de(e) {
              return {
                  path: e.path,
                  redirect: e.redirect,
                  name: e.name,
                  meta: e.meta || {},
                  aliasOf: void 0,
                  beforeEnter: e.beforeEnter,
                  props: fe(e),
                  children: e.children || [],
                  instances: {},
                  leaveGuards: new Set,
                  updateGuards: new Set,
                  enterCallbacks: {},
                  components: "components" in e ? e.components || {} : {
                      default: e.component
                  }
              }
          }

          function fe(e) {
              const t = {},
                  i = e.props || !1;
              if ("component" in e) t.default = i;
              else
                  for (const n in e.components) t[n] = "boolean" === typeof i ? i : i[n];
              return t
          }

          function pe(e) {
              while (e) {
                  if (e.record.aliasOf) return !0;
                  e = e.parent
              }
              return !1
          }

          function ge(e) {
              return e.reduce(((e, t) => p(e, t.meta)), {})
          }

          function xe(e, t) {
              const i = {};
              for (const n in e) i[n] = n in t ? t[n] : e[n];
              return i
          }

          function ve(e, t) {
              return t.children.some((t => t === e || ve(e, t)))
          }
          const me = /#/g,
              be = /&/g,
              ye = /\//g,
              we = /=/g,
              ke = /\?/g,
              Se = /\+/g,
              Ae = /%5B/g,
              Ce = /%5D/g,
              Te = /%5E/g,
              Ee = /%60/g,
              Le = /%7B/g,
              Pe = /%7C/g,
              Me = /%7D/g,
              Ie = /%20/g;

          function Re(e) {
              return encodeURI("" + e).replace(Pe, "|").replace(Ae, "[").replace(Ce, "]")
          }

          function _e(e) {
              return Re(e).replace(Le, "{").replace(Me, "}").replace(Te, "^")
          }

          function Oe(e) {
              return Re(e).replace(Se, "%2B").replace(Ie, "+").replace(me, "%23").replace(be, "%26").replace(Ee, "`").replace(Le, "{").replace(Me, "}").replace(Te, "^")
          }

          function Fe(e) {
              return Oe(e).replace(we, "%3D")
          }

          function Ne(e) {
              return Re(e).replace(me, "%23").replace(ke, "%3F")
          }

          function ze(e) {
              return null == e ? "" : Ne(e).replace(ye, "%2F")
          }

          function De(e) {
              try {
                  return decodeURIComponent("" + e)
              } catch (t) {}
              return "" + e
          }

          function He(e) {
              const t = {};
              if ("" === e || "?" === e) return t;
              const i = "?" === e[0],
                  n = (i ? e.slice(1) : e).split("&");
              for (let a = 0; a < n.length; ++a) {
                  const e = n[a].replace(Se, " "),
                      i = e.indexOf("="),
                      r = De(i < 0 ? e : e.slice(0, i)),
                      s = i < 0 ? null : De(e.slice(i + 1));
                  if (r in t) {
                      let e = t[r];
                      Array.isArray(e) || (e = t[r] = [e]), e.push(s)
                  } else t[r] = s
              }
              return t
          }

          function Xe(e) {
              let t = "";
              for (let i in e) {
                  const n = e[i];
                  if (i = Fe(i), null == n) {
                      void 0 !== n && (t += (t.length ? "&" : "") + i);
                      continue
                  }
                  const a = Array.isArray(n) ? n.map((e => e && Oe(e))) : [n && Oe(n)];
                  a.forEach((e => {
                      void 0 !== e && (t += (t.length ? "&" : "") + i, null != e && (t += "=" + e))
                  }))
              }
              return t
          }

          function Ye(e) {
              const t = {};
              for (const i in e) {
                  const n = e[i];
                  void 0 !== n && (t[i] = Array.isArray(n) ? n.map((e => null == e ? null : "" + e)) : null == n ? n : "" + n)
              }
              return t
          }

          function Be() {
              let e = [];

              function t(t) {
                  return e.push(t), () => {
                      const i = e.indexOf(t);
                      i > -1 && e.splice(i, 1)
                  }
              }

              function i() {
                  e = []
              }
              return {
                  add: t,
                  list: () => e,
                  reset: i
              }
          }

          function je(e, t, i, n, a) {
              const r = n && (n.enterCallbacks[a] = n.enterCallbacks[a] || []);
              return () => new Promise(((s, o) => {
                  const l = e => {
                          !1 === e ? o(K(4, {
                              from: i,
                              to: t
                          })) : e instanceof Error ? o(e) : G(e) ? o(K(2, {
                              from: t,
                              to: e
                          })) : (r && n.enterCallbacks[a] === r && "function" === typeof e && r.push(e), s())
                      },
                      c = e.call(n && n.instances[a], t, i, l);
                  let h = Promise.resolve(c);
                  e.length < 3 && (h = h.then(l)), h.catch((e => o(e)))
              }))
          }

          function We(e, t, i, n) {
              const a = [];
              for (const r of e)
                  for (const e in r.components) {
                      let s = r.components[e];
                      if ("beforeRouteEnter" === t || r.instances[e])
                          if (Ve(s)) {
                              const o = s.__vccOpts || s,
                                  l = o[t];
                              l && a.push(je(l, i, n, r, e))
                          } else {
                              let o = s();
                              0, a.push((() => o.then((a => {
                                  if (!a) return Promise.reject(new Error(`Couldn't resolve component "${e}" at "${r.path}"`));
                                  const s = f(a) ? a.default : a;
                                  r.components[e] = s;
                                  const o = s.__vccOpts || s,
                                      l = o[t];
                                  return l && je(l, i, n, r, e)()
                              }))))
                          }
                  }
              return a
          }

          function Ve(e) {
              return "object" === typeof e || "displayName" in e || "props" in e || "__vccOpts" in e
          }

          function qe(e) {
              const t = (0, n.f3)(c),
                  i = (0, n.f3)(h),
                  r = (0, n.Fl)((() => t.resolve((0, a.SU)(e.to)))),
                  s = (0, n.Fl)((() => {
                      const {
                          matched: e
                      } = r.value, {
                          length: t
                      } = e, n = e[t - 1], a = i.matched;
                      if (!n || !a.length) return -1;
                      const s = a.findIndex(S.bind(null, n));
                      if (s > -1) return s;
                      const o = Je(e[t - 2]);
                      return t > 1 && Je(n) === o && a[a.length - 1].path !== o ? a.findIndex(S.bind(null, e[t - 2])) : s
                  })),
                  o = (0, n.Fl)((() => s.value > -1 && Ze(i.params, r.value.params))),
                  l = (0, n.Fl)((() => s.value > -1 && s.value === i.matched.length - 1 && A(i.params, r.value.params)));

              function u(i = {}) {
                  return $e(i) ? t[(0, a.SU)(e.replace) ? "replace" : "push"]((0, a.SU)(e.to)).catch(x) : Promise.resolve()
              }
              return {
                  route: r,
                  href: (0, n.Fl)((() => r.value.href)),
                  isActive: o,
                  isExactActive: l,
                  navigate: u
              }
          }
          const Ge = (0, n.aZ)({
                  name: "RouterLink",
                  props: {
                      to: {
                          type: [String, Object],
                          required: !0
                      },
                      replace: Boolean,
                      activeClass: String,
                      exactActiveClass: String,
                      custom: Boolean,
                      ariaCurrentValue: {
                          type: String,
                          default: "page"
                      }
                  },
                  useLink: qe,
                  setup(e, {
                      slots: t
                  }) {
                      const i = (0, a.qj)(qe(e)),
                          {
                              options: r
                          } = (0, n.f3)(c),
                          s = (0, n.Fl)((() => ({
                              [Ke(e.activeClass, r.linkActiveClass, "router-link-active")]: i.isActive,
                              [Ke(e.exactActiveClass, r.linkExactActiveClass, "router-link-exact-active")]: i.isExactActive
                          })));
                      return () => {
                          const a = t.default && t.default(i);
                          return e.custom ? a : (0, n.h)("a", {
                              "aria-current": i.isExactActive ? e.ariaCurrentValue : null,
                              href: i.href,
                              onClick: i.navigate,
                              class: s.value
                          }, a)
                      }
                  }
              }),
              Ue = Ge;

          function $e(e) {
              if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && !e.defaultPrevented && (void 0 === e.button || 0 === e.button)) {
                  if (e.currentTarget && e.currentTarget.getAttribute) {
                      const t = e.currentTarget.getAttribute("target");
                      if (/\b_blank\b/i.test(t)) return
                  }
                  return e.preventDefault && e.preventDefault(), !0
              }
          }

          function Ze(e, t) {
              for (const i in t) {
                  const n = t[i],
                      a = e[i];
                  if ("string" === typeof n) {
                      if (n !== a) return !1
                  } else if (!Array.isArray(a) || a.length !== n.length || n.some(((e, t) => e !== a[t]))) return !1
              }
              return !0
          }

          function Je(e) {
              return e ? e.aliasOf ? e.aliasOf.path : e.path : ""
          }
          const Ke = (e, t, i) => null != e ? e : null != t ? t : i,
              Qe = (0, n.aZ)({
                  name: "RouterView",
                  inheritAttrs: !1,
                  props: {
                      name: {
                          type: String,
                          default: "default"
                      },
                      route: Object
                  },
                  setup(e, {
                      attrs: t,
                      slots: i
                  }) {
                      const r = (0, n.f3)(u),
                          s = (0, n.Fl)((() => e.route || r.value)),
                          c = (0, n.f3)(l, 0),
                          h = (0, n.Fl)((() => s.value.matched[c]));
                      (0, n.JJ)(l, c + 1), (0, n.JJ)(o, h), (0, n.JJ)(u, s);
                      const d = (0, a.iH)();
                      return (0, n.YP)((() => [d.value, h.value, e.name]), (([e, t, i], [n, a, r]) => {
                          t && (t.instances[i] = e, a && a !== t && e && e === n && (t.leaveGuards.size || (t.leaveGuards = a.leaveGuards), t.updateGuards.size || (t.updateGuards = a.updateGuards))), !e || !t || a && S(t, a) && n || (t.enterCallbacks[i] || []).forEach((t => t(e)))
                      }), {
                          flush: "post"
                      }), () => {
                          const a = s.value,
                              r = h.value,
                              o = r && r.components[e.name],
                              l = e.name;
                          if (!o) return et(i.default, {
                              Component: o,
                              route: a
                          });
                          const c = r.props[e.name],
                              u = c ? !0 === c ? a.params : "function" === typeof c ? c(a) : c : null,
                              f = e => {
                                  e.component.isUnmounted && (r.instances[l] = null)
                              },
                              g = (0, n.h)(o, p({}, u, t, {
                                  onVnodeUnmounted: f,
                                  ref: d
                              }));
                          return et(i.default, {
                              Component: g,
                              route: a
                          }) || g
                      }
                  }
              });

          function et(e, t) {
              if (!e) return null;
              const i = e(t);
              return 1 === i.length ? i[0] : i
          }
          const tt = Qe;

          function it(e) {
              const t = he(e.routes, e),
                  i = e.parseQuery || He,
                  r = e.stringifyQuery || Xe,
                  s = e.history;
              const o = Be(),
                  l = Be(),
                  f = Be(),
                  v = (0, a.XI)($);
              let m = $;
              d && e.scrollBehavior && "scrollRestoration" in history && (history.scrollRestoration = "manual");
              const w = g.bind(null, (e => "" + e)),
                  S = g.bind(null, ze),
                  A = g.bind(null, De);

              function C(e, i) {
                  let n, a;
                  return U(e) ? (n = t.getRecordMatcher(e), a = i) : a = e, t.addRoute(a, n)
              }

              function T(e) {
                  const i = t.getRecordMatcher(e);
                  i && t.removeRoute(i)
              }

              function E() {
                  return t.getRoutes().map((e => e.record))
              }

              function P(e) {
                  return !!t.getRecordMatcher(e)
              }

              function M(e, n) {
                  if (n = p({}, n || v.value), "string" === typeof e) {
                      const a = b(i, e, n.path),
                          r = t.resolve({
                              path: a.path
                          }, n),
                          o = s.createHref(a.fullPath);
                      return p(a, r, {
                          params: A(r.params),
                          hash: De(a.hash),
                          redirectedFrom: void 0,
                          href: o
                      })
                  }
                  let a;
                  if ("path" in e) a = p({}, e, {
                      path: b(i, e.path, n.path).path
                  });
                  else {
                      const t = p({}, e.params);
                      for (const e in t) null == t[e] && delete t[e];
                      a = p({}, e, {
                          params: S(e.params)
                      }), n.params = S(n.params)
                  }
                  const o = t.resolve(a, n),
                      l = e.hash || "";
                  o.params = w(A(o.params));
                  const c = y(r, p({}, e, {
                          hash: _e(l),
                          path: o.path
                      })),
                      h = s.createHref(c);
                  return p({
                      fullPath: c,
                      hash: l,
                      query: r === Xe ? Ye(e.query) : e.query || {}
                  }, o, {
                      redirectedFrom: void 0,
                      href: h
                  })
              }

              function I(e) {
                  return "string" === typeof e ? b(i, e, v.value.path) : p({}, e)
              }

              function R(e, t) {
                  if (m !== e) return K(8, {
                      from: t,
                      to: e
                  })
              }

              function _(e) {
                  return Y(e)
              }

              function z(e) {
                  return _(p(I(e), {
                      replace: !0
                  }))
              }

              function X(e) {
                  const t = e.matched[e.matched.length - 1];
                  if (t && t.redirect) {
                      const {
                          redirect: i
                      } = t;
                      let n = "function" === typeof i ? i(e) : i;
                      return "string" === typeof n && (n = n.includes("?") || n.includes("#") ? n = I(n) : {
                          path: n
                      }, n.params = {}), p({
                          query: e.query,
                          hash: e.hash,
                          params: e.params
                      }, n)
                  }
              }

              function Y(e, t) {
                  const i = m = M(e),
                      n = v.value,
                      a = e.state,
                      s = e.force,
                      o = !0 === e.replace,
                      l = X(i);
                  if (l) return Y(p(I(l), {
                      state: a,
                      force: s,
                      replace: o
                  }), t || i);
                  const c = i;
                  let h;
                  return c.redirectedFrom = t, !s && k(r, n, i) && (h = K(16, {
                      to: c,
                      from: n
                  }), ae(n, n, !0, !1)), (h ? Promise.resolve(h) : j(c, n)).catch((e => Q(e) ? Q(e, 2) ? e : ne(e) : te(e, c, n))).then((e => {
                      if (e) {
                          if (Q(e, 2)) return Y(p(I(e.to), {
                              state: a,
                              force: s,
                              replace: o
                          }), t || c)
                      } else e = V(c, n, !0, o, a);
                      return W(c, n, e), e
                  }))
              }

              function B(e, t) {
                  const i = R(e, t);
                  return i ? Promise.reject(i) : Promise.resolve()
              }

              function j(e, t) {
                  let i;
                  const [n, a, r] = at(e, t);
                  i = We(n.reverse(), "beforeRouteLeave", e, t);
                  for (const o of n) o.leaveGuards.forEach((n => {
                      i.push(je(n, e, t))
                  }));
                  const s = B.bind(null, e, t);
                  return i.push(s), nt(i).then((() => {
                      i = [];
                      for (const n of o.list()) i.push(je(n, e, t));
                      return i.push(s), nt(i)
                  })).then((() => {
                      i = We(a, "beforeRouteUpdate", e, t);
                      for (const n of a) n.updateGuards.forEach((n => {
                          i.push(je(n, e, t))
                      }));
                      return i.push(s), nt(i)
                  })).then((() => {
                      i = [];
                      for (const n of e.matched)
                          if (n.beforeEnter && !t.matched.includes(n))
                              if (Array.isArray(n.beforeEnter))
                                  for (const a of n.beforeEnter) i.push(je(a, e, t));
                              else i.push(je(n.beforeEnter, e, t));
                      return i.push(s), nt(i)
                  })).then((() => (e.matched.forEach((e => e.enterCallbacks = {})), i = We(r, "beforeRouteEnter", e, t), i.push(s), nt(i)))).then((() => {
                      i = [];
                      for (const n of l.list()) i.push(je(n, e, t));
                      return i.push(s), nt(i)
                  })).catch((e => Q(e, 8) ? e : Promise.reject(e)))
              }

              function W(e, t, i) {
                  for (const n of f.list()) n(e, t, i)
              }

              function V(e, t, i, n, a) {
                  const r = R(e, t);
                  if (r) return r;
                  const o = t === $,
                      l = d ? history.state : {};
                  i && (n || o ? s.replace(e.fullPath, p({
                      scroll: o && l && l.scroll
                  }, a)) : s.push(e.fullPath, a)), v.value = e, ae(e, t, i, o), ne()
              }
              let q;

              function G() {
                  q = s.listen(((e, t, i) => {
                      const n = M(e),
                          a = X(n);
                      if (a) return void Y(p(a, {
                          replace: !0
                      }), n).catch(x);
                      m = n;
                      const r = v.value;
                      d && D(N(r.fullPath, i.delta), O()), j(n, r).catch((e => Q(e, 12) ? e : Q(e, 2) ? (Y(e.to, n).then((e => {
                          Q(e, 20) && !i.delta && i.type === L.pop && s.go(-1, !1)
                      })).catch(x), Promise.reject()) : (i.delta && s.go(-i.delta, !1), te(e, n, r)))).then((e => {
                          e = e || V(n, r, !1), e && (i.delta ? s.go(-i.delta, !1) : i.type === L.pop && Q(e, 20) && s.go(-1, !1)), W(n, r, e)
                      })).catch(x)
                  }))
              }
              let Z, J = Be(),
                  ee = Be();

              function te(e, t, i) {
                  ne(e);
                  const n = ee.list();
                  return n.length ? n.forEach((n => n(e, t, i))) : console.error(e), Promise.reject(e)
              }

              function ie() {
                  return Z && v.value !== $ ? Promise.resolve() : new Promise(((e, t) => {
                      J.add([e, t])
                  }))
              }

              function ne(e) {
                  return Z || (Z = !e, G(), J.list().forEach((([t, i]) => e ? i(e) : t())), J.reset()), e
              }

              function ae(t, i, a, r) {
                  const {
                      scrollBehavior: s
                  } = e;
                  if (!d || !s) return Promise.resolve();
                  const o = !a && H(N(t.fullPath, 0)) || (r || !a) && history.state && history.state.scroll || null;
                  return (0, n.Y3)().then((() => s(t, i, o))).then((e => e && F(e))).catch((e => te(e, t, i)))
              }
              const re = e => s.go(e);
              let se;
              const oe = new Set,
                  le = {
                      currentRoute: v,
                      addRoute: C,
                      removeRoute: T,
                      hasRoute: P,
                      getRoutes: E,
                      resolve: M,
                      options: e,
                      push: _,
                      replace: z,
                      go: re,
                      back: () => re(-1),
                      forward: () => re(1),
                      beforeEach: o.add,
                      beforeResolve: l.add,
                      afterEach: f.add,
                      onError: ee.add,
                      isReady: ie,
                      install(e) {
                          const t = this;
                          e.component("RouterLink", Ue), e.component("RouterView", tt), e.config.globalProperties.$router = t, Object.defineProperty(e.config.globalProperties, "$route", {
                              enumerable: !0,
                              get: () => (0, a.SU)(v)
                          }), d && !se && v.value === $ && (se = !0, _(s.location).catch((e => {
                              0
                          })));
                          const i = {};
                          for (const a in $) i[a] = (0, n.Fl)((() => v.value[a]));
                          e.provide(c, t), e.provide(h, (0, a.qj)(i)), e.provide(u, v);
                          const r = e.unmount;
                          oe.add(e), e.unmount = function() {
                              oe.delete(e), oe.size < 1 && (m = $, q && q(), v.value = $, se = !1, Z = !1), r()
                          }
                      }
                  };
              return le
          }

          function nt(e) {
              return e.reduce(((e, t) => e.then((() => t()))), Promise.resolve())
          }

          function at(e, t) {
              const i = [],
                  n = [],
                  a = [],
                  r = Math.max(t.matched.length, e.matched.length);
              for (let s = 0; s < r; s++) {
                  const r = t.matched[s];
                  r && (e.matched.find((e => S(e, r))) ? n.push(r) : i.push(r));
                  const o = e.matched[s];
                  o && (t.matched.find((e => S(e, o))) || a.push(o))
              }
              return [i, n, a]
          }
      },
      7092: (e, t, i) => {
          e.exports = function(e) {
              var t = {};

              function i(n) {
                  if (t[n]) return t[n].exports;
                  var a = t[n] = {
                      i: n,
                      l: !1,
                      exports: {}
                  };
                  return e[n].call(a.exports, a, a.exports, i), a.l = !0, a.exports
              }
              return i.m = e, i.c = t, i.d = function(e, t, n) {
                  i.o(e, t) || Object.defineProperty(e, t, {
                      enumerable: !0,
                      get: n
                  })
              }, i.r = function(e) {
                  "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                      value: "Module"
                  }), Object.defineProperty(e, "__esModule", {
                      value: !0
                  })
              }, i.t = function(e, t) {
                  if (1 & t && (e = i(e)), 8 & t) return e;
                  if (4 & t && "object" === typeof e && e && e.__esModule) return e;
                  var n = Object.create(null);
                  if (i.r(n), Object.defineProperty(n, "default", {
                          enumerable: !0,
                          value: e
                      }), 2 & t && "string" != typeof e)
                      for (var a in e) i.d(n, a, function(t) {
                          return e[t]
                      }.bind(null, a));
                  return n
              }, i.n = function(e) {
                  var t = e && e.__esModule ? function() {
                      return e["default"]
                  } : function() {
                      return e
                  };
                  return i.d(t, "a", t), t
              }, i.o = function(e, t) {
                  return Object.prototype.hasOwnProperty.call(e, t)
              }, i.p = "", i(i.s = "fb15")
          }({
              8875: function(e, t, i) {
                  var n, a, r;
                  (function(i, s) {
                      a = [], n = s, r = "function" === typeof n ? n.apply(t, a) : n, void 0 === r || (e.exports = r)
                  })("undefined" !== typeof self && self, (function() {
                      function e() {
                          var t = Object.getOwnPropertyDescriptor(document, "currentScript");
                          if (!t && "currentScript" in document && document.currentScript) return document.currentScript;
                          if (t && t.get !== e && document.currentScript) return document.currentScript;
                          try {
                              throw new Error
                          } catch (f) {
                              var i, n, a, r = /.*at [^(]*\((.*):(.+):(.+)\)$/gi,
                                  s = /@([^@]*):(\d+):(\d+)\s*$/gi,
                                  o = r.exec(f.stack) || s.exec(f.stack),
                                  l = o && o[1] || !1,
                                  c = o && o[2] || !1,
                                  h = document.location.href.replace(document.location.hash, ""),
                                  u = document.getElementsByTagName("script");
                              l === h && (i = document.documentElement.outerHTML, n = new RegExp("(?:[^\\n]+?\\n){0," + (c - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i"), a = i.replace(n, "$1").trim());
                              for (var d = 0; d < u.length; d++) {
                                  if ("interactive" === u[d].readyState) return u[d];
                                  if (u[d].src === l) return u[d];
                                  if (l === h && u[d].innerHTML && u[d].innerHTML.trim() === a) return u[d]
                              }
                              return null
                          }
                      }
                      return e
                  }))
              },
              "8bbf": function(e, t) {
                  e.exports = i(9302)
              },
              "95e6": function(e, t) {
                  e.exports = i(0)
              },
              fb15: function(e, t, i) {
                  "use strict";
                  if (i.r(t), "undefined" !== typeof window) {
                      var n = window.document.currentScript,
                          a = i("8875");
                      n = a(), "currentScript" in document || Object.defineProperty(document, "currentScript", {
                          get: a
                      });
                      var r = n && n.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
                      r && (i.p = r[1])
                  }
                  var s = i("8bbf"),
                      o = i("95e6"),
                      l = i.n(o);
                  const c = ["animationEnd", "beforeMount", "mounted", "updated", "click", "mouseMove", "legendClick", "markerClick", "selection", "dataPointSelection", "dataPointMouseEnter", "dataPointMouseLeave", "beforeZoom", "beforeResetZoom", "zoomed", "scrolled", "scrolled"],
                      h = Object(s["defineComponent"])({
                          name: "apexchart",
                          props: {
                              options: {
                                  type: Object
                              },
                              type: {
                                  type: String
                              },
                              series: {
                                  type: Array,
                                  required: !0
                              },
                              width: {
                                  default: "100%"
                              },
                              height: {
                                  default: "auto"
                              }
                          },
                          emits: c,
                          setup(e, {
                              emit: t
                          }) {
                              const i = Object(s["ref"])(null),
                                  n = Object(s["ref"])(null),
                                  a = e => e && "object" === typeof e && !Array.isArray(e) && null != e,
                                  r = (e, t) => {
                                      "function" !== typeof Object.assign && function() {
                                          Object.assign = function(e) {
                                              if (void 0 === e || null === e) throw new TypeError("Cannot convert undefined or null to object");
                                              let t = Object(e);
                                              for (let i = 1; i < arguments.length; i++) {
                                                  let e = arguments[i];
                                                  if (void 0 !== e && null !== e)
                                                      for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                                              }
                                              return t
                                          }
                                      }();
                                      let i = Object.assign({}, e);
                                      return a(e) && a(t) && Object.keys(t).forEach((n => {
                                          a(t[n]) ? n in e ? i[n] = r(e[n], t[n]) : Object.assign(i, {
                                              [n]: t[n]
                                          }) : Object.assign(i, {
                                              [n]: t[n]
                                          })
                                      })), i
                                  },
                                  o = async () => {
                                      await Object(s["nextTick"])();
                                      const a = {
                                          chart: {
                                              type: e.type || e.options.chart.type || "line",
                                              height: e.height,
                                              width: e.width,
                                              events: {}
                                          },
                                          series: e.series
                                      };
                                      c.forEach((e => {
                                          let i = (...i) => t(e, ...i);
                                          a.chart.events[e] = i
                                      }));
                                      const o = r(e.options, a);
                                      return n.value = new l.a(i.value, o), n.value.render()
                                  }, h = () => (u(), o()), u = () => {
                                      n.value.destroy()
                                  }, d = (e, t) => n.value.updateSeries(e, t), f = (e, t, i, a) => n.value.updateOptions(e, t, i, a), p = e => n.value.toggleSeries(e), g = e => {
                                      n.value.showSeries(e)
                                  }, x = e => {
                                      n.value.hideSeries(e)
                                  }, v = (e, t) => n.value.appendSeries(e, t), m = () => {
                                      n.value.resetSeries()
                                  }, b = (e, t) => {
                                      n.value.toggleDataPointSelection(e, t)
                                  }, y = e => n.value.appendData(e), w = (e, t) => n.value.zoomX(e, t), k = () => n.value.dataURI(), S = (e, t) => {
                                      n.value.addXaxisAnnotation(e, t)
                                  }, A = (e, t) => {
                                      n.value.addYaxisAnnotation(e, t)
                                  }, C = (e, t) => {
                                      n.value.addPointAnnotation(e, t)
                                  }, T = (e, t) => {
                                      n.value.removeAnnotation(e, t)
                                  }, E = () => {
                                      n.value.clearAnnotations()
                                  };
                              Object(s["onBeforeMount"])((() => {
                                  window.ApexCharts = l.a
                              })), Object(s["onMounted"])((() => {
                                  i.value = Object(s["getCurrentInstance"])().proxy.$el, o()
                              })), Object(s["onBeforeUnmount"])((() => {
                                  n.value && u()
                              }));
                              const L = Object(s["toRefs"])(e);
                              return Object(s["watch"])(L.options, (() => {
                                  !n.value && e.options ? o() : n.value.updateOptions(e.options)
                              })), Object(s["watch"])(L.series, (() => {
                                  !n.value && e.series ? o() : n.value.updateSeries(e.series)
                              }), {
                                  deep: !0
                              }), Object(s["watch"])(L.type, (() => {
                                  h()
                              })), Object(s["watch"])(L.width, (() => {
                                  h()
                              })), Object(s["watch"])(L.height, (() => {
                                  h()
                              })), {
                                  chart: n,
                                  init: o,
                                  refresh: h,
                                  destroy: u,
                                  updateOptions: f,
                                  updateSeries: d,
                                  toggleSeries: p,
                                  showSeries: g,
                                  hideSeries: x,
                                  resetSeries: m,
                                  zoomX: w,
                                  toggleDataPointSelection: b,
                                  appendData: y,
                                  appendSeries: v,
                                  addXaxisAnnotation: S,
                                  addYaxisAnnotation: A,
                                  addPointAnnotation: C,
                                  removeAnnotation: T,
                                  clearAnnotations: E,
                                  dataURI: k
                              }
                          },
                          render() {
                              return Object(s["h"])("div", {
                                  class: "vue-apexcharts"
                              })
                          }
                      });
                  var u = h;
                  const d = e => {
                      e.component(u.name, u)
                  };
                  u.install = d;
                  var f = u;
                  t["default"] = f
              }
          })
      },
      9302: (e, t, i) => {
          "use strict";
          i.r(t), i.d(t, {
              BaseTransition: () => n.P$,
              Comment: () => n.sv,
              EffectScope: () => n.Bj,
              Fragment: () => n.HY,
              KeepAlive: () => n.Ob,
              ReactiveEffect: () => n.qq,
              Static: () => n.qG,
              Suspense: () => n.n4,
              Teleport: () => n.lR,
              Text: () => n.xv,
              Transition: () => n.uT,
              TransitionGroup: () => n.W3,
              VueElement: () => n.a2,
              callWithAsyncErrorHandling: () => n.$d,
              callWithErrorHandling: () => n.KU,
              camelize: () => n._A,
              capitalize: () => n.kC,
              cloneVNode: () => n.Ho,
              compatUtils: () => n.ry,
              compile: () => a,
              computed: () => n.Fl,
              createApp: () => n.ri,
              createBlock: () => n.j4,
              createCommentVNode: () => n.kq,
              createElementBlock: () => n.iD,
              createElementVNode: () => n._,
              createHydrationRenderer: () => n.Eo,
              createPropsRestProxy: () => n.p1,
              createRenderer: () => n.Us,
              createSSRApp: () => n.vr,
              createSlots: () => n.Nv,
              createStaticVNode: () => n.uE,
              createTextVNode: () => n.Uk,
              createVNode: () => n.Wm,
              customRef: () => n.ZM,
              defineAsyncComponent: () => n.RC,
              defineComponent: () => n.aZ,
              defineCustomElement: () => n.MW,
              defineEmits: () => n.Bz,
              defineExpose: () => n.WY,
              defineProps: () => n.yb,
              defineSSRCustomElement: () => n.Ah,
              devtools: () => n.mW,
              effect: () => n.cE,
              effectScope: () => n.B,
              getCurrentInstance: () => n.FN,
              getCurrentScope: () => n.nZ,
              getTransitionRawChildren: () => n.Q6,
              guardReactiveProps: () => n.F4,
              h: () => n.h,
              handleError: () => n.S3,
              hydrate: () => n.ZB,
              initCustomFormatter: () => n.Mr,
              initDirectivesForSSR: () => n.Nd,
              inject: () => n.f3,
              isMemoSame: () => n.nQ,
              isProxy: () => n.X3,
              isReactive: () => n.PG,
              isReadonly: () => n.$y,
              isRef: () => n.dq,
              isRuntimeOnly: () => n.of,
              isShallow: () => n.yT,
              isVNode: () => n.lA,
              markRaw: () => n.Xl,
              mergeDefaults: () => n.u_,
              mergeProps: () => n.dG,
              nextTick: () => n.Y3,
              normalizeClass: () => n.C_,
              normalizeProps: () => n.vs,
              normalizeStyle: () => n.j5,
              onActivated: () => n.dl,
              onBeforeMount: () => n.wF,
              onBeforeUnmount: () => n.Jd,
              onBeforeUpdate: () => n.Xn,
              onDeactivated: () => n.se,
              onErrorCaptured: () => n.d1,
              onMounted: () => n.bv,
              onRenderTracked: () => n.bT,
              onRenderTriggered: () => n.Yq,
              onScopeDispose: () => n.EB,
              onServerPrefetch: () => n.vl,
              onUnmounted: () => n.SK,
              onUpdated: () => n.ic,
              openBlock: () => n.wg,
              popScopeId: () => n.Cn,
              provide: () => n.JJ,
              proxyRefs: () => n.WL,
              pushScopeId: () => n.dD,
              queuePostFlushCb: () => n.qb,
              reactive: () => n.qj,
              readonly: () => n.OT,
              ref: () => n.iH,
              registerRuntimeCompiler: () => n.Y1,
              render: () => n.sY,
              renderList: () => n.Ko,
              renderSlot: () => n.WI,
              resolveComponent: () => n.up,
              resolveDirective: () => n.Q2,
              resolveDynamicComponent: () => n.LL,
              resolveFilter: () => n.eq,
              resolveTransitionHooks: () => n.U2,
              setBlockTracking: () => n.qZ,
              setDevtoolsHook: () => n.ec,
              setTransitionHooks: () => n.nK,
              shallowReactive: () => n.Um,
              shallowReadonly: () => n.YS,
              shallowRef: () => n.XI,
              ssrContextKey: () => n.Uc,
              ssrUtils: () => n.G,
              stop: () => n.sT,
              toDisplayString: () => n.zw,
              toHandlerKey: () => n.hR,
              toHandlers: () => n.mx,
              toRaw: () => n.IU,
              toRef: () => n.Vh,
              toRefs: () => n.BK,
              transformVNodeArgs: () => n.C3,
              triggerRef: () => n.oR,
              unref: () => n.SU,
              useAttrs: () => n.l1,
              useCssModule: () => n.fb,
              useCssVars: () => n.sj,
              useSSRContext: () => n.Zq,
              useSlots: () => n.Rr,
              useTransitionState: () => n.Y8,
              vModelCheckbox: () => n.e8,
              vModelDynamic: () => n.YZ,
              vModelRadio: () => n.G2,
              vModelSelect: () => n.bM,
              vModelText: () => n.nr,
              vShow: () => n.F8,
              version: () => n.i8,
              warn: () => n.ZK,
              watch: () => n.YP,
              watchEffect: () => n.m0,
              watchPostEffect: () => n.Rh,
              watchSyncEffect: () => n.yX,
              withAsyncContext: () => n.mv,
              withCtx: () => n.w5,
              withDefaults: () => n.b9,
              withDirectives: () => n.wy,
              withKeys: () => n.D2,
              withMemo: () => n.MX,
              withModifiers: () => n.iM,
              withScopeId: () => n.HX
          });
          var n = i(1957);
          const a = () => {
              0
          }
      },
      3340: (e, t, i) => {
          "use strict";

          function n(e) {
              return e
          }

          function a(e) {
              return e
          }

          function r(e) {
              return e
          }
          i.d(t, {
              BC: () => a,
              h: () => r,
              xr: () => n
          })
      },
      8593: e => {
          "use strict";
          e.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')
      }
  }
]);